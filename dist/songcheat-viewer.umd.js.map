{"version":3,"file":"songcheat-viewer.umd.js","sources":["../../songcheat-core/dist/songcheat-core.esm.js","../../songcheat-chordpix/dist/songcheat-chordpix.esm.js","../../songcheat-vextab/dist/songcheat-vextab.esm.js","../../songcheat-player/node_modules/@mohayonao/wave-tables/index.js","../../songcheat-player/src/player.js","../src/player_ui.js","../index.js"],"sourcesContent":["/**\n * SongCheat Core 1.0.0 built on Tue Dec 26 2017 01:23:29 GMT+0100 (CET).\n  * Copyright (c) 2017 Louis Antoine <louisantoinem@gmail.com>\n *\n * http://www.songcheat.io  http://github.com/louisantoinem/songcheat-core\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Utils = function () {\n  function Utils() {\n    classCallCheck(this, Utils);\n  }\n\n  createClass(Utils, null, [{\n    key: 'arraysEqual',\n\n    /**\n    * Array helper functions\n    */\n\n    value: function arraysEqual(a, b) {\n      if (a === b) return true;\n      if (a === null || b === null) return false;\n      if (a.length !== b.length) return false;\n      for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n      }\n      return true;\n    }\n\n    /**\n    * String helper functions\n    */\n\n  }, {\n    key: 'title',\n    value: function title(str) {\n      return '\\n' + this.spaces(str.length + 8, '*') + '\\n*** ' + str + ' ***\\n' + this.spaces(str.length + 8, '*') + '\\n';\n    }\n  }, {\n    key: 'firstUpper',\n    value: function firstUpper(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n  }, {\n    key: 'camelCase',\n    value: function camelCase(s, firstUpper) {\n      var camel = s.toLowerCase().replace(/(?:[-_])(.)/g, function (match, group1) {\n        return group1.toUpperCase();\n      });\n      return firstUpper ? camel.charAt(0).toUpperCase() + camel.slice(1) : camel;\n    }\n  }, {\n    key: 'spaces',\n    value: function spaces(length, char) {\n      if (isNaN(length) || !isFinite(length) || length < 0) throw new Error('Length must a positive finite number');\n      var s = '';\n      for (var i = 0; i < length; i++) {\n        s += char || ' ';\n      }return s;\n    }\n\n    /**\n     * Interlace two multi line strings: one line of each file in alternance\n     * If the second file contains more line then the first one, these additional lines will be ignored\n     **/\n\n  }, {\n    key: 'interlace',\n    value: function interlace(text1, text2, sepLine, keepEmptyLines) {\n      var a1 = text1.split(/\\r?\\n/);\n      var a2 = text2.split(/\\r?\\n/);\n      var a = a1.map(function (v, i) {\n        var lines = keepEmptyLines || a2[i] && a2[i].trim() ? [v, a2[i]] : [v];\n        if (typeof sepLine === 'string') lines.push(sepLine);\n        return lines.join('\\n');\n      });\n      return a.join('\\n');\n    }\n\n    /**\n     * Encode given parameters as a GET query string\n     **/\n\n  }, {\n    key: 'encodeQueryData',\n    value: function encodeQueryData(data) {\n      var ret = [];\n      for (var d in data) {\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n      }\n      return ret.join('&');\n    }\n\n    /**\n     * Convert a duration code to the smallest unit (64th)\n     **/\n\n  }, {\n    key: 'duration',\n    value: function duration(code) {\n      if (code === ':32') return 2;\n      if (code === ':16') return 4;\n      if (code === ':8') return 8;\n      if (code === ':q') return 16;\n      if (code === ':h') return 32;\n      if (code === ':w') return 64;\n\n      if (code === ':32d') return 3;\n      if (code === ':16d') return 6;\n      if (code === ':8d') return 12;\n      if (code === ':qd') return 24;\n      if (code === ':hd') return 48;\n      if (code === ':wd') return 96;\n\n      throw new Error('Invalid duration code \"' + code + '\"');\n    }\n\n    /**\n     * Convert back a number of units (64th) into a duration code\n     **/\n\n  }, {\n    key: 'durationcode',\n    value: function durationcode(units) {\n      var _arr = ['w', 'h', 'q', '8', '16', '32'];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var code = _arr[_i];\n        if (this.duration(':' + code) === units) return ':' + code;\n        if (this.duration(':' + code + 'd') === units) return ':' + code + 'd';\n      }\n\n      throw new Error('Could not find a code with a value of ' + units + ' units');\n    }\n\n    /**\n     * Convert a number of units (64th) into one or several duration codes\n     **/\n\n  }, {\n    key: 'durationcodes',\n    value: function durationcodes(units) {\n      var codes = [];\n\n      var current = units;\n      var rest = 0;\n\n      while (current > 0) {\n        try {\n          codes.push(this.durationcode(current));\n          current = rest;\n          rest = 0;\n        } catch (e) {\n          current--;\n          rest++;\n        }\n      }\n\n      if (rest > 0) throw new Error('Could not find codes adding to a value of ' + units + ' units');\n\n      return codes;\n    }\n\n    /**\n     * Convert a fret number (up to 35) to a single char (digit or capital letter)\n     * Fret 10 is notated as A, 11 as B, ... and 35 as Z\n     */\n\n  }, {\n    key: 'fret2char',\n    value: function fret2char(fret) {\n      if (isNaN(fret) || fret < 0 || fret > 35) throw new Error('Cannot convert fret number ' + fret + ' to a single char (expected a value between 0 and 35)');\n      return fret < 10 ? '' + fret : String.fromCharCode('A'.charCodeAt(0) + fret - 10);\n    }\n\n    /**\n     * Convert a single char (digit or capital letter) to a fret number\n     * A means fret 10, 11 fret B, ... and Z fret 35\n     */\n\n  }, {\n    key: 'char2fret',\n    value: function char2fret(char) {\n      if (typeof char !== 'string') throw new Error('Invalid fret char ' + char + ' expected a string');\n      if (!char.match(/^[0-9A-Z]$/)) throw new Error('Invalid fret char ' + char + ' (expected a value between [0-9] or [A-Z])');\n      return char >= 'A' ? 10 + char.charCodeAt(0) - 'A'.charCodeAt(0) : parseInt(char, 10);\n    }\n\n    /**\n     * Convert an absolute fret number (single char) to a relative fret number (0 never changes)\n     */\n\n  }, {\n    key: 'abs2rel',\n    value: function abs2rel(char, startingFret) {\n      var fret = this.char2fret(char);\n      if (isNaN(fret) || fret < 0) throw new Error('Invalid fret number ' + fret + ' (expected a positive or 0 integer value)');\n      if (fret === 0) return 0;\n      if (isNaN(startingFret) || startingFret < 0) throw new Error('Invalid starting fret number ' + startingFret + ' (expected a positive or 0 integer value)');\n      if (startingFret + 8 < fret || startingFret > fret) throw new Error('Fret ' + fret + ' cannot be made relative to starting fret ' + startingFret + ' within the allowed range of 1 to 9');\n      return fret + 1 - startingFret;\n    }\n\n    /**\n     * Convert a relative fret number to an absolute fret number (single char) (0 never changes)\n     */\n\n  }, {\n    key: 'rel2abs',\n    value: function rel2abs(relFret, startingFret) {\n      return this.fret2char(relFret ? relFret + startingFret - 1 : relFret);\n    }\n\n    /**\n     * Take a chord and a placeholder contents\n     * Return an array containing one object { string, fret, mute } for each played string\n     */\n\n  }, {\n    key: 'chordStrings',\n    value: function chordStrings(chord, strings) {\n      if (!chord.tablature) throw new Error('Tablature not defined for chord ' + chord.name);\n      if (!chord.fingering) throw new Error('Fingering not defined for chord ' + chord.name);\n\n      var result = [];\n      for (var i = 0; i < chord.tablature.length; i++) {\n        // string will be between 6 and 1 since chord.tablature.length has been verified and is 6\n        var string = 6 - i;\n\n        // string never played in this chord\n        if (chord.tablature[i] === 'x') continue;\n\n        // first time we meet a played string, it's the bass so replace B and B' with the string number\n        strings = strings.replace(/B'/g, string >= 5 ? string - 1 : string);\n        strings = strings.replace(/B/g, string);\n\n        // check if this string should be played with the right hand\n        // * means \"all strings\", otherwise concatenated specific string numbers are specified (or B for bass or B' for alternate bass)\n        // x after string means muted (ghost) note\n        if (strings.match(/^\\*/) || strings.indexOf(string) !== -1) {\n          var fret = this.char2fret(chord.tablature[i]);\n          var xIndex = strings.match(/^\\*/) ? 1 : strings.indexOf(string) + 1;\n          var mute = strings[xIndex] === 'x';\n          result.push({\n            string: string,\n            fret: fret,\n            mute: mute\n          });\n        }\n      }\n\n      return result;\n    }\n  }]);\n  return Utils;\n}();\n\nvar ParserException = function () {\n  function ParserException(line, message) {\n    classCallCheck(this, ParserException);\n\n    this.message = message;\n    this.line = line;\n  }\n\n  createClass(ParserException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Parser error at line ' + this.line + ': ' + this.message;\n    }\n  }]);\n  return ParserException;\n}();\n\nvar Parser_ = function () {\n  function Parser_() {\n    classCallCheck(this, Parser_);\n\n    this.songcheat = {};\n    this.blocks = {};\n  }\n\n  createClass(Parser_, [{\n    key: 'parse',\n    value: function parse(text) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return this.songcheat;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n      }\n\n      return this.songcheat;\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(text, line) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      var lastResult = null;\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return true;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        if (token.line > line) return lastResult;\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n\n        lastResult = { line: token.line, keyword: keyword, params: params, chordIndex: null, rhythmIndex: null, partIndex: null, unitIndex: null };\n\n        if (keyword === 'chord') lastResult.chordIndex = this.songcheat.chords.length - 1;else if (keyword === 'rhythm') lastResult.rhythmIndex = this.songcheat.rhythms.length - 1;else if (keyword === 'part') lastResult.partIndex = this.songcheat.parts.length - 1;else if (keyword === 'structure') {\n          // special case since there is no distinct UNIT keyword for each unit, but a single STRUCTURE keyword for all units\n          var paramIndex = 0;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = params[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var param = _step.value;\n\n              if (param.line > line) break;\n              lastResult.unitIndex = Math.floor(paramIndex / 2);\n              paramIndex++;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      return lastResult;\n    }\n  }, {\n    key: 'isKeyword',\n    value: function isKeyword(token) {\n      var keyword = Utils.camelCase(token.value);\n      return ['artist', 'title', 'year', 'difficulty', 'video', 'tutorial', 'comment', 'tuning', 'capo', 'key', 'time', 'tempo', 'shuffle', 'chord', 'rhythm', 'block', 'part', 'lyricsUnit' /* will disappear soon */, 'structure'].indexOf(keyword) >= 0 ? keyword : false;\n    }\n  }, {\n    key: 'tokenize',\n    value: function tokenize(text) {\n      var tokens = [];\n\n      // https://stackoverflow.com/questions/4780728/regex-split-string-preserving-quotes?noredirect=1&lq=1\n      var reSpaces = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)[\\s\\t]+(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n      var reNewline = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)(\\r?\\n)(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n\n      var lineNumber = 1;\n\n      // split at newlines unless enclosed in quotes\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = text.split(reNewline)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var line = _step2.value;\n\n          // split also returns the newlines, ignore them\n          if (line.match(/^\\r?\\n$/)) continue;\n\n          // trim line\n          line = line.trim();\n\n          // console.log(\"L\" + lineNumber + \": [\"+ line + \"]\");\n\n          // if not a comment or empty line\n          if (line && !line.match(/^#/)) {\n            // split at spaces and tabs unless enclosed in quotes, then trim spaces and quotes\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = line.split(reSpaces).map(function (s) {\n                return s.trim().replace(/^\"|\"$/g, '');\n              })[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n                tokens.push({ 'value': value, 'line': lineNumber });\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n\n          // increment line number\n          lineNumber += 1 + (line.match(/(?:\\r?\\n)/g) || []).length;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: 'handleDefault',\n    value: function handleDefault(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat[keyword] = ['year', 'capo', 'difficulty'].indexOf(keyword) >= 0 ? parseInt(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleSignature',\n    value: function handleSignature(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || {};\n      this.songcheat['signature'][keyword] = keyword === 'tempo' ? parseFloat(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleKey',\n    value: function handleKey(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTempo',\n    value: function handleTempo(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleShuffle',\n    value: function handleShuffle(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTime',\n    value: function handleTime(line, keyword, params) {\n      if (params.length !== 3) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 3 values, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || [];\n      this.songcheat['signature']['time'] = { 'beatsPerBar': params[1].value, 'beatDuration': params[2].value, 'symbol': params[0].value };\n    }\n  }, {\n    key: 'handleChord',\n    value: function handleChord(line, keyword, params) {\n      if (params.length < 2 || params.length > 4) throw new ParserException(line, keyword.toUpperCase() + ' expected between 2 and 4 values (name, tablature[, fingering=\"000000/-\", comment=\"\"]), but found ' + params.length);\n\n      var name = params[0].value;\n      var tablature = params[1].value;\n      var fingering = params.length >= 3 ? params[2].value : '000000/-';\n      var comment = params.length >= 4 ? params[3].value : '';\n\n      this.songcheat['chords'] = this.songcheat['chords'] || [];\n      var chord = { 'id': this.songcheat['chords'].length + 1, 'name': name, 'tablature': tablature, 'fingering': fingering, 'comment': comment };\n      this.songcheat['chords'].push(chord);\n\n      // return created chord (used when meeting an inline chord)\n      return chord;\n    }\n  }, {\n    key: 'handleRhythm',\n    value: function handleRhythm(line, keyword, params) {\n      if (params.length !== 2) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 2 values (id and score), but found ' + params.length);\n      this.songcheat['rhythms'] = this.songcheat['rhythms'] || [];\n      this.songcheat['rhythms'].push({ 'id': this.songcheat['rhythms'].length + 1, 'name': params[0].value, 'score': params[1].value });\n    }\n  }, {\n    key: 'handleBlock',\n    value: function handleBlock(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.blocks[params[0].value] = params.slice(1);\n    }\n  }, {\n    key: 'handlePart',\n    value: function handlePart(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.songcheat['parts'] = this.songcheat['parts'] || [];\n\n      // extract part name from params\n      var part = { 'id': this.songcheat['parts'].length + 1, 'name': params[0].value, 'phrases': [] };\n      params = params.splice(1);\n      this.songcheat['parts'].push(part);\n\n      // iterate on remaining params to get bars and phrases\n      var bars = [];\n      for (var pIndex = 0; pIndex < params.length; pIndex++) {\n        var param = params[pIndex];\n\n        // phrase separator\n        if (param.value === '||') {\n          part.phrases.push({ 'bars': bars });\n          bars = [];\n          continue;\n        }\n\n        // bar repeater\n        if (param.value === '%') {\n          if (bars.length === 0) throw new ParserException(param.line, 'found bar repeater ' + param.value + ' but there is no bar yet in phrase');\n          bars.push(JSON.parse(JSON.stringify(bars[bars.length - 1])));\n          continue;\n        }\n\n        // bar between []\n        if (param.value.match(/^\\[[^[\\]]+\\]$/)) {\n          var bar = { 'rhythm': null, 'chords': [] };\n          var str = param.value.substr(1, param.value.length - 2);\n          var parts = str.split(/\\*|:/);\n\n          // find rhythm\n          var found = false;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.songcheat['rhythms'][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var rhythm = _step4.value;\n\n              if (rhythm.name === parts[0]) {\n                bar.rhythm = rhythm.id;\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          if (!found) throw new ParserException(param.line, parts[0] + ' is not the name of an existing rhythm');\n\n          // find chords\n          parts = parts.slice(1);\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = parts[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var _part = _step5.value;\n\n              // chord repeater\n              if (!_part.trim()) {\n                if (bar.chords.length === 0) throw new ParserException(param.line, 'found chord repeater but there is no chord yet in bar');\n                bar.chords.push(JSON.parse(JSON.stringify(bar.chords[bar.chords.length - 1])));\n                continue;\n              }\n\n              // search for chord by its name\n              var _found = false;\n              var _iteratorNormalCompletion6 = true;\n              var _didIteratorError6 = false;\n              var _iteratorError6 = undefined;\n\n              try {\n                for (var _iterator6 = this.songcheat['chords'][Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                  var chord = _step6.value;\n\n                  if (chord.name === _part) {\n                    bar.chords.push(chord.id);\n                    _found = true;\n                    break;\n                  }\n                }\n\n                // if no chord found with this name but this is a valid chord tablature (with an optional barred fret /[-0-9A-Z])\n              } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                  }\n                } finally {\n                  if (_didIteratorError6) {\n                    throw _iteratorError6;\n                  }\n                }\n              }\n\n              if (!_found && _part.match(/^[x0-9A-Z]{6}(\\/[-0-9A-Z])?$/)) {\n                // create inline chord with the name being the tablature itself, and no fingering nor comment\n                var _chord = this.handleChord(param.line, 'chord', [{ value: _part, line: param.line }, { value: _part.split('/')[0], line: param.line }, { value: '000000/' + (_part.split('/')[1] || '-'), line: param.line }]);\n                bar.chords.push(_chord.id);\n                _found = true;\n              }\n\n              if (!_found) throw new ParserException(param.line, _part + ' is not the name of an existing chord and is not a valid chord tablature');\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          bars.push(bar);\n          continue;\n        }\n\n        // not a || phrase separator nor a [] bar: must be a block name\n        if (!this.blocks[param.value]) throw new ParserException(param.line, param.value + ' is not the name of an existing block');\n\n        // insert block tokens in params at current position\n        var args = [pIndex, 1];\n        Array.prototype.push.apply(args, this.blocks[param.value]);\n        Array.prototype.splice.apply(params, args);\n        pIndex--;\n      }\n\n      // end of last phrase\n      if (bars.length > 0) part.phrases.push({ 'bars': bars });\n    }\n  }, {\n    key: 'handleStructure',\n    value: function handleStructure(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (part name and lyrics), but found ' + params.length);\n      if (params.length % 2 !== 0) throw new ParserException(line, keyword.toUpperCase() + ' expected an even number of parameters (N x part name and lyrics), but found ' + params.length);\n      this.songcheat['structure'] = this.songcheat['structure'] || [];\n\n      for (var pIndex = 0; pIndex < params.length; pIndex += 2) {\n        var param = params[pIndex];\n\n        var found = false;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = this.songcheat['parts'][Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var part = _step7.value;\n\n            if (part.name === param.value) {\n              this.songcheat['structure'].push({ 'part': part.id, 'lyrics': params[pIndex + 1].value });\n              found = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        if (!found) throw new ParserException(param.line, param.value + '\" is not the name of an existing part');\n      }\n    }\n  }]);\n  return Parser_;\n}();\n\n/**\n * Public API\n */\n\nvar Parser = function () {\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    this.parser_ = new Parser_();\n  }\n\n  createClass(Parser, [{\n    key: 'parse',\n    value: function parse(songcheat) {\n      return this.parser_.parse(songcheat);\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(songcheat, line) {\n      return this.parser_.getPrecedingKeyword(songcheat, line);\n    }\n  }]);\n  return Parser;\n}();\n\nvar MIN_LYRICS_BARLEN = 20; // minimum length of a bar lyrics (before reducing) - not really needed but produces a clearer view when maxConsecutiveSpaces set to 0 (and thus when displaying parts with partdisplay=full) since bars with no or little text will have the same length (unless there are really many chord changes...)\nvar LYRICS_SUM_DURATIONS = false; // if true \"::\" is equivalent to \":h:\" (assuming lyrics unit is :q)\nvar KEEP_EMPTY_LINES = false;\n\nvar CompilerException = function () {\n  function CompilerException(message) {\n    classCallCheck(this, CompilerException);\n\n    this.message = message;\n  }\n\n  createClass(CompilerException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Compiler error: ' + this.message;\n    }\n  }]);\n  return CompilerException;\n}();\n\nvar Compiler_ = function () {\n  function Compiler_(DEBUG) {\n    classCallCheck(this, Compiler_);\n\n    // DEBUG 1 forces showing . * | characters in unit text (even if showDots is passed false) as well as _ for groups that were automatically created when crossing a bar\n    this.DEBUG = DEBUG;\n  }\n\n  createClass(Compiler_, [{\n    key: 'log',\n    value: function log() {\n      if (this.DEBUG > 0) console.log.apply(console, arguments);\n    }\n  }, {\n    key: 'compile',\n    value: function compile(songcheat) {\n      // default values for optional properties\n      songcheat.mode = songcheat.mode || 'rt';\n      songcheat.lyricsMode = songcheat.lyricsMode || 's';\n      songcheat.barsPerLine = songcheat.barsPerLine || 4;\n      songcheat.signature = songcheat.signature || {};\n      songcheat.signature.key = songcheat.signature.key || 'C';\n      songcheat.signature.time = songcheat.signature.time || { beatDuration: ':q', beatsPerBar: 4, symbol: '4/4' };\n      songcheat.lyricsUnit = songcheat.lyricsUnit || songcheat.signature.time.beatDuration;\n      songcheat.chords = songcheat.chords || [];\n      songcheat.rhythms = songcheat.rhythms || [];\n      songcheat.parts = songcheat.parts || [];\n\n      // deduce bar duration from signature\n      songcheat.barDuration = songcheat.signature.time.beatsPerBar * Utils.duration(songcheat.signature.time.beatDuration);\n\n      // resolve all id references (rhythms and chords)\n      this.resolveIds(songcheat);\n\n      // default structure if not specified : one unit for each part\n      if (!songcheat.structure) {\n        songcheat.structure = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = songcheat.parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var part = _step.value;\n            songcheat.structure.push({ 'part': part });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      // give a name to each unit if not already set = name of part with automatic numbering\n      var unitsByPart = {};\n      var numberByPart = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = songcheat.structure[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var unit = _step2.value;\n          unitsByPart[unit.part.id] = typeof unitsByPart[unit.part.id] === 'undefined' ? 1 : unitsByPart[unit.part.id] + 1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = songcheat.structure[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _unit = _step3.value;\n\n          numberByPart[_unit.part.id] = typeof numberByPart[_unit.part.id] === 'undefined' ? 1 : numberByPart[_unit.part.id] + 1;\n          if (!_unit.name) _unit.name = _unit.part.name + (unitsByPart[_unit.part.id] > 1 ? ' ' + numberByPart[_unit.part.id] : '');\n        }\n\n        // give a color to each part if not already set\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var colors = ['red', '#06D6A0', 'blue', 'purple', 'orange', 'magenta'];\n      var partIndex = 0;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = songcheat.parts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _part = _step4.value;\n          if (!_part.color) _part.color = colors[partIndex++ % colors.length];\n        }\n\n        // validate and compile each rhythm\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = songcheat.rhythms[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var rhythm = _step5.value;\n          this.compileRhythm(rhythm, songcheat.signature.time.beatDuration);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = songcheat.parts[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _part2 = _step6.value;\n\n          // compute a \"chordChanges\" property in each phrase\n          var phraseIndex = 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = _part2.phrases[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var phrase = _step7.value;\n\n              phrase.chordChanges = [];\n              var lastChord = null;\n              var _iteratorNormalCompletion9 = true;\n              var _didIteratorError9 = false;\n              var _iteratorError9 = undefined;\n\n              try {\n                for (var _iterator9 = phrase.bars[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  var bar = _step9.value;\n                  lastChord = this.addChordChanges(bar, phrase.chordChanges, songcheat.barDuration, false, lastChord);\n                }\n              } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                    _iterator9.return();\n                  }\n                } finally {\n                  if (_didIteratorError9) {\n                    throw _iteratorError9;\n                  }\n                }\n              }\n\n              this.log('Phrase wise chord durations for phrase ' + _part2.name + '.' + (phraseIndex + 1));\n              var _iteratorNormalCompletion10 = true;\n              var _didIteratorError10 = false;\n              var _iteratorError10 = undefined;\n\n              try {\n                for (var _iterator10 = phrase.chordChanges[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                  var c = _step10.value;\n                  this.log('\\t[' + c.chord.name + '] = ' + c.duration + ' units');\n                } // compute a \"chordChanges\" property in each bar\n              } catch (err) {\n                _didIteratorError10 = true;\n                _iteratorError10 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                    _iterator10.return();\n                  }\n                } finally {\n                  if (_didIteratorError10) {\n                    throw _iteratorError10;\n                  }\n                }\n              }\n\n              var barIndex = 0;\n              var _iteratorNormalCompletion11 = true;\n              var _didIteratorError11 = false;\n              var _iteratorError11 = undefined;\n\n              try {\n                for (var _iterator11 = phrase.bars[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                  var _bar = _step11.value;\n\n                  _bar.chordChanges = { 'bar': [], 'rhythm': [] };\n                  var _arr = ['rhythm', 'bar'];\n                  for (var _i = 0; _i < _arr.length; _i++) {\n                    var chordChangesMode = _arr[_i];this.addChordChanges(_bar, _bar.chordChanges[chordChangesMode], songcheat.barDuration, chordChangesMode === 'bar');\n                  }this.log('\\tRythm wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion12 = true;\n                  var _didIteratorError12 = false;\n                  var _iteratorError12 = undefined;\n\n                  try {\n                    for (var _iterator12 = _bar.chordChanges['rhythm'][Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                      var _c = _step12.value;\n                      this.log('\\t\\t[' + _c.chord.name + '] = ' + _c.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError12 = true;\n                    _iteratorError12 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                        _iterator12.return();\n                      }\n                    } finally {\n                      if (_didIteratorError12) {\n                        throw _iteratorError12;\n                      }\n                    }\n                  }\n\n                  this.log('\\tBar wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion13 = true;\n                  var _didIteratorError13 = false;\n                  var _iteratorError13 = undefined;\n\n                  try {\n                    for (var _iterator13 = _bar.chordChanges['bar'][Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                      var _c2 = _step13.value;\n                      this.log('\\t\\t[' + _c2.chord.name + '] = ' + _c2.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError13 = true;\n                    _iteratorError13 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                        _iterator13.return();\n                      }\n                    } finally {\n                      if (_didIteratorError13) {\n                        throw _iteratorError13;\n                      }\n                    }\n                  }\n\n                  barIndex++;\n                }\n              } catch (err) {\n                _didIteratorError11 = true;\n                _iteratorError11 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                    _iterator11.return();\n                  }\n                } finally {\n                  if (_didIteratorError11) {\n                    throw _iteratorError11;\n                  }\n                }\n              }\n\n              phraseIndex++;\n            }\n\n            // compute duration of part\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          _part2.duration = 0;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = _part2.phrases[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var _phrase = _step8.value;\n              var _iteratorNormalCompletion14 = true;\n              var _didIteratorError14 = false;\n              var _iteratorError14 = undefined;\n\n              try {\n                for (var _iterator14 = _phrase.bars[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                  var _bar2 = _step14.value;\n                  _part2.duration += _bar2.rhythm.duration;\n                }\n              } catch (err) {\n                _didIteratorError14 = true;\n                _iteratorError14 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                    _iterator14.return();\n                  }\n                } finally {\n                  if (_didIteratorError14) {\n                    throw _iteratorError14;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n\n        // fluid API\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return songcheat;\n    }\n  }, {\n    key: 'resolveIds',\n    value: function resolveIds(songcheat) {\n      var unitIndex = 0;\n      if (songcheat.structure) {\n        var _iteratorNormalCompletion15 = true;\n        var _didIteratorError15 = false;\n        var _iteratorError15 = undefined;\n\n        try {\n          for (var _iterator15 = songcheat.structure[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n            var unit = _step15.value;\n\n            if (!unit.part) throw new CompilerException('Part not defined for unit ' + (unitIndex + 1));\n\n            // resolve part id\n            var part = this.resolveId(songcheat.parts, unit.part);\n            if (!part) throw new CompilerException('Part ' + unit.part + ' not found');\n            unit.part = part;\n\n            unitIndex++;\n          }\n        } catch (err) {\n          _didIteratorError15 = true;\n          _iteratorError15 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion15 && _iterator15.return) {\n              _iterator15.return();\n            }\n          } finally {\n            if (_didIteratorError15) {\n              throw _iteratorError15;\n            }\n          }\n        }\n      }\n\n      if (songcheat.parts) {\n        var _iteratorNormalCompletion16 = true;\n        var _didIteratorError16 = false;\n        var _iteratorError16 = undefined;\n\n        try {\n          for (var _iterator16 = songcheat.parts[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n            var _part3 = _step16.value;\n\n            if (!_part3.phrases) throw new CompilerException('Phrases not defined for part \"' + _part3.name + '\"');\n            if (!(_part3.phrases instanceof Array)) throw new CompilerException('Phrases defined for part \"' + _part3.name + '\" must be an Array, found: ' + _typeof(songcheat.parts.phrases));\n\n            var phraseIndex = 0;\n            var _iteratorNormalCompletion17 = true;\n            var _didIteratorError17 = false;\n            var _iteratorError17 = undefined;\n\n            try {\n              for (var _iterator17 = _part3.phrases[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                var phrase = _step17.value;\n\n                var barIndex = 0;\n                var _iteratorNormalCompletion18 = true;\n                var _didIteratorError18 = false;\n                var _iteratorError18 = undefined;\n\n                try {\n                  for (var _iterator18 = phrase.bars[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                    var bar = _step18.value;\n\n                    if (!bar.rhythm) throw new CompilerException('Rhythm not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!bar.chords) throw new CompilerException('Chords not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!(bar.chords instanceof Array)) throw new CompilerException('Chords defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' must be an Array, found: ' + _typeof(bar.chords));\n\n                    // resolve rhythm id\n                    var rhythm = this.resolveId(songcheat.rhythms, bar.rhythm);\n                    if (!rhythm) throw new CompilerException('Rhythm ' + bar.rhythm + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                    bar.rhythm = rhythm;\n\n                    // resolved array of chord ids\n                    var chords = [];\n                    var _iteratorNormalCompletion19 = true;\n                    var _didIteratorError19 = false;\n                    var _iteratorError19 = undefined;\n\n                    try {\n                      for (var _iterator19 = bar.chords[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                        var chordId = _step19.value;\n\n                        // resolve chord id\n                        var chord = this.resolveId(songcheat.chords, chordId);\n                        if (!chord) throw new CompilerException('Chord ' + chordId + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                        chords.push(chord);\n                      }\n                    } catch (err) {\n                      _didIteratorError19 = true;\n                      _iteratorError19 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                          _iterator19.return();\n                        }\n                      } finally {\n                        if (_didIteratorError19) {\n                          throw _iteratorError19;\n                        }\n                      }\n                    }\n\n                    bar.chords = chords;\n                    barIndex++;\n                  }\n                } catch (err) {\n                  _didIteratorError18 = true;\n                  _iteratorError18 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                      _iterator18.return();\n                    }\n                  } finally {\n                    if (_didIteratorError18) {\n                      throw _iteratorError18;\n                    }\n                  }\n                }\n\n                phraseIndex++;\n              }\n            } catch (err) {\n              _didIteratorError17 = true;\n              _iteratorError17 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                  _iterator17.return();\n                }\n              } finally {\n                if (_didIteratorError17) {\n                  throw _iteratorError17;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError16 = true;\n          _iteratorError16 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion16 && _iterator16.return) {\n              _iterator16.return();\n            }\n          } finally {\n            if (_didIteratorError16) {\n              throw _iteratorError16;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'resolveId',\n    value: function resolveId(collection, id) {\n      if (collection) {\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n          for (var _iterator20 = collection[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n            var i = _step20.value;\n            if (i.id === id) return i;\n          }\n        } catch (err) {\n          _didIteratorError20 = true;\n          _iteratorError20 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion20 && _iterator20.return) {\n              _iterator20.return();\n            }\n          } finally {\n            if (_didIteratorError20) {\n              throw _iteratorError20;\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'compileRhythm',\n    value: function compileRhythm(rhythm, initialNoteDuration) {\n      this.log('Compiling rhythm ' + rhythm.id + ' with score \"' + rhythm.score + '\"');\n\n      // default note duration, until changed\n      var noteDuration = initialNoteDuration;\n\n      // take not of each placeholder's index, so we can later fetch the associated chord\n      rhythm.placeholdercount = 0;\n\n      // for locating syntax errors in message\n      var position = 1;\n      var lastToken = null;\n\n      // compile the score string into an array of objects\n      rhythm.compiledScore = [];\n      var _iteratorNormalCompletion21 = true;\n      var _didIteratorError21 = false;\n      var _iteratorError21 = undefined;\n\n      try {\n        for (var _iterator21 = rhythm.score.split(/((?::(?:w|h|q|8|16|32)d?)|\\(#\\)|T?\\s*\\([^(]*\\)[^()\\sT:]*)/)[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n          var token = _step21.value;\n\n          if (token = token.trim()) {\n            var match = null;\n            if (match = token.match(/^(:(?:w|h|q|8|16|32)d?)$/)) {\n              // duration: change note duration to use next\n              noteDuration = Utils.duration(match[1]);\n            } else if (match = token.match(/^\\(#\\)$/)) {\n              // rest\n              rhythm.compiledScore.push({ rest: true, duration: noteDuration, tied: false, strings: false, flags: {}, placeholderIndex: rhythm.placeholdercount++ });\n            } else if (match = token.match(/^(T?)\\s*\\(([^(]*)\\)([^()\\s]*)$/)) {\n              // chord placeholder\n              var tied = match[1] === 'T';\n\n              // strings = between parentheses\n              var strings = match[2];\n              if (strings === '') strings = '*'; // an empty string is a shortcut for \"*\"\n              if (strings === 'x') strings = '*x'; // a x alone is a shortcut for \"*x\"\n              if (!strings.match(/^(?:(\\*x?)|((?:(?:B|B'|1|2|3|4|5|6)x?)+))$/)) throw new CompilerException('Invalid syntax found in chord placeholder: ' + strings);\n\n              // flags = after parentheses\n              var flagsString = match[3];\n              var flags = { stroke: null, accent: false, pm: false, fingering: null };\n              var _iteratorNormalCompletion23 = true;\n              var _didIteratorError23 = false;\n              var _iteratorError23 = undefined;\n\n              try {\n                for (var _iterator23 = flagsString.split(/(dd?|uu?|>|PM|[pima]+)/)[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n                  var flag = _step23.value;\n\n                  if (flag.trim()) {\n                    if (flag.match(/^(dd?|uu?)$/g)) {\n                      // stroke mode\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.stroke) throw new CompilerException('More than one stroke mode (d, u, dd, uu) defined for the chord placeholder: ' + token);\n                      flags.stroke = flag;\n                    } else if (flag.match(/^[pima]+$/)) {\n                      // PIMA fingering\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('More than one fingering (pima) defined for the chord placeholder: ' + token);\n                      flags.fingering = flag;\n                    } else if (flag.match(/^PM$/)) {\n                      // palm muting\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('More than one palm muting (PM) defined for the chord placeholder: ' + token);\n                      flags.pm = true;\n                    } else if (flag.match(/^>$/)) {\n                      // accent\n                      if (flags.accent) throw new CompilerException('More than one accent (>) defined for the same placeholder: ' + token);\n                      flags.accent = true;\n                    } else throw new CompilerException('Invalid flag \"' + flag + '\" defined for chord placeholder \"' + token + '\"');\n                  }\n                }\n\n                // add a note\n              } catch (err) {\n                _didIteratorError23 = true;\n                _iteratorError23 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion23 && _iterator23.return) {\n                    _iterator23.return();\n                  }\n                } finally {\n                  if (_didIteratorError23) {\n                    throw _iteratorError23;\n                  }\n                }\n              }\n\n              rhythm.compiledScore.push({ rest: false, duration: noteDuration, tied: tied, strings: strings, flags: flags, placeholderIndex: rhythm.placeholdercount++ });\n            } else throw new CompilerException('Invalid token \"' + token + '\" in rhythm score definition at position ' + position + (lastToken ? ' (after \"' + lastToken + '\")' : ''));\n\n            lastToken = token;\n          }\n\n          position += token.length;\n        }\n\n        // compute total rhythm duration\n      } catch (err) {\n        _didIteratorError21 = true;\n        _iteratorError21 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion21 && _iterator21.return) {\n            _iterator21.return();\n          }\n        } finally {\n          if (_didIteratorError21) {\n            throw _iteratorError21;\n          }\n        }\n      }\n\n      rhythm.duration = 0;\n      var _iteratorNormalCompletion22 = true;\n      var _didIteratorError22 = false;\n      var _iteratorError22 = undefined;\n\n      try {\n        for (var _iterator22 = rhythm.compiledScore[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n          var o = _step22.value;\n          rhythm.duration += o.duration;\n        }\n      } catch (err) {\n        _didIteratorError22 = true;\n        _iteratorError22 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion22 && _iterator22.return) {\n            _iterator22.return();\n          }\n        } finally {\n          if (_didIteratorError22) {\n            throw _iteratorError22;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'addChordChanges',\n    value: function addChordChanges(bar, chordChanges, barDuration, resetAtBars, lastChord) {\n      // ensure number of chords match number of placeholders in rhythm score, by repeating last chord\n      if (bar.chords.length < 1) throw new CompilerException('chords must contain at least 1 entry, but ' + bar.chords.length + ' were found');\n      while (bar.chords.length < bar.rhythm.placeholdercount) {\n        bar.chords.push(bar.chords[bar.chords.length - 1]);\n      }var offset = 0;\n      var _iteratorNormalCompletion24 = true;\n      var _didIteratorError24 = false;\n      var _iteratorError24 = undefined;\n\n      try {\n        for (var _iterator24 = bar.rhythm.compiledScore[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n          var note = _step24.value;\n\n          // get chord corresponding to the placeholder position\n          var chord = bar.chords[note.placeholderIndex];\n          if (!chord) throw new CompilerException('No chord found for placeholder ' + (note.placeholderIndex + 1));\n\n          // same chord as before and not a new bar: increment duration with this new note\n          if (lastChord === chord && offset % barDuration !== 0) chordChanges[chordChanges.length - 1].duration += note.duration;\n\n          // chord changed: new duration starts with one note of the new chord\n          // unless requested to reset chords at bars, chord change will be hidden if still the same as before\n          else chordChanges.push({ chord: chord, duration: note.duration, hidden: lastChord === chord && !resetAtBars });\n\n          lastChord = chord;\n          offset += note.duration;\n        }\n      } catch (err) {\n        _didIteratorError24 = true;\n        _iteratorError24 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion24 && _iterator24.return) {\n            _iterator24.return();\n          }\n        } finally {\n          if (_didIteratorError24) {\n            throw _iteratorError24;\n          }\n        }\n      }\n\n      return lastChord;\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit, defaultCursorStep, barDuration) {\n      var warnings = [];\n      var offset = 0;\n\n      // remove DOS newlines\n      unit.lyrics = (unit.lyrics || '').replace(/\\r/g, '');\n\n      // split lyrics into word groups, split occurs at cursor forward instructions (colons, durations and bars)\n      unit.groups = [];\n      var _iteratorNormalCompletion25 = true;\n      var _didIteratorError25 = false;\n      var _iteratorError25 = undefined;\n\n      try {\n        for (var _iterator25 = unit.lyrics.split(/((?::(?:w|h|q|8|16|32)d?)?:|\\|)/)[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n          var part = _step25.value;\n          // nb: split with capture groups only works in decent browsers, e.g. IE10+\n          var match = null;\n          // move cursor forward by given or default step duration\n          if (match = part.match(/(:(?:w|h|q|8|16|32)d?)?:/)) offset = this.registerGroup(unit, offset, match[1] ? Utils.duration(match[1]) : defaultCursorStep, barDuration);\n\n          // move cursor to begin of next bar\n          else if (part.match(/\\|/)) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n            // (non empty) word group (waiting for its duration)\n            else if (part.length > 0) unit.groups.push({ text: part, offset: offset, duration: 0 });\n        }\n\n        // simulate a final bar if last group still open (no duration), i.e. if lyrics do not end on a : or |\n      } catch (err) {\n        _didIteratorError25 = true;\n        _iteratorError25 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion25 && _iterator25.return) {\n            _iterator25.return();\n          }\n        } finally {\n          if (_didIteratorError25) {\n            throw _iteratorError25;\n          }\n        }\n      }\n\n      if (unit.groups.length && unit.groups[unit.groups.length - 1].duration === 0) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n      // get missing duration and complete with empty groups if needed (offset now contains the total duration of all groups)\n      var missingDuration = unit.part.duration - offset;\n      this.log('[' + unit.name + '] Missing duration = ' + missingDuration + ' units (' + unit.part.duration + ' - ' + offset + ') = ' + missingDuration / barDuration + ' bars missing');\n      if (missingDuration < 0) warnings.push('Lyrics contain ' + Math.floor(-missingDuration / barDuration) + ' bar(s)' + (-missingDuration % barDuration ? ' and ' + Utils.durationcodes(-missingDuration % barDuration) : '') + ' in excess');\n      offset = this.registerGroup(unit, offset, missingDuration, barDuration);\n\n      var _iteratorNormalCompletion26 = true;\n      var _didIteratorError26 = false;\n      var _iteratorError26 = undefined;\n\n      try {\n        for (var _iterator26 = unit.groups[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n          var group = _step26.value;\n\n          // compute length of group (in chars), adding 1 so the group having max density is not collated with next group\n          var groupLength = this.getGroupLength(group) + 1;\n\n          // ensure the bar will always have the required minimal width\n          group.plen = Math.max(groupLength, Math.ceil(MIN_LYRICS_BARLEN * group.duration / barDuration));\n\n          // compute density of group based on the obtained length\n          group.p = group.plen / group.duration;\n\n          // set bar true if group ends on a bar\n          group.bar = (group.offset + group.duration) % barDuration === 0;\n\n          // initialize chord changes\n          group.chordChanges = { 'bar': [], 'rhythm': [], 'phrase': [] };\n        }\n\n        // compute maximum density across all groups\n      } catch (err) {\n        _didIteratorError26 = true;\n        _iteratorError26 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion26 && _iterator26.return) {\n            _iterator26.return();\n          }\n        } finally {\n          if (_didIteratorError26) {\n            throw _iteratorError26;\n          }\n        }\n      }\n\n      unit.pmax = 0;\n      var _iteratorNormalCompletion27 = true;\n      var _didIteratorError27 = false;\n      var _iteratorError27 = undefined;\n\n      try {\n        for (var _iterator27 = unit.groups[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {\n          var _group = _step27.value;\n          unit.pmax = Math.max(unit.pmax, _group.p);\n        } // iterate on each phrase wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError27 = true;\n        _iteratorError27 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion27 && _iterator27.return) {\n            _iterator27.return();\n          }\n        } finally {\n          if (_didIteratorError27) {\n            throw _iteratorError27;\n          }\n        }\n      }\n\n      offset = 0;\n      var _iteratorNormalCompletion28 = true;\n      var _didIteratorError28 = false;\n      var _iteratorError28 = undefined;\n\n      try {\n        for (var _iterator28 = unit.part.phrases[Symbol.iterator](), _step28; !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {\n          var phrase = _step28.value;\n          var _iteratorNormalCompletion31 = true;\n          var _didIteratorError31 = false;\n          var _iteratorError31 = undefined;\n\n          try {\n            for (var _iterator31 = phrase.chordChanges[Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {\n              var chordDuration = _step31.value;\n\n              // find closest group starting at or before chord offset\n              var _group3 = null;\n              var _iteratorNormalCompletion32 = true;\n              var _didIteratorError32 = false;\n              var _iteratorError32 = undefined;\n\n              try {\n                for (var _iterator32 = unit.groups[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {\n                  var g = _step32.value;\n                  if (g.offset <= offset) _group3 = g;\n                }\n              } catch (err) {\n                _didIteratorError32 = true;\n                _iteratorError32 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion32 && _iterator32.return) {\n                    _iterator32.return();\n                  }\n                } finally {\n                  if (_didIteratorError32) {\n                    throw _iteratorError32;\n                  }\n                }\n              }\n\n              if (!_group3) throw new Error('No closest group found for chord ' + chordDuration.chord.name + ' with offset ' + offset + ' units');\n\n              // register chord change in group\n              _group3.chordChanges['phrase'].push({ offset: offset, text: this.getChordDisplay(chordDuration) });\n\n              offset += chordDuration.duration;\n            }\n          } catch (err) {\n            _didIteratorError31 = true;\n            _iteratorError31 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion31 && _iterator31.return) {\n                _iterator31.return();\n              }\n            } finally {\n              if (_didIteratorError31) {\n                throw _iteratorError31;\n              }\n            }\n          }\n        }\n\n        // iterate on each bar wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError28 = true;\n        _iteratorError28 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion28 && _iterator28.return) {\n            _iterator28.return();\n          }\n        } finally {\n          if (_didIteratorError28) {\n            throw _iteratorError28;\n          }\n        }\n      }\n\n      offset = { 'rhythm': 0, 'bar': 0 };\n      var _iteratorNormalCompletion29 = true;\n      var _didIteratorError29 = false;\n      var _iteratorError29 = undefined;\n\n      try {\n        for (var _iterator29 = unit.part.phrases[Symbol.iterator](), _step29; !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {\n          var _phrase2 = _step29.value;\n          var _iteratorNormalCompletion33 = true;\n          var _didIteratorError33 = false;\n          var _iteratorError33 = undefined;\n\n          try {\n            for (var _iterator33 = _phrase2.bars[Symbol.iterator](), _step33; !(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done); _iteratorNormalCompletion33 = true) {\n              var bar = _step33.value;\n              var _arr2 = ['rhythm', 'bar'];\n\n              for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n                var chordChangesMode = _arr2[_i2];var _iteratorNormalCompletion34 = true;\n                var _didIteratorError34 = false;\n                var _iteratorError34 = undefined;\n\n                try {\n                  for (var _iterator34 = bar.chordChanges[chordChangesMode][Symbol.iterator](), _step34; !(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done); _iteratorNormalCompletion34 = true) {\n                    var _chordDuration = _step34.value;\n\n                    // find closest group starting at or before chord offset\n                    var _group4 = null;\n                    var _iteratorNormalCompletion35 = true;\n                    var _didIteratorError35 = false;\n                    var _iteratorError35 = undefined;\n\n                    try {\n                      for (var _iterator35 = unit.groups[Symbol.iterator](), _step35; !(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done); _iteratorNormalCompletion35 = true) {\n                        var _g = _step35.value;\n                        if (_g.offset <= offset[chordChangesMode]) _group4 = _g;\n                      }\n                    } catch (err) {\n                      _didIteratorError35 = true;\n                      _iteratorError35 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion35 && _iterator35.return) {\n                          _iterator35.return();\n                        }\n                      } finally {\n                        if (_didIteratorError35) {\n                          throw _iteratorError35;\n                        }\n                      }\n                    }\n\n                    if (!_group4) throw new Error('No closest group found for chord ' + _chordDuration.chord.name + ' with offset ' + offset[chordChangesMode] + ' units');\n\n                    // register chord change in group\n                    _group4.chordChanges[chordChangesMode].push({ offset: offset[chordChangesMode], text: this.getChordDisplay(_chordDuration) });\n\n                    offset[chordChangesMode] += _chordDuration.duration;\n                  }\n                } catch (err) {\n                  _didIteratorError34 = true;\n                  _iteratorError34 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion34 && _iterator34.return) {\n                      _iterator34.return();\n                    }\n                  } finally {\n                    if (_didIteratorError34) {\n                      throw _iteratorError34;\n                    }\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError33 = true;\n            _iteratorError33 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion33 && _iterator33.return) {\n                _iterator33.return();\n              }\n            } finally {\n              if (_didIteratorError33) {\n                throw _iteratorError33;\n              }\n            }\n          }\n        }\n\n        // debug info\n      } catch (err) {\n        _didIteratorError29 = true;\n        _iteratorError29 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion29 && _iterator29.return) {\n            _iterator29.return();\n          }\n        } finally {\n          if (_didIteratorError29) {\n            throw _iteratorError29;\n          }\n        }\n      }\n\n      var debugText = 'Groups of unit [' + unit.name + ']:\\n';\n      var barIndex = 0;\n      var zeroDuration = false;\n      var _iteratorNormalCompletion30 = true;\n      var _didIteratorError30 = false;\n      var _iteratorError30 = undefined;\n\n      try {\n        for (var _iterator30 = unit.groups[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {\n          var _group2 = _step30.value;\n\n          debugText += '\\tBar ' + (barIndex + 1) + '\\t[' + _group2.text.replace(/\\n/g, '\\\\N') + ']:' + _group2.duration + ' (' + _group2.offset + ' - ' + (_group2.offset + _group2.duration) + ') L=' + this.getGroupLength(_group2) + \" L'=\" + _group2.plen + ' ρ=' + _group2.p.toFixed(2) + ' #Chord changes %bar= ' + _group2.chordChanges['bar'].length + ' %phrase= ' + _group2.chordChanges['phrase'].length;\n          if (_group2.duration === 0) zeroDuration = true;\n          if (_group2.bar) {\n            barIndex++;\n            debugText += ' | ';\n          }\n          debugText += '\\n';\n        }\n      } catch (err) {\n        _didIteratorError30 = true;\n        _iteratorError30 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion30 && _iterator30.return) {\n            _iterator30.return();\n          }\n        } finally {\n          if (_didIteratorError30) {\n            throw _iteratorError30;\n          }\n        }\n      }\n\n      debugText += 'ρ max = ' + unit.pmax.toFixed(2);\n      this.log(debugText);\n\n      if (zeroDuration) throw new Error('Detected group with 0 duration');\n\n      return warnings;\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      var unitText = '';\n\n      // concatenate lyrics groups, giving them a number of positions proprtional to their duration\n      var barIndex = 0;\n      var groupIndex = 0;\n      var _iteratorNormalCompletion36 = true;\n      var _didIteratorError36 = false;\n      var _iteratorError36 = undefined;\n\n      try {\n        for (var _iterator36 = unit.groups[Symbol.iterator](), _step36; !(_iteratorNormalCompletion36 = (_step36 = _iterator36.next()).done); _iteratorNormalCompletion36 = true) {\n          var group = _step36.value;\n\n          // where and on how many positions will this group be displayed\n          group.position = [].concat(toConsumableArray(unitText.replace(/\\n/g, ''))).length;\n          group.length = Math.ceil(group.duration * unit.pmax);\n\n          // an hyphen means a word has been cut in two, no need for a space before next group\n          // but if the final character should be a bar, then always count this extra character\n          var needFinalSpace = group.bar || !group.text.match(/-$/);\n\n          // if maxConsecutiveSpaces is set, set a maximum for the number of allowed positions if needed\n          var maxLength = null;\n          if (maxConsecutiveSpaces > 0) maxLength = this.getGroupLength(group) + maxConsecutiveSpaces - (needFinalSpace ? 0 : 1);\n          if (maxLength) group.length = Math.min(group.length, maxLength);\n\n          // but if group has associated chords, we must have enough space for them (and this has priority over maxConsecutiveSpaces)\n          var minLength = group.bar ? 1 : 0; // 1 for the final bar sign if any\n          if (group.chordChanges[chordChangesMode]) {\n            for (var i = 0; i < group.chordChanges[chordChangesMode].length; i++) {\n              minLength += group.chordChanges[chordChangesMode][i].text.length;\n            }\n          }\n          minLength = Math.max(this.getGroupLength(group) + (needFinalSpace ? 1 : 0), minLength);\n          group.length = Math.max(group.length, minLength);\n\n          // filler string used to reach that length (nb: filler will always have a length of at least 1)\n          var filler = Utils.spaces(group.length - this.getGroupLength(group), showDots || this.DEBUG ? '.' : ' ');\n\n          // replace last character of filler by a | if this is the end of a bar\n          filler = filler.replace(/(.)$/, group.bar ? split > 0 && (barIndex + 1) % split === 0 ? '|\\n' : '|' : this.DEBUG ? '*' : '$1');\n\n          // append filler to text, remove new lines if splitting at bars\n          var groupText = (split > 0 ? group.text.replace(/\\n/g, '') : group.text) + filler;\n\n          this.log('[' + unit.name + '] Display group ' + (groupIndex + 1) + ' \"' + groupText.replace(/\\n/g, '\\\\N') + '\" on ' + group.length + ' chars (CEIL ' + (group.duration * unit.pmax).toFixed(2) + ' MIN ' + minLength + ' MAX ' + (maxLength || 'n/a') + ')');\n          unitText += groupText;\n\n          groupIndex++;\n          if (group.bar) barIndex++;\n        }\n\n        // we weren't asked to add chords\n      } catch (err) {\n        _didIteratorError36 = true;\n        _iteratorError36 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion36 && _iterator36.return) {\n            _iterator36.return();\n          }\n        } finally {\n          if (_didIteratorError36) {\n            throw _iteratorError36;\n          }\n        }\n      }\n\n      if (!chordChangesMode) return unitText;\n\n      // build chord inserts, based on bar or phrase wise changes, each with the text and position where to insert\n      var chordInserts = [];\n      var _iteratorNormalCompletion37 = true;\n      var _didIteratorError37 = false;\n      var _iteratorError37 = undefined;\n\n      try {\n        for (var _iterator37 = unit.groups[Symbol.iterator](), _step37; !(_iteratorNormalCompletion37 = (_step37 = _iterator37.next()).done); _iteratorNormalCompletion37 = true) {\n          var _group5 = _step37.value;\n\n          var lengthStillToPlaceOnThisGroup = 0;\n          var lengthYetPlacedOnThisGroup = 0;\n\n          // compute length of all chord inserts\n          var _iteratorNormalCompletion40 = true;\n          var _didIteratorError40 = false;\n          var _iteratorError40 = undefined;\n\n          try {\n            for (var _iterator40 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step40; !(_iteratorNormalCompletion40 = (_step40 = _iterator40.next()).done); _iteratorNormalCompletion40 = true) {\n              var chordChange = _step40.value;\n              lengthStillToPlaceOnThisGroup += chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError40 = true;\n            _iteratorError40 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion40 && _iterator40.return) {\n                _iterator40.return();\n              }\n            } finally {\n              if (_didIteratorError40) {\n                throw _iteratorError40;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion41 = true;\n          var _didIteratorError41 = false;\n          var _iteratorError41 = undefined;\n\n          try {\n            for (var _iterator41 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step41; !(_iteratorNormalCompletion41 = (_step41 = _iterator41.next()).done); _iteratorNormalCompletion41 = true) {\n              var _chordChange = _step41.value;\n\n              // position of the chord will be the position of the group + length corresponding to offset delta\n              var positionDelta = Math.ceil((_chordChange.offset - _group5.offset) / _group5.duration * _group5.length);\n              var positionDelta_ = positionDelta;\n\n              // ensure that chord name will not cross end of group it belongs to (last char of group must not be overwritten either if it is a bar)\n              while (positionDelta + lengthStillToPlaceOnThisGroup > _group5.length - (_group5.bar ? 1 : 0)) {\n                positionDelta--;\n              }\n\n              // ensure that chords already there still have enough room\n              while (positionDelta - lengthYetPlacedOnThisGroup < 0) {\n                positionDelta++;\n              }\n\n              this.log('Closest group \"' + _group5.text.replace(/\\n/g, '\\\\n') + '\" with offset ' + _group5.offset + ' and position ' + _group5.position + ' found for ' + _chordChange.text.trim() + ' with offset ' + _chordChange.offset + ' units\\n\\tposition delta from group start = ' + positionDelta + ' chars (initially ' + positionDelta_ + ' chars)');\n              chordInserts.push({ text: _chordChange.text, offset: _chordChange.offset, position: _group5.position + positionDelta });\n\n              lengthYetPlacedOnThisGroup = positionDelta + _chordChange.text.length;\n              lengthStillToPlaceOnThisGroup -= _chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError41 = true;\n            _iteratorError41 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion41 && _iterator41.return) {\n                _iterator41.return();\n              }\n            } finally {\n              if (_didIteratorError41) {\n                throw _iteratorError41;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError37 = true;\n        _iteratorError37 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion37 && _iterator37.return) {\n            _iterator37.return();\n          }\n        } finally {\n          if (_didIteratorError37) {\n            throw _iteratorError37;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion38 = true;\n      var _didIteratorError38 = false;\n      var _iteratorError38 = undefined;\n\n      try {\n        for (var _iterator38 = chordInserts[Symbol.iterator](), _step38; !(_iteratorNormalCompletion38 = (_step38 = _iterator38.next()).done); _iteratorNormalCompletion38 = true) {\n          var chordInsert = _step38.value;\n          this.log('[' + unit.name + '] Should insert ' + chordInsert.text + ' @ ' + chordInsert.offset + ' units / ' + chordInsert.position + ' chars');\n        } // insert these chord inserts\n      } catch (err) {\n        _didIteratorError38 = true;\n        _iteratorError38 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion38 && _iterator38.return) {\n            _iterator38.return();\n          }\n        } finally {\n          if (_didIteratorError38) {\n            throw _iteratorError38;\n          }\n        }\n      }\n\n      var position = 0;\n      var skip = 0;\n      var unitText_ = unitText;\n      var chordText = '';\n      unitText = '';\n      var _iteratorNormalCompletion39 = true;\n      var _didIteratorError39 = false;\n      var _iteratorError39 = undefined;\n\n      try {\n        for (var _iterator39 = unitText_[Symbol.iterator](), _step39; !(_iteratorNormalCompletion39 = (_step39 = _iterator39.next()).done); _iteratorNormalCompletion39 = true) {\n          var char = _step39.value;\n\n          if (char === '\\n') {\n            unitText += '\\n';\n            chordText += '\\n';\n            skip = 0;\n          } else {\n            var _iteratorNormalCompletion42 = true;\n            var _didIteratorError42 = false;\n            var _iteratorError42 = undefined;\n\n            try {\n              for (var _iterator42 = chordInserts[Symbol.iterator](), _step42; !(_iteratorNormalCompletion42 = (_step42 = _iterator42.next()).done); _iteratorNormalCompletion42 = true) {\n                var _chordInsert = _step42.value;\n\n                if (!_chordInsert.inserted) {\n                  if (_chordInsert.position <= position) {\n                    this.log('[' + unit.name + '] Inserting ' + _chordInsert.text + ' @ ' + position + ' chars');\n                    chordText += _chordInsert.text;\n                    _chordInsert.inserted = true;\n                    skip = _chordInsert.text.length;\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError42 = true;\n              _iteratorError42 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion42 && _iterator42.return) {\n                  _iterator42.return();\n                }\n              } finally {\n                if (_didIteratorError42) {\n                  throw _iteratorError42;\n                }\n              }\n            }\n\n            position++;\n\n            // add char to unit text, and corresponding space to chord text\n            // only bar symbols are added in chord text instead of unit text (if showing dots, then bars are displayed in both texts)\n            if (skip === 0) {\n              chordText += char === '|' ? char : ' ';\n            } else {\n              skip--;\n            }\n            unitText += char === '|' && !(showDots || this.DEBUG) ? ' ' : char;\n          }\n        }\n\n        // and interlace the two strings\n      } catch (err) {\n        _didIteratorError39 = true;\n        _iteratorError39 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion39 && _iterator39.return) {\n            _iterator39.return();\n          }\n        } finally {\n          if (_didIteratorError39) {\n            throw _iteratorError39;\n          }\n        }\n      }\n\n      return Utils.interlace(chordText, unitText, null, KEEP_EMPTY_LINES);\n    }\n  }, {\n    key: 'registerGroup',\n    value: function registerGroup(unit, offset, step, barDuration) {\n      if (!barDuration) throw new Error('Invalid bar duration passed to registerGroup');\n\n      while (step > 0) {\n        // duration added to preceding group may never be more than what's left until end of bar\n        var addDuration = Math.min(step, barDuration - offset % barDuration);\n\n        // create a new group if none or if preceding already got its duration\n        if (!unit.groups.length || !LYRICS_SUM_DURATIONS && unit.groups[unit.groups.length - 1].duration > 0) unit.groups.push({ text: '', offset: offset, duration: 0 });\n\n        // add this duration to preceding group (create it if needed)\n        unit.groups[unit.groups.length - 1].duration += addDuration;\n        offset += addDuration;\n        step -= addDuration;\n\n        // step is going to cross end of bar: directly create a first empty group\n        if (step > 0) unit.groups.push({ text: this.DEBUG > 1 ? '_' : '', offset: offset, duration: 0 });\n      }\n\n      return offset;\n    }\n  }, {\n    key: 'getGroupLength',\n    value: function getGroupLength(group) {\n      // return the number of visible graphemes in group text\n      // - newlines are not counted\n      // - tabs will be converted to spaces and may thus count as 1\n      // - use spread operator to correctly count astral unicode symbols\n      return [].concat(toConsumableArray(group.text.replace(/\\n/g, ''))).length;\n    }\n  }, {\n    key: 'getChordDisplay',\n    value: function getChordDisplay(chordDuration) {\n      // space and not empty if hidden, to ensure that a white space will show that this change does not happen at the begin of the bar\n      if (chordDuration.hidden) return ' ';\n\n      // a space prevents chord names to be glued together on group and prevents a next group from starting directly after last chord of previous group\n      return chordDuration.chord.name + ' ';\n    }\n  }]);\n  return Compiler_;\n}();\n\n/**\n * Public API\n */\n\nvar Compiler = function () {\n  function Compiler(songcheat, DEBUG) {\n    classCallCheck(this, Compiler);\n\n    this.compiler_ = new Compiler_(DEBUG);\n    if (songcheat) this.set(songcheat);\n  }\n\n  createClass(Compiler, [{\n    key: 'set',\n    value: function set$$1(songcheat) {\n      this.compiler_.log(Utils.title('COMPILE SONGCHEAT'));\n      this.scc = this.compiler_.compile(JSON.parse(JSON.stringify(songcheat)));\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit) {\n      this.compiler_.log(Utils.title('PARSE LYRICS ' + unit.name));\n      return this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      this.compiler_.log(Utils.title('GET LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }, {\n    key: 'getPartText',\n    value: function getPartText(part, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      // dummy unit with no lyrics\n      var unit = { name: part.name, part: part };\n\n      this.compiler_.log(Utils.title('PARSE PART LYRICS ' + unit.name));\n      this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n\n      this.compiler_.log(Utils.title('GET PART LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }]);\n  return Compiler;\n}();\n\nexport { Utils, Parser, ParserException, Compiler, CompilerException };\n//# sourceMappingURL=songcheat-core.esm.js.map\n","/**\n * SongCheat ChordPix 1.0.0 built on Tue Dec 26 2017 01:29:00 GMT+0100 (CET).\n  * Copyright (c) 2017 Louis Antoine <louisantoinem@gmail.com>\n *\n * http://www.songcheat.io  http://github.com/louisantoinem/songcheat-chordpix\n */\n\n/**\n * SongCheat Core 1.0.0 built on Tue Dec 26 2017 01:23:29 GMT+0100 (CET).\n  * Copyright (c) 2017 Louis Antoine <louisantoinem@gmail.com>\n *\n * http://www.songcheat.io  http://github.com/louisantoinem/songcheat-core\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Utils = function () {\n  function Utils() {\n    classCallCheck(this, Utils);\n  }\n\n  createClass(Utils, null, [{\n    key: 'arraysEqual',\n\n    /**\n    * Array helper functions\n    */\n\n    value: function arraysEqual(a, b) {\n      if (a === b) return true;\n      if (a === null || b === null) return false;\n      if (a.length !== b.length) return false;\n      for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n      }\n      return true;\n    }\n\n    /**\n    * String helper functions\n    */\n\n  }, {\n    key: 'title',\n    value: function title(str) {\n      return '\\n' + this.spaces(str.length + 8, '*') + '\\n*** ' + str + ' ***\\n' + this.spaces(str.length + 8, '*') + '\\n';\n    }\n  }, {\n    key: 'firstUpper',\n    value: function firstUpper(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n  }, {\n    key: 'camelCase',\n    value: function camelCase(s, firstUpper) {\n      var camel = s.toLowerCase().replace(/(?:[-_])(.)/g, function (match, group1) {\n        return group1.toUpperCase();\n      });\n      return firstUpper ? camel.charAt(0).toUpperCase() + camel.slice(1) : camel;\n    }\n  }, {\n    key: 'spaces',\n    value: function spaces(length, char) {\n      if (isNaN(length) || !isFinite(length) || length < 0) throw new Error('Length must a positive finite number');\n      var s = '';\n      for (var i = 0; i < length; i++) {\n        s += char || ' ';\n      }return s;\n    }\n\n    /**\n     * Interlace two multi line strings: one line of each file in alternance\n     * If the second file contains more line then the first one, these additional lines will be ignored\n     **/\n\n  }, {\n    key: 'interlace',\n    value: function interlace(text1, text2, sepLine, keepEmptyLines) {\n      var a1 = text1.split(/\\r?\\n/);\n      var a2 = text2.split(/\\r?\\n/);\n      var a = a1.map(function (v, i) {\n        var lines = keepEmptyLines || a2[i] && a2[i].trim() ? [v, a2[i]] : [v];\n        if (typeof sepLine === 'string') lines.push(sepLine);\n        return lines.join('\\n');\n      });\n      return a.join('\\n');\n    }\n\n    /**\n     * Encode given parameters as a GET query string\n     **/\n\n  }, {\n    key: 'encodeQueryData',\n    value: function encodeQueryData(data) {\n      var ret = [];\n      for (var d in data) {\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n      }\n      return ret.join('&');\n    }\n\n    /**\n     * Convert a duration code to the smallest unit (64th)\n     **/\n\n  }, {\n    key: 'duration',\n    value: function duration(code) {\n      if (code === ':32') return 2;\n      if (code === ':16') return 4;\n      if (code === ':8') return 8;\n      if (code === ':q') return 16;\n      if (code === ':h') return 32;\n      if (code === ':w') return 64;\n\n      if (code === ':32d') return 3;\n      if (code === ':16d') return 6;\n      if (code === ':8d') return 12;\n      if (code === ':qd') return 24;\n      if (code === ':hd') return 48;\n      if (code === ':wd') return 96;\n\n      throw new Error('Invalid duration code \"' + code + '\"');\n    }\n\n    /**\n     * Convert back a number of units (64th) into a duration code\n     **/\n\n  }, {\n    key: 'durationcode',\n    value: function durationcode(units) {\n      var _arr = ['w', 'h', 'q', '8', '16', '32'];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var code = _arr[_i];\n        if (this.duration(':' + code) === units) return ':' + code;\n        if (this.duration(':' + code + 'd') === units) return ':' + code + 'd';\n      }\n\n      throw new Error('Could not find a code with a value of ' + units + ' units');\n    }\n\n    /**\n     * Convert a number of units (64th) into one or several duration codes\n     **/\n\n  }, {\n    key: 'durationcodes',\n    value: function durationcodes(units) {\n      var codes = [];\n\n      var current = units;\n      var rest = 0;\n\n      while (current > 0) {\n        try {\n          codes.push(this.durationcode(current));\n          current = rest;\n          rest = 0;\n        } catch (e) {\n          current--;\n          rest++;\n        }\n      }\n\n      if (rest > 0) throw new Error('Could not find codes adding to a value of ' + units + ' units');\n\n      return codes;\n    }\n\n    /**\n     * Convert a fret number (up to 35) to a single char (digit or capital letter)\n     * Fret 10 is notated as A, 11 as B, ... and 35 as Z\n     */\n\n  }, {\n    key: 'fret2char',\n    value: function fret2char(fret) {\n      if (isNaN(fret) || fret < 0 || fret > 35) throw new Error('Cannot convert fret number ' + fret + ' to a single char (expected a value between 0 and 35)');\n      return fret < 10 ? '' + fret : String.fromCharCode('A'.charCodeAt(0) + fret - 10);\n    }\n\n    /**\n     * Convert a single char (digit or capital letter) to a fret number\n     * A means fret 10, 11 fret B, ... and Z fret 35\n     */\n\n  }, {\n    key: 'char2fret',\n    value: function char2fret(char) {\n      if (typeof char !== 'string') throw new Error('Invalid fret char ' + char + ' expected a string');\n      if (!char.match(/^[0-9A-Z]$/)) throw new Error('Invalid fret char ' + char + ' (expected a value between [0-9] or [A-Z])');\n      return char >= 'A' ? 10 + char.charCodeAt(0) - 'A'.charCodeAt(0) : parseInt(char, 10);\n    }\n\n    /**\n     * Convert an absolute fret number (single char) to a relative fret number (0 never changes)\n     */\n\n  }, {\n    key: 'abs2rel',\n    value: function abs2rel(char, startingFret) {\n      var fret = this.char2fret(char);\n      if (isNaN(fret) || fret < 0) throw new Error('Invalid fret number ' + fret + ' (expected a positive or 0 integer value)');\n      if (fret === 0) return 0;\n      if (isNaN(startingFret) || startingFret < 0) throw new Error('Invalid starting fret number ' + startingFret + ' (expected a positive or 0 integer value)');\n      if (startingFret + 8 < fret || startingFret > fret) throw new Error('Fret ' + fret + ' cannot be made relative to starting fret ' + startingFret + ' within the allowed range of 1 to 9');\n      return fret + 1 - startingFret;\n    }\n\n    /**\n     * Convert a relative fret number to an absolute fret number (single char) (0 never changes)\n     */\n\n  }, {\n    key: 'rel2abs',\n    value: function rel2abs(relFret, startingFret) {\n      return this.fret2char(relFret ? relFret + startingFret - 1 : relFret);\n    }\n\n    /**\n     * Take a chord and a placeholder contents\n     * Return an array containing one object { string, fret, mute } for each played string\n     */\n\n  }, {\n    key: 'chordStrings',\n    value: function chordStrings(chord, strings) {\n      if (!chord.tablature) throw new Error('Tablature not defined for chord ' + chord.name);\n      if (!chord.fingering) throw new Error('Fingering not defined for chord ' + chord.name);\n\n      var result = [];\n      for (var i = 0; i < chord.tablature.length; i++) {\n        // string will be between 6 and 1 since chord.tablature.length has been verified and is 6\n        var string = 6 - i;\n\n        // string never played in this chord\n        if (chord.tablature[i] === 'x') continue;\n\n        // first time we meet a played string, it's the bass so replace B and B' with the string number\n        strings = strings.replace(/B'/g, string >= 5 ? string - 1 : string);\n        strings = strings.replace(/B/g, string);\n\n        // check if this string should be played with the right hand\n        // * means \"all strings\", otherwise concatenated specific string numbers are specified (or B for bass or B' for alternate bass)\n        // x after string means muted (ghost) note\n        if (strings.match(/^\\*/) || strings.indexOf(string) !== -1) {\n          var fret = this.char2fret(chord.tablature[i]);\n          var xIndex = strings.match(/^\\*/) ? 1 : strings.indexOf(string) + 1;\n          var mute = strings[xIndex] === 'x';\n          result.push({\n            string: string,\n            fret: fret,\n            mute: mute\n          });\n        }\n      }\n\n      return result;\n    }\n  }]);\n  return Utils;\n}();\n\nvar ParserException = function () {\n  function ParserException(line, message) {\n    classCallCheck(this, ParserException);\n\n    this.message = message;\n    this.line = line;\n  }\n\n  createClass(ParserException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Parser error at line ' + this.line + ': ' + this.message;\n    }\n  }]);\n  return ParserException;\n}();\n\nvar Parser_ = function () {\n  function Parser_() {\n    classCallCheck(this, Parser_);\n\n    this.songcheat = {};\n    this.blocks = {};\n  }\n\n  createClass(Parser_, [{\n    key: 'parse',\n    value: function parse(text) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return this.songcheat;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n      }\n\n      return this.songcheat;\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(text, line) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      var lastResult = null;\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return true;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        if (token.line > line) return lastResult;\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n\n        lastResult = { line: token.line, keyword: keyword, params: params, chordIndex: null, rhythmIndex: null, partIndex: null, unitIndex: null };\n\n        if (keyword === 'chord') lastResult.chordIndex = this.songcheat.chords.length - 1;else if (keyword === 'rhythm') lastResult.rhythmIndex = this.songcheat.rhythms.length - 1;else if (keyword === 'part') lastResult.partIndex = this.songcheat.parts.length - 1;else if (keyword === 'structure') {\n          // special case since there is no distinct UNIT keyword for each unit, but a single STRUCTURE keyword for all units\n          var paramIndex = 0;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = params[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var param = _step.value;\n\n              if (param.line > line) break;\n              lastResult.unitIndex = Math.floor(paramIndex / 2);\n              paramIndex++;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      return lastResult;\n    }\n  }, {\n    key: 'isKeyword',\n    value: function isKeyword(token) {\n      var keyword = Utils.camelCase(token.value);\n      return ['artist', 'title', 'year', 'difficulty', 'video', 'tutorial', 'comment', 'tuning', 'capo', 'key', 'time', 'tempo', 'shuffle', 'chord', 'rhythm', 'block', 'part', 'lyricsUnit' /* will disappear soon */, 'structure'].indexOf(keyword) >= 0 ? keyword : false;\n    }\n  }, {\n    key: 'tokenize',\n    value: function tokenize(text) {\n      var tokens = [];\n\n      // https://stackoverflow.com/questions/4780728/regex-split-string-preserving-quotes?noredirect=1&lq=1\n      var reSpaces = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)[\\s\\t]+(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n      var reNewline = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)(\\r?\\n)(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n\n      var lineNumber = 1;\n\n      // split at newlines unless enclosed in quotes\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = text.split(reNewline)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var line = _step2.value;\n\n          // split also returns the newlines, ignore them\n          if (line.match(/^\\r?\\n$/)) continue;\n\n          // trim line\n          line = line.trim();\n\n          // console.log(\"L\" + lineNumber + \": [\"+ line + \"]\");\n\n          // if not a comment or empty line\n          if (line && !line.match(/^#/)) {\n            // split at spaces and tabs unless enclosed in quotes, then trim spaces and quotes\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = line.split(reSpaces).map(function (s) {\n                return s.trim().replace(/^\"|\"$/g, '');\n              })[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n                tokens.push({ 'value': value, 'line': lineNumber });\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n\n          // increment line number\n          lineNumber += 1 + (line.match(/(?:\\r?\\n)/g) || []).length;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: 'handleDefault',\n    value: function handleDefault(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat[keyword] = ['year', 'capo', 'difficulty'].indexOf(keyword) >= 0 ? parseInt(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleSignature',\n    value: function handleSignature(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || {};\n      this.songcheat['signature'][keyword] = keyword === 'tempo' ? parseFloat(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleKey',\n    value: function handleKey(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTempo',\n    value: function handleTempo(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleShuffle',\n    value: function handleShuffle(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTime',\n    value: function handleTime(line, keyword, params) {\n      if (params.length !== 3) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 3 values, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || [];\n      this.songcheat['signature']['time'] = { 'beatsPerBar': params[1].value, 'beatDuration': params[2].value, 'symbol': params[0].value };\n    }\n  }, {\n    key: 'handleChord',\n    value: function handleChord(line, keyword, params) {\n      if (params.length < 2 || params.length > 4) throw new ParserException(line, keyword.toUpperCase() + ' expected between 2 and 4 values (name, tablature[, fingering=\"000000/-\", comment=\"\"]), but found ' + params.length);\n\n      var name = params[0].value;\n      var tablature = params[1].value;\n      var fingering = params.length >= 3 ? params[2].value : '000000/-';\n      var comment = params.length >= 4 ? params[3].value : '';\n\n      this.songcheat['chords'] = this.songcheat['chords'] || [];\n      var chord = { 'id': this.songcheat['chords'].length + 1, 'name': name, 'tablature': tablature, 'fingering': fingering, 'comment': comment };\n      this.songcheat['chords'].push(chord);\n\n      // return created chord (used when meeting an inline chord)\n      return chord;\n    }\n  }, {\n    key: 'handleRhythm',\n    value: function handleRhythm(line, keyword, params) {\n      if (params.length !== 2) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 2 values (id and score), but found ' + params.length);\n      this.songcheat['rhythms'] = this.songcheat['rhythms'] || [];\n      this.songcheat['rhythms'].push({ 'id': this.songcheat['rhythms'].length + 1, 'name': params[0].value, 'score': params[1].value });\n    }\n  }, {\n    key: 'handleBlock',\n    value: function handleBlock(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.blocks[params[0].value] = params.slice(1);\n    }\n  }, {\n    key: 'handlePart',\n    value: function handlePart(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.songcheat['parts'] = this.songcheat['parts'] || [];\n\n      // extract part name from params\n      var part = { 'id': this.songcheat['parts'].length + 1, 'name': params[0].value, 'phrases': [] };\n      params = params.splice(1);\n      this.songcheat['parts'].push(part);\n\n      // iterate on remaining params to get bars and phrases\n      var bars = [];\n      for (var pIndex = 0; pIndex < params.length; pIndex++) {\n        var param = params[pIndex];\n\n        // phrase separator\n        if (param.value === '||') {\n          part.phrases.push({ 'bars': bars });\n          bars = [];\n          continue;\n        }\n\n        // bar repeater\n        if (param.value === '%') {\n          if (bars.length === 0) throw new ParserException(param.line, 'found bar repeater ' + param.value + ' but there is no bar yet in phrase');\n          bars.push(JSON.parse(JSON.stringify(bars[bars.length - 1])));\n          continue;\n        }\n\n        // bar between []\n        if (param.value.match(/^\\[[^[\\]]+\\]$/)) {\n          var bar = { 'rhythm': null, 'chords': [] };\n          var str = param.value.substr(1, param.value.length - 2);\n          var parts = str.split(/\\*|:/);\n\n          // find rhythm\n          var found = false;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.songcheat['rhythms'][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var rhythm = _step4.value;\n\n              if (rhythm.name === parts[0]) {\n                bar.rhythm = rhythm.id;\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          if (!found) throw new ParserException(param.line, parts[0] + ' is not the name of an existing rhythm');\n\n          // find chords\n          parts = parts.slice(1);\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = parts[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var _part = _step5.value;\n\n              // chord repeater\n              if (!_part.trim()) {\n                if (bar.chords.length === 0) throw new ParserException(param.line, 'found chord repeater but there is no chord yet in bar');\n                bar.chords.push(JSON.parse(JSON.stringify(bar.chords[bar.chords.length - 1])));\n                continue;\n              }\n\n              // search for chord by its name\n              var _found = false;\n              var _iteratorNormalCompletion6 = true;\n              var _didIteratorError6 = false;\n              var _iteratorError6 = undefined;\n\n              try {\n                for (var _iterator6 = this.songcheat['chords'][Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                  var chord = _step6.value;\n\n                  if (chord.name === _part) {\n                    bar.chords.push(chord.id);\n                    _found = true;\n                    break;\n                  }\n                }\n\n                // if no chord found with this name but this is a valid chord tablature (with an optional barred fret /[-0-9A-Z])\n              } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                  }\n                } finally {\n                  if (_didIteratorError6) {\n                    throw _iteratorError6;\n                  }\n                }\n              }\n\n              if (!_found && _part.match(/^[x0-9A-Z]{6}(\\/[-0-9A-Z])?$/)) {\n                // create inline chord with the name being the tablature itself, and no fingering nor comment\n                var _chord = this.handleChord(param.line, 'chord', [{ value: _part, line: param.line }, { value: _part.split('/')[0], line: param.line }, { value: '000000/' + (_part.split('/')[1] || '-'), line: param.line }]);\n                bar.chords.push(_chord.id);\n                _found = true;\n              }\n\n              if (!_found) throw new ParserException(param.line, _part + ' is not the name of an existing chord and is not a valid chord tablature');\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          bars.push(bar);\n          continue;\n        }\n\n        // not a || phrase separator nor a [] bar: must be a block name\n        if (!this.blocks[param.value]) throw new ParserException(param.line, param.value + ' is not the name of an existing block');\n\n        // insert block tokens in params at current position\n        var args = [pIndex, 1];\n        Array.prototype.push.apply(args, this.blocks[param.value]);\n        Array.prototype.splice.apply(params, args);\n        pIndex--;\n      }\n\n      // end of last phrase\n      if (bars.length > 0) part.phrases.push({ 'bars': bars });\n    }\n  }, {\n    key: 'handleStructure',\n    value: function handleStructure(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (part name and lyrics), but found ' + params.length);\n      if (params.length % 2 !== 0) throw new ParserException(line, keyword.toUpperCase() + ' expected an even number of parameters (N x part name and lyrics), but found ' + params.length);\n      this.songcheat['structure'] = this.songcheat['structure'] || [];\n\n      for (var pIndex = 0; pIndex < params.length; pIndex += 2) {\n        var param = params[pIndex];\n\n        var found = false;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = this.songcheat['parts'][Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var part = _step7.value;\n\n            if (part.name === param.value) {\n              this.songcheat['structure'].push({ 'part': part.id, 'lyrics': params[pIndex + 1].value });\n              found = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        if (!found) throw new ParserException(param.line, param.value + '\" is not the name of an existing part');\n      }\n    }\n  }]);\n  return Parser_;\n}();\n\n/**\n * Public API\n */\n\nvar Parser = function () {\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    this.parser_ = new Parser_();\n  }\n\n  createClass(Parser, [{\n    key: 'parse',\n    value: function parse(songcheat) {\n      return this.parser_.parse(songcheat);\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(songcheat, line) {\n      return this.parser_.getPrecedingKeyword(songcheat, line);\n    }\n  }]);\n  return Parser;\n}();\n\nvar MIN_LYRICS_BARLEN = 20; // minimum length of a bar lyrics (before reducing) - not really needed but produces a clearer view when maxConsecutiveSpaces set to 0 (and thus when displaying parts with partdisplay=full) since bars with no or little text will have the same length (unless there are really many chord changes...)\nvar LYRICS_SUM_DURATIONS = false; // if true \"::\" is equivalent to \":h:\" (assuming lyrics unit is :q)\nvar KEEP_EMPTY_LINES = false;\n\nvar CompilerException = function () {\n  function CompilerException(message) {\n    classCallCheck(this, CompilerException);\n\n    this.message = message;\n  }\n\n  createClass(CompilerException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Compiler error: ' + this.message;\n    }\n  }]);\n  return CompilerException;\n}();\n\nvar Compiler_ = function () {\n  function Compiler_(DEBUG) {\n    classCallCheck(this, Compiler_);\n\n    // DEBUG 1 forces showing . * | characters in unit text (even if showDots is passed false) as well as _ for groups that were automatically created when crossing a bar\n    this.DEBUG = DEBUG;\n  }\n\n  createClass(Compiler_, [{\n    key: 'log',\n    value: function log() {\n      if (this.DEBUG > 0) console.log.apply(console, arguments);\n    }\n  }, {\n    key: 'compile',\n    value: function compile(songcheat) {\n      // default values for optional properties\n      songcheat.mode = songcheat.mode || 'rt';\n      songcheat.lyricsMode = songcheat.lyricsMode || 's';\n      songcheat.barsPerLine = songcheat.barsPerLine || 4;\n      songcheat.signature = songcheat.signature || {};\n      songcheat.signature.key = songcheat.signature.key || 'C';\n      songcheat.signature.time = songcheat.signature.time || { beatDuration: ':q', beatsPerBar: 4, symbol: '4/4' };\n      songcheat.lyricsUnit = songcheat.lyricsUnit || songcheat.signature.time.beatDuration;\n      songcheat.chords = songcheat.chords || [];\n      songcheat.rhythms = songcheat.rhythms || [];\n      songcheat.parts = songcheat.parts || [];\n\n      // deduce bar duration from signature\n      songcheat.barDuration = songcheat.signature.time.beatsPerBar * Utils.duration(songcheat.signature.time.beatDuration);\n\n      // resolve all id references (rhythms and chords)\n      this.resolveIds(songcheat);\n\n      // default structure if not specified : one unit for each part\n      if (!songcheat.structure) {\n        songcheat.structure = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = songcheat.parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var part = _step.value;\n            songcheat.structure.push({ 'part': part });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      // give a name to each unit if not already set = name of part with automatic numbering\n      var unitsByPart = {};\n      var numberByPart = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = songcheat.structure[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var unit = _step2.value;\n          unitsByPart[unit.part.id] = typeof unitsByPart[unit.part.id] === 'undefined' ? 1 : unitsByPart[unit.part.id] + 1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = songcheat.structure[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _unit = _step3.value;\n\n          numberByPart[_unit.part.id] = typeof numberByPart[_unit.part.id] === 'undefined' ? 1 : numberByPart[_unit.part.id] + 1;\n          if (!_unit.name) _unit.name = _unit.part.name + (unitsByPart[_unit.part.id] > 1 ? ' ' + numberByPart[_unit.part.id] : '');\n        }\n\n        // give a color to each part if not already set\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var colors = ['red', '#06D6A0', 'blue', 'purple', 'orange', 'magenta'];\n      var partIndex = 0;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = songcheat.parts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _part = _step4.value;\n          if (!_part.color) _part.color = colors[partIndex++ % colors.length];\n        }\n\n        // validate and compile each rhythm\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = songcheat.rhythms[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var rhythm = _step5.value;\n          this.compileRhythm(rhythm, songcheat.signature.time.beatDuration);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = songcheat.parts[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _part2 = _step6.value;\n\n          // compute a \"chordChanges\" property in each phrase\n          var phraseIndex = 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = _part2.phrases[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var phrase = _step7.value;\n\n              phrase.chordChanges = [];\n              var lastChord = null;\n              var _iteratorNormalCompletion9 = true;\n              var _didIteratorError9 = false;\n              var _iteratorError9 = undefined;\n\n              try {\n                for (var _iterator9 = phrase.bars[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  var bar = _step9.value;\n                  lastChord = this.addChordChanges(bar, phrase.chordChanges, songcheat.barDuration, false, lastChord);\n                }\n              } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                    _iterator9.return();\n                  }\n                } finally {\n                  if (_didIteratorError9) {\n                    throw _iteratorError9;\n                  }\n                }\n              }\n\n              this.log('Phrase wise chord durations for phrase ' + _part2.name + '.' + (phraseIndex + 1));\n              var _iteratorNormalCompletion10 = true;\n              var _didIteratorError10 = false;\n              var _iteratorError10 = undefined;\n\n              try {\n                for (var _iterator10 = phrase.chordChanges[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                  var c = _step10.value;\n                  this.log('\\t[' + c.chord.name + '] = ' + c.duration + ' units');\n                } // compute a \"chordChanges\" property in each bar\n              } catch (err) {\n                _didIteratorError10 = true;\n                _iteratorError10 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                    _iterator10.return();\n                  }\n                } finally {\n                  if (_didIteratorError10) {\n                    throw _iteratorError10;\n                  }\n                }\n              }\n\n              var barIndex = 0;\n              var _iteratorNormalCompletion11 = true;\n              var _didIteratorError11 = false;\n              var _iteratorError11 = undefined;\n\n              try {\n                for (var _iterator11 = phrase.bars[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                  var _bar = _step11.value;\n\n                  _bar.chordChanges = { 'bar': [], 'rhythm': [] };\n                  var _arr = ['rhythm', 'bar'];\n                  for (var _i = 0; _i < _arr.length; _i++) {\n                    var chordChangesMode = _arr[_i];this.addChordChanges(_bar, _bar.chordChanges[chordChangesMode], songcheat.barDuration, chordChangesMode === 'bar');\n                  }this.log('\\tRythm wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion12 = true;\n                  var _didIteratorError12 = false;\n                  var _iteratorError12 = undefined;\n\n                  try {\n                    for (var _iterator12 = _bar.chordChanges['rhythm'][Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                      var _c = _step12.value;\n                      this.log('\\t\\t[' + _c.chord.name + '] = ' + _c.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError12 = true;\n                    _iteratorError12 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                        _iterator12.return();\n                      }\n                    } finally {\n                      if (_didIteratorError12) {\n                        throw _iteratorError12;\n                      }\n                    }\n                  }\n\n                  this.log('\\tBar wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion13 = true;\n                  var _didIteratorError13 = false;\n                  var _iteratorError13 = undefined;\n\n                  try {\n                    for (var _iterator13 = _bar.chordChanges['bar'][Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                      var _c2 = _step13.value;\n                      this.log('\\t\\t[' + _c2.chord.name + '] = ' + _c2.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError13 = true;\n                    _iteratorError13 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                        _iterator13.return();\n                      }\n                    } finally {\n                      if (_didIteratorError13) {\n                        throw _iteratorError13;\n                      }\n                    }\n                  }\n\n                  barIndex++;\n                }\n              } catch (err) {\n                _didIteratorError11 = true;\n                _iteratorError11 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                    _iterator11.return();\n                  }\n                } finally {\n                  if (_didIteratorError11) {\n                    throw _iteratorError11;\n                  }\n                }\n              }\n\n              phraseIndex++;\n            }\n\n            // compute duration of part\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          _part2.duration = 0;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = _part2.phrases[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var _phrase = _step8.value;\n              var _iteratorNormalCompletion14 = true;\n              var _didIteratorError14 = false;\n              var _iteratorError14 = undefined;\n\n              try {\n                for (var _iterator14 = _phrase.bars[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                  var _bar2 = _step14.value;\n                  _part2.duration += _bar2.rhythm.duration;\n                }\n              } catch (err) {\n                _didIteratorError14 = true;\n                _iteratorError14 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                    _iterator14.return();\n                  }\n                } finally {\n                  if (_didIteratorError14) {\n                    throw _iteratorError14;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n\n        // fluid API\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return songcheat;\n    }\n  }, {\n    key: 'resolveIds',\n    value: function resolveIds(songcheat) {\n      var unitIndex = 0;\n      if (songcheat.structure) {\n        var _iteratorNormalCompletion15 = true;\n        var _didIteratorError15 = false;\n        var _iteratorError15 = undefined;\n\n        try {\n          for (var _iterator15 = songcheat.structure[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n            var unit = _step15.value;\n\n            if (!unit.part) throw new CompilerException('Part not defined for unit ' + (unitIndex + 1));\n\n            // resolve part id\n            var part = this.resolveId(songcheat.parts, unit.part);\n            if (!part) throw new CompilerException('Part ' + unit.part + ' not found');\n            unit.part = part;\n\n            unitIndex++;\n          }\n        } catch (err) {\n          _didIteratorError15 = true;\n          _iteratorError15 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion15 && _iterator15.return) {\n              _iterator15.return();\n            }\n          } finally {\n            if (_didIteratorError15) {\n              throw _iteratorError15;\n            }\n          }\n        }\n      }\n\n      if (songcheat.parts) {\n        var _iteratorNormalCompletion16 = true;\n        var _didIteratorError16 = false;\n        var _iteratorError16 = undefined;\n\n        try {\n          for (var _iterator16 = songcheat.parts[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n            var _part3 = _step16.value;\n\n            if (!_part3.phrases) throw new CompilerException('Phrases not defined for part \"' + _part3.name + '\"');\n            if (!(_part3.phrases instanceof Array)) throw new CompilerException('Phrases defined for part \"' + _part3.name + '\" must be an Array, found: ' + _typeof(songcheat.parts.phrases));\n\n            var phraseIndex = 0;\n            var _iteratorNormalCompletion17 = true;\n            var _didIteratorError17 = false;\n            var _iteratorError17 = undefined;\n\n            try {\n              for (var _iterator17 = _part3.phrases[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                var phrase = _step17.value;\n\n                var barIndex = 0;\n                var _iteratorNormalCompletion18 = true;\n                var _didIteratorError18 = false;\n                var _iteratorError18 = undefined;\n\n                try {\n                  for (var _iterator18 = phrase.bars[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                    var bar = _step18.value;\n\n                    if (!bar.rhythm) throw new CompilerException('Rhythm not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!bar.chords) throw new CompilerException('Chords not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!(bar.chords instanceof Array)) throw new CompilerException('Chords defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' must be an Array, found: ' + _typeof(bar.chords));\n\n                    // resolve rhythm id\n                    var rhythm = this.resolveId(songcheat.rhythms, bar.rhythm);\n                    if (!rhythm) throw new CompilerException('Rhythm ' + bar.rhythm + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                    bar.rhythm = rhythm;\n\n                    // resolved array of chord ids\n                    var chords = [];\n                    var _iteratorNormalCompletion19 = true;\n                    var _didIteratorError19 = false;\n                    var _iteratorError19 = undefined;\n\n                    try {\n                      for (var _iterator19 = bar.chords[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                        var chordId = _step19.value;\n\n                        // resolve chord id\n                        var chord = this.resolveId(songcheat.chords, chordId);\n                        if (!chord) throw new CompilerException('Chord ' + chordId + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                        chords.push(chord);\n                      }\n                    } catch (err) {\n                      _didIteratorError19 = true;\n                      _iteratorError19 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                          _iterator19.return();\n                        }\n                      } finally {\n                        if (_didIteratorError19) {\n                          throw _iteratorError19;\n                        }\n                      }\n                    }\n\n                    bar.chords = chords;\n                    barIndex++;\n                  }\n                } catch (err) {\n                  _didIteratorError18 = true;\n                  _iteratorError18 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                      _iterator18.return();\n                    }\n                  } finally {\n                    if (_didIteratorError18) {\n                      throw _iteratorError18;\n                    }\n                  }\n                }\n\n                phraseIndex++;\n              }\n            } catch (err) {\n              _didIteratorError17 = true;\n              _iteratorError17 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                  _iterator17.return();\n                }\n              } finally {\n                if (_didIteratorError17) {\n                  throw _iteratorError17;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError16 = true;\n          _iteratorError16 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion16 && _iterator16.return) {\n              _iterator16.return();\n            }\n          } finally {\n            if (_didIteratorError16) {\n              throw _iteratorError16;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'resolveId',\n    value: function resolveId(collection, id) {\n      if (collection) {\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n          for (var _iterator20 = collection[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n            var i = _step20.value;\n            if (i.id === id) return i;\n          }\n        } catch (err) {\n          _didIteratorError20 = true;\n          _iteratorError20 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion20 && _iterator20.return) {\n              _iterator20.return();\n            }\n          } finally {\n            if (_didIteratorError20) {\n              throw _iteratorError20;\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'compileRhythm',\n    value: function compileRhythm(rhythm, initialNoteDuration) {\n      this.log('Compiling rhythm ' + rhythm.id + ' with score \"' + rhythm.score + '\"');\n\n      // default note duration, until changed\n      var noteDuration = initialNoteDuration;\n\n      // take not of each placeholder's index, so we can later fetch the associated chord\n      rhythm.placeholdercount = 0;\n\n      // for locating syntax errors in message\n      var position = 1;\n      var lastToken = null;\n\n      // compile the score string into an array of objects\n      rhythm.compiledScore = [];\n      var _iteratorNormalCompletion21 = true;\n      var _didIteratorError21 = false;\n      var _iteratorError21 = undefined;\n\n      try {\n        for (var _iterator21 = rhythm.score.split(/((?::(?:w|h|q|8|16|32)d?)|\\(#\\)|T?\\s*\\([^(]*\\)[^()\\sT:]*)/)[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n          var token = _step21.value;\n\n          if (token = token.trim()) {\n            var match = null;\n            if (match = token.match(/^(:(?:w|h|q|8|16|32)d?)$/)) {\n              // duration: change note duration to use next\n              noteDuration = Utils.duration(match[1]);\n            } else if (match = token.match(/^\\(#\\)$/)) {\n              // rest\n              rhythm.compiledScore.push({ rest: true, duration: noteDuration, tied: false, strings: false, flags: {}, placeholderIndex: rhythm.placeholdercount++ });\n            } else if (match = token.match(/^(T?)\\s*\\(([^(]*)\\)([^()\\s]*)$/)) {\n              // chord placeholder\n              var tied = match[1] === 'T';\n\n              // strings = between parentheses\n              var strings = match[2];\n              if (strings === '') strings = '*'; // an empty string is a shortcut for \"*\"\n              if (strings === 'x') strings = '*x'; // a x alone is a shortcut for \"*x\"\n              if (!strings.match(/^(?:(\\*x?)|((?:(?:B|B'|1|2|3|4|5|6)x?)+))$/)) throw new CompilerException('Invalid syntax found in chord placeholder: ' + strings);\n\n              // flags = after parentheses\n              var flagsString = match[3];\n              var flags = { stroke: null, accent: false, pm: false, fingering: null };\n              var _iteratorNormalCompletion23 = true;\n              var _didIteratorError23 = false;\n              var _iteratorError23 = undefined;\n\n              try {\n                for (var _iterator23 = flagsString.split(/(dd?|uu?|>|PM|[pima]+)/)[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n                  var flag = _step23.value;\n\n                  if (flag.trim()) {\n                    if (flag.match(/^(dd?|uu?)$/g)) {\n                      // stroke mode\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.stroke) throw new CompilerException('More than one stroke mode (d, u, dd, uu) defined for the chord placeholder: ' + token);\n                      flags.stroke = flag;\n                    } else if (flag.match(/^[pima]+$/)) {\n                      // PIMA fingering\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('More than one fingering (pima) defined for the chord placeholder: ' + token);\n                      flags.fingering = flag;\n                    } else if (flag.match(/^PM$/)) {\n                      // palm muting\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('More than one palm muting (PM) defined for the chord placeholder: ' + token);\n                      flags.pm = true;\n                    } else if (flag.match(/^>$/)) {\n                      // accent\n                      if (flags.accent) throw new CompilerException('More than one accent (>) defined for the same placeholder: ' + token);\n                      flags.accent = true;\n                    } else throw new CompilerException('Invalid flag \"' + flag + '\" defined for chord placeholder \"' + token + '\"');\n                  }\n                }\n\n                // add a note\n              } catch (err) {\n                _didIteratorError23 = true;\n                _iteratorError23 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion23 && _iterator23.return) {\n                    _iterator23.return();\n                  }\n                } finally {\n                  if (_didIteratorError23) {\n                    throw _iteratorError23;\n                  }\n                }\n              }\n\n              rhythm.compiledScore.push({ rest: false, duration: noteDuration, tied: tied, strings: strings, flags: flags, placeholderIndex: rhythm.placeholdercount++ });\n            } else throw new CompilerException('Invalid token \"' + token + '\" in rhythm score definition at position ' + position + (lastToken ? ' (after \"' + lastToken + '\")' : ''));\n\n            lastToken = token;\n          }\n\n          position += token.length;\n        }\n\n        // compute total rhythm duration\n      } catch (err) {\n        _didIteratorError21 = true;\n        _iteratorError21 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion21 && _iterator21.return) {\n            _iterator21.return();\n          }\n        } finally {\n          if (_didIteratorError21) {\n            throw _iteratorError21;\n          }\n        }\n      }\n\n      rhythm.duration = 0;\n      var _iteratorNormalCompletion22 = true;\n      var _didIteratorError22 = false;\n      var _iteratorError22 = undefined;\n\n      try {\n        for (var _iterator22 = rhythm.compiledScore[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n          var o = _step22.value;\n          rhythm.duration += o.duration;\n        }\n      } catch (err) {\n        _didIteratorError22 = true;\n        _iteratorError22 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion22 && _iterator22.return) {\n            _iterator22.return();\n          }\n        } finally {\n          if (_didIteratorError22) {\n            throw _iteratorError22;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'addChordChanges',\n    value: function addChordChanges(bar, chordChanges, barDuration, resetAtBars, lastChord) {\n      // ensure number of chords match number of placeholders in rhythm score, by repeating last chord\n      if (bar.chords.length < 1) throw new CompilerException('chords must contain at least 1 entry, but ' + bar.chords.length + ' were found');\n      while (bar.chords.length < bar.rhythm.placeholdercount) {\n        bar.chords.push(bar.chords[bar.chords.length - 1]);\n      }var offset = 0;\n      var _iteratorNormalCompletion24 = true;\n      var _didIteratorError24 = false;\n      var _iteratorError24 = undefined;\n\n      try {\n        for (var _iterator24 = bar.rhythm.compiledScore[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n          var note = _step24.value;\n\n          // get chord corresponding to the placeholder position\n          var chord = bar.chords[note.placeholderIndex];\n          if (!chord) throw new CompilerException('No chord found for placeholder ' + (note.placeholderIndex + 1));\n\n          // same chord as before and not a new bar: increment duration with this new note\n          if (lastChord === chord && offset % barDuration !== 0) chordChanges[chordChanges.length - 1].duration += note.duration;\n\n          // chord changed: new duration starts with one note of the new chord\n          // unless requested to reset chords at bars, chord change will be hidden if still the same as before\n          else chordChanges.push({ chord: chord, duration: note.duration, hidden: lastChord === chord && !resetAtBars });\n\n          lastChord = chord;\n          offset += note.duration;\n        }\n      } catch (err) {\n        _didIteratorError24 = true;\n        _iteratorError24 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion24 && _iterator24.return) {\n            _iterator24.return();\n          }\n        } finally {\n          if (_didIteratorError24) {\n            throw _iteratorError24;\n          }\n        }\n      }\n\n      return lastChord;\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit, defaultCursorStep, barDuration) {\n      var warnings = [];\n      var offset = 0;\n\n      // remove DOS newlines\n      unit.lyrics = (unit.lyrics || '').replace(/\\r/g, '');\n\n      // split lyrics into word groups, split occurs at cursor forward instructions (colons, durations and bars)\n      unit.groups = [];\n      var _iteratorNormalCompletion25 = true;\n      var _didIteratorError25 = false;\n      var _iteratorError25 = undefined;\n\n      try {\n        for (var _iterator25 = unit.lyrics.split(/((?::(?:w|h|q|8|16|32)d?)?:|\\|)/)[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n          var part = _step25.value;\n          // nb: split with capture groups only works in decent browsers, e.g. IE10+\n          var match = null;\n          // move cursor forward by given or default step duration\n          if (match = part.match(/(:(?:w|h|q|8|16|32)d?)?:/)) offset = this.registerGroup(unit, offset, match[1] ? Utils.duration(match[1]) : defaultCursorStep, barDuration);\n\n          // move cursor to begin of next bar\n          else if (part.match(/\\|/)) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n            // (non empty) word group (waiting for its duration)\n            else if (part.length > 0) unit.groups.push({ text: part, offset: offset, duration: 0 });\n        }\n\n        // simulate a final bar if last group still open (no duration), i.e. if lyrics do not end on a : or |\n      } catch (err) {\n        _didIteratorError25 = true;\n        _iteratorError25 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion25 && _iterator25.return) {\n            _iterator25.return();\n          }\n        } finally {\n          if (_didIteratorError25) {\n            throw _iteratorError25;\n          }\n        }\n      }\n\n      if (unit.groups.length && unit.groups[unit.groups.length - 1].duration === 0) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n      // get missing duration and complete with empty groups if needed (offset now contains the total duration of all groups)\n      var missingDuration = unit.part.duration - offset;\n      this.log('[' + unit.name + '] Missing duration = ' + missingDuration + ' units (' + unit.part.duration + ' - ' + offset + ') = ' + missingDuration / barDuration + ' bars missing');\n      if (missingDuration < 0) warnings.push('Lyrics contain ' + Math.floor(-missingDuration / barDuration) + ' bar(s)' + (-missingDuration % barDuration ? ' and ' + Utils.durationcodes(-missingDuration % barDuration) : '') + ' in excess');\n      offset = this.registerGroup(unit, offset, missingDuration, barDuration);\n\n      var _iteratorNormalCompletion26 = true;\n      var _didIteratorError26 = false;\n      var _iteratorError26 = undefined;\n\n      try {\n        for (var _iterator26 = unit.groups[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n          var group = _step26.value;\n\n          // compute length of group (in chars), adding 1 so the group having max density is not collated with next group\n          var groupLength = this.getGroupLength(group) + 1;\n\n          // ensure the bar will always have the required minimal width\n          group.plen = Math.max(groupLength, Math.ceil(MIN_LYRICS_BARLEN * group.duration / barDuration));\n\n          // compute density of group based on the obtained length\n          group.p = group.plen / group.duration;\n\n          // set bar true if group ends on a bar\n          group.bar = (group.offset + group.duration) % barDuration === 0;\n\n          // initialize chord changes\n          group.chordChanges = { 'bar': [], 'rhythm': [], 'phrase': [] };\n        }\n\n        // compute maximum density across all groups\n      } catch (err) {\n        _didIteratorError26 = true;\n        _iteratorError26 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion26 && _iterator26.return) {\n            _iterator26.return();\n          }\n        } finally {\n          if (_didIteratorError26) {\n            throw _iteratorError26;\n          }\n        }\n      }\n\n      unit.pmax = 0;\n      var _iteratorNormalCompletion27 = true;\n      var _didIteratorError27 = false;\n      var _iteratorError27 = undefined;\n\n      try {\n        for (var _iterator27 = unit.groups[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {\n          var _group = _step27.value;\n          unit.pmax = Math.max(unit.pmax, _group.p);\n        } // iterate on each phrase wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError27 = true;\n        _iteratorError27 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion27 && _iterator27.return) {\n            _iterator27.return();\n          }\n        } finally {\n          if (_didIteratorError27) {\n            throw _iteratorError27;\n          }\n        }\n      }\n\n      offset = 0;\n      var _iteratorNormalCompletion28 = true;\n      var _didIteratorError28 = false;\n      var _iteratorError28 = undefined;\n\n      try {\n        for (var _iterator28 = unit.part.phrases[Symbol.iterator](), _step28; !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {\n          var phrase = _step28.value;\n          var _iteratorNormalCompletion31 = true;\n          var _didIteratorError31 = false;\n          var _iteratorError31 = undefined;\n\n          try {\n            for (var _iterator31 = phrase.chordChanges[Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {\n              var chordDuration = _step31.value;\n\n              // find closest group starting at or before chord offset\n              var _group3 = null;\n              var _iteratorNormalCompletion32 = true;\n              var _didIteratorError32 = false;\n              var _iteratorError32 = undefined;\n\n              try {\n                for (var _iterator32 = unit.groups[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {\n                  var g = _step32.value;\n                  if (g.offset <= offset) _group3 = g;\n                }\n              } catch (err) {\n                _didIteratorError32 = true;\n                _iteratorError32 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion32 && _iterator32.return) {\n                    _iterator32.return();\n                  }\n                } finally {\n                  if (_didIteratorError32) {\n                    throw _iteratorError32;\n                  }\n                }\n              }\n\n              if (!_group3) throw new Error('No closest group found for chord ' + chordDuration.chord.name + ' with offset ' + offset + ' units');\n\n              // register chord change in group\n              _group3.chordChanges['phrase'].push({ offset: offset, text: this.getChordDisplay(chordDuration) });\n\n              offset += chordDuration.duration;\n            }\n          } catch (err) {\n            _didIteratorError31 = true;\n            _iteratorError31 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion31 && _iterator31.return) {\n                _iterator31.return();\n              }\n            } finally {\n              if (_didIteratorError31) {\n                throw _iteratorError31;\n              }\n            }\n          }\n        }\n\n        // iterate on each bar wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError28 = true;\n        _iteratorError28 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion28 && _iterator28.return) {\n            _iterator28.return();\n          }\n        } finally {\n          if (_didIteratorError28) {\n            throw _iteratorError28;\n          }\n        }\n      }\n\n      offset = { 'rhythm': 0, 'bar': 0 };\n      var _iteratorNormalCompletion29 = true;\n      var _didIteratorError29 = false;\n      var _iteratorError29 = undefined;\n\n      try {\n        for (var _iterator29 = unit.part.phrases[Symbol.iterator](), _step29; !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {\n          var _phrase2 = _step29.value;\n          var _iteratorNormalCompletion33 = true;\n          var _didIteratorError33 = false;\n          var _iteratorError33 = undefined;\n\n          try {\n            for (var _iterator33 = _phrase2.bars[Symbol.iterator](), _step33; !(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done); _iteratorNormalCompletion33 = true) {\n              var bar = _step33.value;\n              var _arr2 = ['rhythm', 'bar'];\n\n              for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n                var chordChangesMode = _arr2[_i2];var _iteratorNormalCompletion34 = true;\n                var _didIteratorError34 = false;\n                var _iteratorError34 = undefined;\n\n                try {\n                  for (var _iterator34 = bar.chordChanges[chordChangesMode][Symbol.iterator](), _step34; !(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done); _iteratorNormalCompletion34 = true) {\n                    var _chordDuration = _step34.value;\n\n                    // find closest group starting at or before chord offset\n                    var _group4 = null;\n                    var _iteratorNormalCompletion35 = true;\n                    var _didIteratorError35 = false;\n                    var _iteratorError35 = undefined;\n\n                    try {\n                      for (var _iterator35 = unit.groups[Symbol.iterator](), _step35; !(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done); _iteratorNormalCompletion35 = true) {\n                        var _g = _step35.value;\n                        if (_g.offset <= offset[chordChangesMode]) _group4 = _g;\n                      }\n                    } catch (err) {\n                      _didIteratorError35 = true;\n                      _iteratorError35 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion35 && _iterator35.return) {\n                          _iterator35.return();\n                        }\n                      } finally {\n                        if (_didIteratorError35) {\n                          throw _iteratorError35;\n                        }\n                      }\n                    }\n\n                    if (!_group4) throw new Error('No closest group found for chord ' + _chordDuration.chord.name + ' with offset ' + offset[chordChangesMode] + ' units');\n\n                    // register chord change in group\n                    _group4.chordChanges[chordChangesMode].push({ offset: offset[chordChangesMode], text: this.getChordDisplay(_chordDuration) });\n\n                    offset[chordChangesMode] += _chordDuration.duration;\n                  }\n                } catch (err) {\n                  _didIteratorError34 = true;\n                  _iteratorError34 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion34 && _iterator34.return) {\n                      _iterator34.return();\n                    }\n                  } finally {\n                    if (_didIteratorError34) {\n                      throw _iteratorError34;\n                    }\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError33 = true;\n            _iteratorError33 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion33 && _iterator33.return) {\n                _iterator33.return();\n              }\n            } finally {\n              if (_didIteratorError33) {\n                throw _iteratorError33;\n              }\n            }\n          }\n        }\n\n        // debug info\n      } catch (err) {\n        _didIteratorError29 = true;\n        _iteratorError29 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion29 && _iterator29.return) {\n            _iterator29.return();\n          }\n        } finally {\n          if (_didIteratorError29) {\n            throw _iteratorError29;\n          }\n        }\n      }\n\n      var debugText = 'Groups of unit [' + unit.name + ']:\\n';\n      var barIndex = 0;\n      var zeroDuration = false;\n      var _iteratorNormalCompletion30 = true;\n      var _didIteratorError30 = false;\n      var _iteratorError30 = undefined;\n\n      try {\n        for (var _iterator30 = unit.groups[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {\n          var _group2 = _step30.value;\n\n          debugText += '\\tBar ' + (barIndex + 1) + '\\t[' + _group2.text.replace(/\\n/g, '\\\\N') + ']:' + _group2.duration + ' (' + _group2.offset + ' - ' + (_group2.offset + _group2.duration) + ') L=' + this.getGroupLength(_group2) + \" L'=\" + _group2.plen + ' ρ=' + _group2.p.toFixed(2) + ' #Chord changes %bar= ' + _group2.chordChanges['bar'].length + ' %phrase= ' + _group2.chordChanges['phrase'].length;\n          if (_group2.duration === 0) zeroDuration = true;\n          if (_group2.bar) {\n            barIndex++;\n            debugText += ' | ';\n          }\n          debugText += '\\n';\n        }\n      } catch (err) {\n        _didIteratorError30 = true;\n        _iteratorError30 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion30 && _iterator30.return) {\n            _iterator30.return();\n          }\n        } finally {\n          if (_didIteratorError30) {\n            throw _iteratorError30;\n          }\n        }\n      }\n\n      debugText += 'ρ max = ' + unit.pmax.toFixed(2);\n      this.log(debugText);\n\n      if (zeroDuration) throw new Error('Detected group with 0 duration');\n\n      return warnings;\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      var unitText = '';\n\n      // concatenate lyrics groups, giving them a number of positions proprtional to their duration\n      var barIndex = 0;\n      var groupIndex = 0;\n      var _iteratorNormalCompletion36 = true;\n      var _didIteratorError36 = false;\n      var _iteratorError36 = undefined;\n\n      try {\n        for (var _iterator36 = unit.groups[Symbol.iterator](), _step36; !(_iteratorNormalCompletion36 = (_step36 = _iterator36.next()).done); _iteratorNormalCompletion36 = true) {\n          var group = _step36.value;\n\n          // where and on how many positions will this group be displayed\n          group.position = [].concat(toConsumableArray(unitText.replace(/\\n/g, ''))).length;\n          group.length = Math.ceil(group.duration * unit.pmax);\n\n          // an hyphen means a word has been cut in two, no need for a space before next group\n          // but if the final character should be a bar, then always count this extra character\n          var needFinalSpace = group.bar || !group.text.match(/-$/);\n\n          // if maxConsecutiveSpaces is set, set a maximum for the number of allowed positions if needed\n          var maxLength = null;\n          if (maxConsecutiveSpaces > 0) maxLength = this.getGroupLength(group) + maxConsecutiveSpaces - (needFinalSpace ? 0 : 1);\n          if (maxLength) group.length = Math.min(group.length, maxLength);\n\n          // but if group has associated chords, we must have enough space for them (and this has priority over maxConsecutiveSpaces)\n          var minLength = group.bar ? 1 : 0; // 1 for the final bar sign if any\n          if (group.chordChanges[chordChangesMode]) {\n            for (var i = 0; i < group.chordChanges[chordChangesMode].length; i++) {\n              minLength += group.chordChanges[chordChangesMode][i].text.length;\n            }\n          }\n          minLength = Math.max(this.getGroupLength(group) + (needFinalSpace ? 1 : 0), minLength);\n          group.length = Math.max(group.length, minLength);\n\n          // filler string used to reach that length (nb: filler will always have a length of at least 1)\n          var filler = Utils.spaces(group.length - this.getGroupLength(group), showDots || this.DEBUG ? '.' : ' ');\n\n          // replace last character of filler by a | if this is the end of a bar\n          filler = filler.replace(/(.)$/, group.bar ? split > 0 && (barIndex + 1) % split === 0 ? '|\\n' : '|' : this.DEBUG ? '*' : '$1');\n\n          // append filler to text, remove new lines if splitting at bars\n          var groupText = (split > 0 ? group.text.replace(/\\n/g, '') : group.text) + filler;\n\n          this.log('[' + unit.name + '] Display group ' + (groupIndex + 1) + ' \"' + groupText.replace(/\\n/g, '\\\\N') + '\" on ' + group.length + ' chars (CEIL ' + (group.duration * unit.pmax).toFixed(2) + ' MIN ' + minLength + ' MAX ' + (maxLength || 'n/a') + ')');\n          unitText += groupText;\n\n          groupIndex++;\n          if (group.bar) barIndex++;\n        }\n\n        // we weren't asked to add chords\n      } catch (err) {\n        _didIteratorError36 = true;\n        _iteratorError36 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion36 && _iterator36.return) {\n            _iterator36.return();\n          }\n        } finally {\n          if (_didIteratorError36) {\n            throw _iteratorError36;\n          }\n        }\n      }\n\n      if (!chordChangesMode) return unitText;\n\n      // build chord inserts, based on bar or phrase wise changes, each with the text and position where to insert\n      var chordInserts = [];\n      var _iteratorNormalCompletion37 = true;\n      var _didIteratorError37 = false;\n      var _iteratorError37 = undefined;\n\n      try {\n        for (var _iterator37 = unit.groups[Symbol.iterator](), _step37; !(_iteratorNormalCompletion37 = (_step37 = _iterator37.next()).done); _iteratorNormalCompletion37 = true) {\n          var _group5 = _step37.value;\n\n          var lengthStillToPlaceOnThisGroup = 0;\n          var lengthYetPlacedOnThisGroup = 0;\n\n          // compute length of all chord inserts\n          var _iteratorNormalCompletion40 = true;\n          var _didIteratorError40 = false;\n          var _iteratorError40 = undefined;\n\n          try {\n            for (var _iterator40 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step40; !(_iteratorNormalCompletion40 = (_step40 = _iterator40.next()).done); _iteratorNormalCompletion40 = true) {\n              var chordChange = _step40.value;\n              lengthStillToPlaceOnThisGroup += chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError40 = true;\n            _iteratorError40 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion40 && _iterator40.return) {\n                _iterator40.return();\n              }\n            } finally {\n              if (_didIteratorError40) {\n                throw _iteratorError40;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion41 = true;\n          var _didIteratorError41 = false;\n          var _iteratorError41 = undefined;\n\n          try {\n            for (var _iterator41 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step41; !(_iteratorNormalCompletion41 = (_step41 = _iterator41.next()).done); _iteratorNormalCompletion41 = true) {\n              var _chordChange = _step41.value;\n\n              // position of the chord will be the position of the group + length corresponding to offset delta\n              var positionDelta = Math.ceil((_chordChange.offset - _group5.offset) / _group5.duration * _group5.length);\n              var positionDelta_ = positionDelta;\n\n              // ensure that chord name will not cross end of group it belongs to (last char of group must not be overwritten either if it is a bar)\n              while (positionDelta + lengthStillToPlaceOnThisGroup > _group5.length - (_group5.bar ? 1 : 0)) {\n                positionDelta--;\n              }\n\n              // ensure that chords already there still have enough room\n              while (positionDelta - lengthYetPlacedOnThisGroup < 0) {\n                positionDelta++;\n              }\n\n              this.log('Closest group \"' + _group5.text.replace(/\\n/g, '\\\\n') + '\" with offset ' + _group5.offset + ' and position ' + _group5.position + ' found for ' + _chordChange.text.trim() + ' with offset ' + _chordChange.offset + ' units\\n\\tposition delta from group start = ' + positionDelta + ' chars (initially ' + positionDelta_ + ' chars)');\n              chordInserts.push({ text: _chordChange.text, offset: _chordChange.offset, position: _group5.position + positionDelta });\n\n              lengthYetPlacedOnThisGroup = positionDelta + _chordChange.text.length;\n              lengthStillToPlaceOnThisGroup -= _chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError41 = true;\n            _iteratorError41 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion41 && _iterator41.return) {\n                _iterator41.return();\n              }\n            } finally {\n              if (_didIteratorError41) {\n                throw _iteratorError41;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError37 = true;\n        _iteratorError37 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion37 && _iterator37.return) {\n            _iterator37.return();\n          }\n        } finally {\n          if (_didIteratorError37) {\n            throw _iteratorError37;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion38 = true;\n      var _didIteratorError38 = false;\n      var _iteratorError38 = undefined;\n\n      try {\n        for (var _iterator38 = chordInserts[Symbol.iterator](), _step38; !(_iteratorNormalCompletion38 = (_step38 = _iterator38.next()).done); _iteratorNormalCompletion38 = true) {\n          var chordInsert = _step38.value;\n          this.log('[' + unit.name + '] Should insert ' + chordInsert.text + ' @ ' + chordInsert.offset + ' units / ' + chordInsert.position + ' chars');\n        } // insert these chord inserts\n      } catch (err) {\n        _didIteratorError38 = true;\n        _iteratorError38 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion38 && _iterator38.return) {\n            _iterator38.return();\n          }\n        } finally {\n          if (_didIteratorError38) {\n            throw _iteratorError38;\n          }\n        }\n      }\n\n      var position = 0;\n      var skip = 0;\n      var unitText_ = unitText;\n      var chordText = '';\n      unitText = '';\n      var _iteratorNormalCompletion39 = true;\n      var _didIteratorError39 = false;\n      var _iteratorError39 = undefined;\n\n      try {\n        for (var _iterator39 = unitText_[Symbol.iterator](), _step39; !(_iteratorNormalCompletion39 = (_step39 = _iterator39.next()).done); _iteratorNormalCompletion39 = true) {\n          var char = _step39.value;\n\n          if (char === '\\n') {\n            unitText += '\\n';\n            chordText += '\\n';\n            skip = 0;\n          } else {\n            var _iteratorNormalCompletion42 = true;\n            var _didIteratorError42 = false;\n            var _iteratorError42 = undefined;\n\n            try {\n              for (var _iterator42 = chordInserts[Symbol.iterator](), _step42; !(_iteratorNormalCompletion42 = (_step42 = _iterator42.next()).done); _iteratorNormalCompletion42 = true) {\n                var _chordInsert = _step42.value;\n\n                if (!_chordInsert.inserted) {\n                  if (_chordInsert.position <= position) {\n                    this.log('[' + unit.name + '] Inserting ' + _chordInsert.text + ' @ ' + position + ' chars');\n                    chordText += _chordInsert.text;\n                    _chordInsert.inserted = true;\n                    skip = _chordInsert.text.length;\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError42 = true;\n              _iteratorError42 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion42 && _iterator42.return) {\n                  _iterator42.return();\n                }\n              } finally {\n                if (_didIteratorError42) {\n                  throw _iteratorError42;\n                }\n              }\n            }\n\n            position++;\n\n            // add char to unit text, and corresponding space to chord text\n            // only bar symbols are added in chord text instead of unit text (if showing dots, then bars are displayed in both texts)\n            if (skip === 0) {\n              chordText += char === '|' ? char : ' ';\n            } else {\n              skip--;\n            }\n            unitText += char === '|' && !(showDots || this.DEBUG) ? ' ' : char;\n          }\n        }\n\n        // and interlace the two strings\n      } catch (err) {\n        _didIteratorError39 = true;\n        _iteratorError39 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion39 && _iterator39.return) {\n            _iterator39.return();\n          }\n        } finally {\n          if (_didIteratorError39) {\n            throw _iteratorError39;\n          }\n        }\n      }\n\n      return Utils.interlace(chordText, unitText, null, KEEP_EMPTY_LINES);\n    }\n  }, {\n    key: 'registerGroup',\n    value: function registerGroup(unit, offset, step, barDuration) {\n      if (!barDuration) throw new Error('Invalid bar duration passed to registerGroup');\n\n      while (step > 0) {\n        // duration added to preceding group may never be more than what's left until end of bar\n        var addDuration = Math.min(step, barDuration - offset % barDuration);\n\n        // create a new group if none or if preceding already got its duration\n        if (!unit.groups.length || !LYRICS_SUM_DURATIONS && unit.groups[unit.groups.length - 1].duration > 0) unit.groups.push({ text: '', offset: offset, duration: 0 });\n\n        // add this duration to preceding group (create it if needed)\n        unit.groups[unit.groups.length - 1].duration += addDuration;\n        offset += addDuration;\n        step -= addDuration;\n\n        // step is going to cross end of bar: directly create a first empty group\n        if (step > 0) unit.groups.push({ text: this.DEBUG > 1 ? '_' : '', offset: offset, duration: 0 });\n      }\n\n      return offset;\n    }\n  }, {\n    key: 'getGroupLength',\n    value: function getGroupLength(group) {\n      // return the number of visible graphemes in group text\n      // - newlines are not counted\n      // - tabs will be converted to spaces and may thus count as 1\n      // - use spread operator to correctly count astral unicode symbols\n      return [].concat(toConsumableArray(group.text.replace(/\\n/g, ''))).length;\n    }\n  }, {\n    key: 'getChordDisplay',\n    value: function getChordDisplay(chordDuration) {\n      // space and not empty if hidden, to ensure that a white space will show that this change does not happen at the begin of the bar\n      if (chordDuration.hidden) return ' ';\n\n      // a space prevents chord names to be glued together on group and prevents a next group from starting directly after last chord of previous group\n      return chordDuration.chord.name + ' ';\n    }\n  }]);\n  return Compiler_;\n}();\n\n/**\n * Public API\n */\n\nvar Compiler = function () {\n  function Compiler(songcheat, DEBUG) {\n    classCallCheck(this, Compiler);\n\n    this.compiler_ = new Compiler_(DEBUG);\n    if (songcheat) this.set(songcheat);\n  }\n\n  createClass(Compiler, [{\n    key: 'set',\n    value: function set$$1(songcheat) {\n      this.compiler_.log(Utils.title('COMPILE SONGCHEAT'));\n      this.scc = this.compiler_.compile(JSON.parse(JSON.stringify(songcheat)));\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit) {\n      this.compiler_.log(Utils.title('PARSE LYRICS ' + unit.name));\n      return this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      this.compiler_.log(Utils.title('GET LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }, {\n    key: 'getPartText',\n    value: function getPartText(part, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      // dummy unit with no lyrics\n      var unit = { name: part.name, part: part };\n\n      this.compiler_.log(Utils.title('PARSE PART LYRICS ' + unit.name));\n      this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n\n      this.compiler_.log(Utils.title('GET PART LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }]);\n  return Compiler;\n}();\n\nvar classCallCheck$1 = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray$1 = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar ChordPixException = function () {\n  function ChordPixException(message) {\n    classCallCheck$1(this, ChordPixException);\n\n    this.message = message;\n  }\n\n  createClass$1(ChordPixException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Chordpix error: ' + this.message;\n    }\n  }]);\n  return ChordPixException;\n}();\n\nvar ChordPix = function () {\n  function ChordPix() {\n    classCallCheck$1(this, ChordPix);\n  }\n\n  createClass$1(ChordPix, null, [{\n    key: 'parse',\n    value: function parse(url) {\n      try {\n        // validate and explode url at slashes\n        if (!url.match(/https?:\\/\\/chordpix.com\\/i\\/[0-9]+\\/6\\/[0-9]+\\/[0-9]+\\/[x0-6]{6}\\/[T0-4]{6}\\/(-|[0-9]+)\\/.+\\..+/)) throw new ChordPixException('Invalid ChordPix image URL');\n        var parts = url.split(/\\//);\n\n        // get chord name replacing ♯ with # and ♭ with b so that chord names can be easily typed in songcheat text file\n        var name = parts[11].split('.')[0].replace(/♯/g, '#').replace(/♭/g, 'b');\n\n        // get starting fret\n        var startingFret = parseInt(parts[7], 10);\n\n        // get absolute barred fret (single char) (\"-\" kept as is)\n        var barredFret = parts[10] === '-' ? parts[10] : Utils.rel2abs(parseInt(parts[10], 10), startingFret);\n\n        // build an absolute tablature (single char x6) (\"x\" kept as is)\n        var tablature = '';\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = parts[8][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var char = _step.value;\n            tablature += char === 'x' ? char : Utils.rel2abs(parseInt(char, 10), startingFret);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          name: name,\n          tablature: tablature,\n          fingering: parts[9] + '/' + barredFret,\n          comment: ''\n        };\n      } catch (e) {\n        throw new ChordPixException('[URL ' + url + '] ' + e.message);\n      }\n    }\n  }, {\n    key: 'url',\n    value: function url(chord, chordWidth) {\n      try {\n        // check tablature is valid\n        if (typeof chord.tablature !== 'string') throw new Error('chord.tablature must be a string');\n        if (chord.tablature.length !== 6) throw new Error('chord.tablature must be exactly 6 characters long (one for each guitar string)');\n        if (!chord.tablature.match(/^[x0-9A-Z]{6}$/)) throw new Error('chord.tablature must contain only digits and capital letters (representing a fret number), or \"x\" (for mute)');\n\n        // check fingering is valid\n        if (typeof chord.fingering !== 'string') throw new Error('chord.fingering must be a string');\n        if (chord.fingering.length !== 8) throw new Error('chord.fingering must be exactly 8 characters long (....../.)');\n        if (!chord.fingering.match(/^[PT01234]{6}.*$/)) throw new Error('the first 6 characters of chord.fingering can only be P,T,1,2,3,4 or 0 (each character represents a finger)');\n        if (!chord.fingering.match(/^[PT01234]{6}\\/[-0-9A-Z]$/)) throw new Error('the last 2 characters of chord.fingering must be a \"/\" followed by a digit or capital letter (representing the number of the barred fret) or \"-\" if there is no barred fret');\n\n        // convert 6 chars into 6 integers (null for x)\n        var frets = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = chord.tablature[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var char = _step2.value;\n            frets.push(char === 'x' ? null : Utils.char2fret(char));\n          } // get max and min fret (excluding null and 0), use 1 if chord has no frets at all\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        var minFret = frets.filter(function (x) {\n          return x;\n        }).length > 0 ? Math.min.apply(Math, toConsumableArray$1(frets.filter(function (x) {\n          return x;\n        }))) : 1;\n        var maxFret = frets.filter(function (x) {\n          return x;\n        }).length > 0 ? Math.max.apply(Math, toConsumableArray$1(frets.filter(function (x) {\n          return x;\n        }))) : 1;\n\n        // get number of frets to display on diagram (with minimum of 4)\n        var nbFrets = Math.max(4, maxFret + 1 - minFret);\n\n        // get first fret displayed in the diagram: start at 1 if possible otherwise start at minFret\n        var startingFret = maxFret + 1 - nbFrets <= 1 ? 1 : minFret;\n\n        // get relative barred fret (\"-\" kept as is)\n        var fingering = chord.fingering.split('/');\n        if (fingering[1] && fingering[1] !== '-') fingering[1] = Utils.abs2rel(fingering[1], startingFret);\n\n        // build a relative tablature (\"0\" and \"x\" kept as is)\n        var relTablature = '';\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = chord.tablature[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var _char = _step3.value;\n            relTablature += _char === 'x' || _char === '0' ? _char : Utils.abs2rel(_char, startingFret);\n          } // use nice ♯ and ♭ in diagram (replace only last occurence)\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        var name = chord.name ? chord.name.replace(/#([^#]*)$/, '♯$1').replace(/b([^b]*)$/, '♭$1') : chord.tablature;\n\n        // build final url\n        return 'http://chordpix.com/i/' + (chordWidth || 450) + '/6/' + nbFrets + '/' + startingFret + '/' + relTablature + '/' + fingering.join('/') + '/' + name + '.png';\n      } catch (e) {\n        throw new ChordPixException('[Chord ' + JSON.stringify(chord) + '] ' + e.message);\n      }\n    }\n  }]);\n  return ChordPix;\n}();\n\nexport { ChordPix, ChordPixException };\n//# sourceMappingURL=songcheat-chordpix.esm.js.map\n","/**\n * SongCheat VexTab 1.0.0 built on Tue Dec 26 2017 01:31:53 GMT+0100 (CET).\n  * Copyright (c) 2017 Louis Antoine <louisantoinem@gmail.com>\n *\n * http://www.songcheat.io  http://github.com/louisantoinem/songcheat-vextab\n */\n\n/**\n * SongCheat Core 1.0.0 built on Tue Dec 26 2017 01:23:29 GMT+0100 (CET).\n  * Copyright (c) 2017 Louis Antoine <louisantoinem@gmail.com>\n *\n * http://www.songcheat.io  http://github.com/louisantoinem/songcheat-core\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Utils = function () {\n  function Utils() {\n    classCallCheck(this, Utils);\n  }\n\n  createClass(Utils, null, [{\n    key: 'arraysEqual',\n\n    /**\n    * Array helper functions\n    */\n\n    value: function arraysEqual(a, b) {\n      if (a === b) return true;\n      if (a === null || b === null) return false;\n      if (a.length !== b.length) return false;\n      for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n      }\n      return true;\n    }\n\n    /**\n    * String helper functions\n    */\n\n  }, {\n    key: 'title',\n    value: function title(str) {\n      return '\\n' + this.spaces(str.length + 8, '*') + '\\n*** ' + str + ' ***\\n' + this.spaces(str.length + 8, '*') + '\\n';\n    }\n  }, {\n    key: 'firstUpper',\n    value: function firstUpper(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n  }, {\n    key: 'camelCase',\n    value: function camelCase(s, firstUpper) {\n      var camel = s.toLowerCase().replace(/(?:[-_])(.)/g, function (match, group1) {\n        return group1.toUpperCase();\n      });\n      return firstUpper ? camel.charAt(0).toUpperCase() + camel.slice(1) : camel;\n    }\n  }, {\n    key: 'spaces',\n    value: function spaces(length, char) {\n      if (isNaN(length) || !isFinite(length) || length < 0) throw new Error('Length must a positive finite number');\n      var s = '';\n      for (var i = 0; i < length; i++) {\n        s += char || ' ';\n      }return s;\n    }\n\n    /**\n     * Interlace two multi line strings: one line of each file in alternance\n     * If the second file contains more line then the first one, these additional lines will be ignored\n     **/\n\n  }, {\n    key: 'interlace',\n    value: function interlace(text1, text2, sepLine, keepEmptyLines) {\n      var a1 = text1.split(/\\r?\\n/);\n      var a2 = text2.split(/\\r?\\n/);\n      var a = a1.map(function (v, i) {\n        var lines = keepEmptyLines || a2[i] && a2[i].trim() ? [v, a2[i]] : [v];\n        if (typeof sepLine === 'string') lines.push(sepLine);\n        return lines.join('\\n');\n      });\n      return a.join('\\n');\n    }\n\n    /**\n     * Encode given parameters as a GET query string\n     **/\n\n  }, {\n    key: 'encodeQueryData',\n    value: function encodeQueryData(data) {\n      var ret = [];\n      for (var d in data) {\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\n      }\n      return ret.join('&');\n    }\n\n    /**\n     * Convert a duration code to the smallest unit (64th)\n     **/\n\n  }, {\n    key: 'duration',\n    value: function duration(code) {\n      if (code === ':32') return 2;\n      if (code === ':16') return 4;\n      if (code === ':8') return 8;\n      if (code === ':q') return 16;\n      if (code === ':h') return 32;\n      if (code === ':w') return 64;\n\n      if (code === ':32d') return 3;\n      if (code === ':16d') return 6;\n      if (code === ':8d') return 12;\n      if (code === ':qd') return 24;\n      if (code === ':hd') return 48;\n      if (code === ':wd') return 96;\n\n      throw new Error('Invalid duration code \"' + code + '\"');\n    }\n\n    /**\n     * Convert back a number of units (64th) into a duration code\n     **/\n\n  }, {\n    key: 'durationcode',\n    value: function durationcode(units) {\n      var _arr = ['w', 'h', 'q', '8', '16', '32'];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var code = _arr[_i];\n        if (this.duration(':' + code) === units) return ':' + code;\n        if (this.duration(':' + code + 'd') === units) return ':' + code + 'd';\n      }\n\n      throw new Error('Could not find a code with a value of ' + units + ' units');\n    }\n\n    /**\n     * Convert a number of units (64th) into one or several duration codes\n     **/\n\n  }, {\n    key: 'durationcodes',\n    value: function durationcodes(units) {\n      var codes = [];\n\n      var current = units;\n      var rest = 0;\n\n      while (current > 0) {\n        try {\n          codes.push(this.durationcode(current));\n          current = rest;\n          rest = 0;\n        } catch (e) {\n          current--;\n          rest++;\n        }\n      }\n\n      if (rest > 0) throw new Error('Could not find codes adding to a value of ' + units + ' units');\n\n      return codes;\n    }\n\n    /**\n     * Convert a fret number (up to 35) to a single char (digit or capital letter)\n     * Fret 10 is notated as A, 11 as B, ... and 35 as Z\n     */\n\n  }, {\n    key: 'fret2char',\n    value: function fret2char(fret) {\n      if (isNaN(fret) || fret < 0 || fret > 35) throw new Error('Cannot convert fret number ' + fret + ' to a single char (expected a value between 0 and 35)');\n      return fret < 10 ? '' + fret : String.fromCharCode('A'.charCodeAt(0) + fret - 10);\n    }\n\n    /**\n     * Convert a single char (digit or capital letter) to a fret number\n     * A means fret 10, 11 fret B, ... and Z fret 35\n     */\n\n  }, {\n    key: 'char2fret',\n    value: function char2fret(char) {\n      if (typeof char !== 'string') throw new Error('Invalid fret char ' + char + ' expected a string');\n      if (!char.match(/^[0-9A-Z]$/)) throw new Error('Invalid fret char ' + char + ' (expected a value between [0-9] or [A-Z])');\n      return char >= 'A' ? 10 + char.charCodeAt(0) - 'A'.charCodeAt(0) : parseInt(char, 10);\n    }\n\n    /**\n     * Convert an absolute fret number (single char) to a relative fret number (0 never changes)\n     */\n\n  }, {\n    key: 'abs2rel',\n    value: function abs2rel(char, startingFret) {\n      var fret = this.char2fret(char);\n      if (isNaN(fret) || fret < 0) throw new Error('Invalid fret number ' + fret + ' (expected a positive or 0 integer value)');\n      if (fret === 0) return 0;\n      if (isNaN(startingFret) || startingFret < 0) throw new Error('Invalid starting fret number ' + startingFret + ' (expected a positive or 0 integer value)');\n      if (startingFret + 8 < fret || startingFret > fret) throw new Error('Fret ' + fret + ' cannot be made relative to starting fret ' + startingFret + ' within the allowed range of 1 to 9');\n      return fret + 1 - startingFret;\n    }\n\n    /**\n     * Convert a relative fret number to an absolute fret number (single char) (0 never changes)\n     */\n\n  }, {\n    key: 'rel2abs',\n    value: function rel2abs(relFret, startingFret) {\n      return this.fret2char(relFret ? relFret + startingFret - 1 : relFret);\n    }\n\n    /**\n     * Take a chord and a placeholder contents\n     * Return an array containing one object { string, fret, mute } for each played string\n     */\n\n  }, {\n    key: 'chordStrings',\n    value: function chordStrings(chord, strings) {\n      if (!chord.tablature) throw new Error('Tablature not defined for chord ' + chord.name);\n      if (!chord.fingering) throw new Error('Fingering not defined for chord ' + chord.name);\n\n      var result = [];\n      for (var i = 0; i < chord.tablature.length; i++) {\n        // string will be between 6 and 1 since chord.tablature.length has been verified and is 6\n        var string = 6 - i;\n\n        // string never played in this chord\n        if (chord.tablature[i] === 'x') continue;\n\n        // first time we meet a played string, it's the bass so replace B and B' with the string number\n        strings = strings.replace(/B'/g, string >= 5 ? string - 1 : string);\n        strings = strings.replace(/B/g, string);\n\n        // check if this string should be played with the right hand\n        // * means \"all strings\", otherwise concatenated specific string numbers are specified (or B for bass or B' for alternate bass)\n        // x after string means muted (ghost) note\n        if (strings.match(/^\\*/) || strings.indexOf(string) !== -1) {\n          var fret = this.char2fret(chord.tablature[i]);\n          var xIndex = strings.match(/^\\*/) ? 1 : strings.indexOf(string) + 1;\n          var mute = strings[xIndex] === 'x';\n          result.push({\n            string: string,\n            fret: fret,\n            mute: mute\n          });\n        }\n      }\n\n      return result;\n    }\n  }]);\n  return Utils;\n}();\n\nvar ParserException = function () {\n  function ParserException(line, message) {\n    classCallCheck(this, ParserException);\n\n    this.message = message;\n    this.line = line;\n  }\n\n  createClass(ParserException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Parser error at line ' + this.line + ': ' + this.message;\n    }\n  }]);\n  return ParserException;\n}();\n\nvar Parser_ = function () {\n  function Parser_() {\n    classCallCheck(this, Parser_);\n\n    this.songcheat = {};\n    this.blocks = {};\n  }\n\n  createClass(Parser_, [{\n    key: 'parse',\n    value: function parse(text) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return this.songcheat;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n      }\n\n      return this.songcheat;\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(text, line) {\n      // reset\n      this.songcheat = {};\n      this.blocks = {};\n\n      var lastResult = null;\n\n      // split text into tokens\n      var tokens = this.tokenize(text);\n      if (tokens.length === 0) return true;\n\n      var tokenIndex = 0;\n      while (tokenIndex < tokens.length) {\n        var token = tokens[tokenIndex];\n        var keyword = this.isKeyword(token);\n\n        if (token.line > line) return lastResult;\n\n        // we must be on a keyword, otherwise it means that first token in text is not a keyword as expected\n        if (!keyword) throw new ParserException(token.line, 'expected keyword, found \"' + token.value + '\"');\n\n        // get all tokens until next keyword or end\n        var params = [];\n        for (++tokenIndex; tokenIndex < tokens.length; ++tokenIndex) {\n          if (this.isKeyword(tokens[tokenIndex])) break;\n          params.push(tokens[tokenIndex]);\n        }\n\n        // use specific handler if any or default one\n        var handler = this['handle' + Utils.firstUpper(keyword)] || this.handleDefault;\n        if (typeof handler === 'function') handler.call(this, token.line, keyword, params);else throw new ParserException(token.line, 'non function handler found for keyword ' + keyword);\n\n        lastResult = { line: token.line, keyword: keyword, params: params, chordIndex: null, rhythmIndex: null, partIndex: null, unitIndex: null };\n\n        if (keyword === 'chord') lastResult.chordIndex = this.songcheat.chords.length - 1;else if (keyword === 'rhythm') lastResult.rhythmIndex = this.songcheat.rhythms.length - 1;else if (keyword === 'part') lastResult.partIndex = this.songcheat.parts.length - 1;else if (keyword === 'structure') {\n          // special case since there is no distinct UNIT keyword for each unit, but a single STRUCTURE keyword for all units\n          var paramIndex = 0;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = params[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var param = _step.value;\n\n              if (param.line > line) break;\n              lastResult.unitIndex = Math.floor(paramIndex / 2);\n              paramIndex++;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      return lastResult;\n    }\n  }, {\n    key: 'isKeyword',\n    value: function isKeyword(token) {\n      var keyword = Utils.camelCase(token.value);\n      return ['artist', 'title', 'year', 'difficulty', 'video', 'tutorial', 'comment', 'tuning', 'capo', 'key', 'time', 'tempo', 'shuffle', 'chord', 'rhythm', 'block', 'part', 'lyricsUnit' /* will disappear soon */, 'structure'].indexOf(keyword) >= 0 ? keyword : false;\n    }\n  }, {\n    key: 'tokenize',\n    value: function tokenize(text) {\n      var tokens = [];\n\n      // https://stackoverflow.com/questions/4780728/regex-split-string-preserving-quotes?noredirect=1&lq=1\n      var reSpaces = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)[\\s\\t]+(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n      var reNewline = /(?<=^[^\"]*(?:\"[^\"]*\"[^\"]*)*)(\\r?\\n)(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n\n      var lineNumber = 1;\n\n      // split at newlines unless enclosed in quotes\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = text.split(reNewline)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var line = _step2.value;\n\n          // split also returns the newlines, ignore them\n          if (line.match(/^\\r?\\n$/)) continue;\n\n          // trim line\n          line = line.trim();\n\n          // console.log(\"L\" + lineNumber + \": [\"+ line + \"]\");\n\n          // if not a comment or empty line\n          if (line && !line.match(/^#/)) {\n            // split at spaces and tabs unless enclosed in quotes, then trim spaces and quotes\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = line.split(reSpaces).map(function (s) {\n                return s.trim().replace(/^\"|\"$/g, '');\n              })[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n                tokens.push({ 'value': value, 'line': lineNumber });\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n\n          // increment line number\n          lineNumber += 1 + (line.match(/(?:\\r?\\n)/g) || []).length;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: 'handleDefault',\n    value: function handleDefault(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat[keyword] = ['year', 'capo', 'difficulty'].indexOf(keyword) >= 0 ? parseInt(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleSignature',\n    value: function handleSignature(line, keyword, params) {\n      if (params.length !== 1) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 1 value, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || {};\n      this.songcheat['signature'][keyword] = keyword === 'tempo' ? parseFloat(params[0].value, 10) : params[0].value;\n    }\n  }, {\n    key: 'handleKey',\n    value: function handleKey(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTempo',\n    value: function handleTempo(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleShuffle',\n    value: function handleShuffle(line, keyword, params) {\n      return this.handleSignature(line, keyword, params);\n    }\n  }, {\n    key: 'handleTime',\n    value: function handleTime(line, keyword, params) {\n      if (params.length !== 3) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 3 values, but found ' + params.length);\n      this.songcheat['signature'] = this.songcheat['signature'] || [];\n      this.songcheat['signature']['time'] = { 'beatsPerBar': params[1].value, 'beatDuration': params[2].value, 'symbol': params[0].value };\n    }\n  }, {\n    key: 'handleChord',\n    value: function handleChord(line, keyword, params) {\n      if (params.length < 2 || params.length > 4) throw new ParserException(line, keyword.toUpperCase() + ' expected between 2 and 4 values (name, tablature[, fingering=\"000000/-\", comment=\"\"]), but found ' + params.length);\n\n      var name = params[0].value;\n      var tablature = params[1].value;\n      var fingering = params.length >= 3 ? params[2].value : '000000/-';\n      var comment = params.length >= 4 ? params[3].value : '';\n\n      this.songcheat['chords'] = this.songcheat['chords'] || [];\n      var chord = { 'id': this.songcheat['chords'].length + 1, 'name': name, 'tablature': tablature, 'fingering': fingering, 'comment': comment };\n      this.songcheat['chords'].push(chord);\n\n      // return created chord (used when meeting an inline chord)\n      return chord;\n    }\n  }, {\n    key: 'handleRhythm',\n    value: function handleRhythm(line, keyword, params) {\n      if (params.length !== 2) throw new ParserException(line, keyword.toUpperCase() + ' expected exactly 2 values (id and score), but found ' + params.length);\n      this.songcheat['rhythms'] = this.songcheat['rhythms'] || [];\n      this.songcheat['rhythms'].push({ 'id': this.songcheat['rhythms'].length + 1, 'name': params[0].value, 'score': params[1].value });\n    }\n  }, {\n    key: 'handleBlock',\n    value: function handleBlock(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.blocks[params[0].value] = params.slice(1);\n    }\n  }, {\n    key: 'handlePart',\n    value: function handlePart(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (name and bar(s)), but found ' + params.length);\n      this.songcheat['parts'] = this.songcheat['parts'] || [];\n\n      // extract part name from params\n      var part = { 'id': this.songcheat['parts'].length + 1, 'name': params[0].value, 'phrases': [] };\n      params = params.splice(1);\n      this.songcheat['parts'].push(part);\n\n      // iterate on remaining params to get bars and phrases\n      var bars = [];\n      for (var pIndex = 0; pIndex < params.length; pIndex++) {\n        var param = params[pIndex];\n\n        // phrase separator\n        if (param.value === '||') {\n          part.phrases.push({ 'bars': bars });\n          bars = [];\n          continue;\n        }\n\n        // bar repeater\n        if (param.value === '%') {\n          if (bars.length === 0) throw new ParserException(param.line, 'found bar repeater ' + param.value + ' but there is no bar yet in phrase');\n          bars.push(JSON.parse(JSON.stringify(bars[bars.length - 1])));\n          continue;\n        }\n\n        // bar between []\n        if (param.value.match(/^\\[[^[\\]]+\\]$/)) {\n          var bar = { 'rhythm': null, 'chords': [] };\n          var str = param.value.substr(1, param.value.length - 2);\n          var parts = str.split(/\\*|:/);\n\n          // find rhythm\n          var found = false;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.songcheat['rhythms'][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var rhythm = _step4.value;\n\n              if (rhythm.name === parts[0]) {\n                bar.rhythm = rhythm.id;\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          if (!found) throw new ParserException(param.line, parts[0] + ' is not the name of an existing rhythm');\n\n          // find chords\n          parts = parts.slice(1);\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = parts[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var _part = _step5.value;\n\n              // chord repeater\n              if (!_part.trim()) {\n                if (bar.chords.length === 0) throw new ParserException(param.line, 'found chord repeater but there is no chord yet in bar');\n                bar.chords.push(JSON.parse(JSON.stringify(bar.chords[bar.chords.length - 1])));\n                continue;\n              }\n\n              // search for chord by its name\n              var _found = false;\n              var _iteratorNormalCompletion6 = true;\n              var _didIteratorError6 = false;\n              var _iteratorError6 = undefined;\n\n              try {\n                for (var _iterator6 = this.songcheat['chords'][Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                  var chord = _step6.value;\n\n                  if (chord.name === _part) {\n                    bar.chords.push(chord.id);\n                    _found = true;\n                    break;\n                  }\n                }\n\n                // if no chord found with this name but this is a valid chord tablature (with an optional barred fret /[-0-9A-Z])\n              } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                  }\n                } finally {\n                  if (_didIteratorError6) {\n                    throw _iteratorError6;\n                  }\n                }\n              }\n\n              if (!_found && _part.match(/^[x0-9A-Z]{6}(\\/[-0-9A-Z])?$/)) {\n                // create inline chord with the name being the tablature itself, and no fingering nor comment\n                var _chord = this.handleChord(param.line, 'chord', [{ value: _part, line: param.line }, { value: _part.split('/')[0], line: param.line }, { value: '000000/' + (_part.split('/')[1] || '-'), line: param.line }]);\n                bar.chords.push(_chord.id);\n                _found = true;\n              }\n\n              if (!_found) throw new ParserException(param.line, _part + ' is not the name of an existing chord and is not a valid chord tablature');\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          bars.push(bar);\n          continue;\n        }\n\n        // not a || phrase separator nor a [] bar: must be a block name\n        if (!this.blocks[param.value]) throw new ParserException(param.line, param.value + ' is not the name of an existing block');\n\n        // insert block tokens in params at current position\n        var args = [pIndex, 1];\n        Array.prototype.push.apply(args, this.blocks[param.value]);\n        Array.prototype.splice.apply(params, args);\n        pIndex--;\n      }\n\n      // end of last phrase\n      if (bars.length > 0) part.phrases.push({ 'bars': bars });\n    }\n  }, {\n    key: 'handleStructure',\n    value: function handleStructure(line, keyword, params) {\n      if (params.length < 2) throw new ParserException(line, keyword.toUpperCase() + ' expected at least 2 values (part name and lyrics), but found ' + params.length);\n      if (params.length % 2 !== 0) throw new ParserException(line, keyword.toUpperCase() + ' expected an even number of parameters (N x part name and lyrics), but found ' + params.length);\n      this.songcheat['structure'] = this.songcheat['structure'] || [];\n\n      for (var pIndex = 0; pIndex < params.length; pIndex += 2) {\n        var param = params[pIndex];\n\n        var found = false;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = this.songcheat['parts'][Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var part = _step7.value;\n\n            if (part.name === param.value) {\n              this.songcheat['structure'].push({ 'part': part.id, 'lyrics': params[pIndex + 1].value });\n              found = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        if (!found) throw new ParserException(param.line, param.value + '\" is not the name of an existing part');\n      }\n    }\n  }]);\n  return Parser_;\n}();\n\n/**\n * Public API\n */\n\nvar Parser = function () {\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    this.parser_ = new Parser_();\n  }\n\n  createClass(Parser, [{\n    key: 'parse',\n    value: function parse(songcheat) {\n      return this.parser_.parse(songcheat);\n    }\n  }, {\n    key: 'getPrecedingKeyword',\n    value: function getPrecedingKeyword(songcheat, line) {\n      return this.parser_.getPrecedingKeyword(songcheat, line);\n    }\n  }]);\n  return Parser;\n}();\n\nvar MIN_LYRICS_BARLEN = 20; // minimum length of a bar lyrics (before reducing) - not really needed but produces a clearer view when maxConsecutiveSpaces set to 0 (and thus when displaying parts with partdisplay=full) since bars with no or little text will have the same length (unless there are really many chord changes...)\nvar LYRICS_SUM_DURATIONS = false; // if true \"::\" is equivalent to \":h:\" (assuming lyrics unit is :q)\nvar KEEP_EMPTY_LINES = false;\n\nvar CompilerException = function () {\n  function CompilerException(message) {\n    classCallCheck(this, CompilerException);\n\n    this.message = message;\n  }\n\n  createClass(CompilerException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'Compiler error: ' + this.message;\n    }\n  }]);\n  return CompilerException;\n}();\n\nvar Compiler_ = function () {\n  function Compiler_(DEBUG) {\n    classCallCheck(this, Compiler_);\n\n    // DEBUG 1 forces showing . * | characters in unit text (even if showDots is passed false) as well as _ for groups that were automatically created when crossing a bar\n    this.DEBUG = DEBUG;\n  }\n\n  createClass(Compiler_, [{\n    key: 'log',\n    value: function log() {\n      if (this.DEBUG > 0) console.log.apply(console, arguments);\n    }\n  }, {\n    key: 'compile',\n    value: function compile(songcheat) {\n      // default values for optional properties\n      songcheat.mode = songcheat.mode || 'rt';\n      songcheat.lyricsMode = songcheat.lyricsMode || 's';\n      songcheat.barsPerLine = songcheat.barsPerLine || 4;\n      songcheat.signature = songcheat.signature || {};\n      songcheat.signature.key = songcheat.signature.key || 'C';\n      songcheat.signature.time = songcheat.signature.time || { beatDuration: ':q', beatsPerBar: 4, symbol: '4/4' };\n      songcheat.lyricsUnit = songcheat.lyricsUnit || songcheat.signature.time.beatDuration;\n      songcheat.chords = songcheat.chords || [];\n      songcheat.rhythms = songcheat.rhythms || [];\n      songcheat.parts = songcheat.parts || [];\n\n      // deduce bar duration from signature\n      songcheat.barDuration = songcheat.signature.time.beatsPerBar * Utils.duration(songcheat.signature.time.beatDuration);\n\n      // resolve all id references (rhythms and chords)\n      this.resolveIds(songcheat);\n\n      // default structure if not specified : one unit for each part\n      if (!songcheat.structure) {\n        songcheat.structure = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = songcheat.parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var part = _step.value;\n            songcheat.structure.push({ 'part': part });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      // give a name to each unit if not already set = name of part with automatic numbering\n      var unitsByPart = {};\n      var numberByPart = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = songcheat.structure[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var unit = _step2.value;\n          unitsByPart[unit.part.id] = typeof unitsByPart[unit.part.id] === 'undefined' ? 1 : unitsByPart[unit.part.id] + 1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = songcheat.structure[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _unit = _step3.value;\n\n          numberByPart[_unit.part.id] = typeof numberByPart[_unit.part.id] === 'undefined' ? 1 : numberByPart[_unit.part.id] + 1;\n          if (!_unit.name) _unit.name = _unit.part.name + (unitsByPart[_unit.part.id] > 1 ? ' ' + numberByPart[_unit.part.id] : '');\n        }\n\n        // give a color to each part if not already set\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var colors = ['red', '#06D6A0', 'blue', 'purple', 'orange', 'magenta'];\n      var partIndex = 0;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = songcheat.parts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _part = _step4.value;\n          if (!_part.color) _part.color = colors[partIndex++ % colors.length];\n        }\n\n        // validate and compile each rhythm\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = songcheat.rhythms[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var rhythm = _step5.value;\n          this.compileRhythm(rhythm, songcheat.signature.time.beatDuration);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = songcheat.parts[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _part2 = _step6.value;\n\n          // compute a \"chordChanges\" property in each phrase\n          var phraseIndex = 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = _part2.phrases[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var phrase = _step7.value;\n\n              phrase.chordChanges = [];\n              var lastChord = null;\n              var _iteratorNormalCompletion9 = true;\n              var _didIteratorError9 = false;\n              var _iteratorError9 = undefined;\n\n              try {\n                for (var _iterator9 = phrase.bars[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  var bar = _step9.value;\n                  lastChord = this.addChordChanges(bar, phrase.chordChanges, songcheat.barDuration, false, lastChord);\n                }\n              } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                    _iterator9.return();\n                  }\n                } finally {\n                  if (_didIteratorError9) {\n                    throw _iteratorError9;\n                  }\n                }\n              }\n\n              this.log('Phrase wise chord durations for phrase ' + _part2.name + '.' + (phraseIndex + 1));\n              var _iteratorNormalCompletion10 = true;\n              var _didIteratorError10 = false;\n              var _iteratorError10 = undefined;\n\n              try {\n                for (var _iterator10 = phrase.chordChanges[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                  var c = _step10.value;\n                  this.log('\\t[' + c.chord.name + '] = ' + c.duration + ' units');\n                } // compute a \"chordChanges\" property in each bar\n              } catch (err) {\n                _didIteratorError10 = true;\n                _iteratorError10 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                    _iterator10.return();\n                  }\n                } finally {\n                  if (_didIteratorError10) {\n                    throw _iteratorError10;\n                  }\n                }\n              }\n\n              var barIndex = 0;\n              var _iteratorNormalCompletion11 = true;\n              var _didIteratorError11 = false;\n              var _iteratorError11 = undefined;\n\n              try {\n                for (var _iterator11 = phrase.bars[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                  var _bar = _step11.value;\n\n                  _bar.chordChanges = { 'bar': [], 'rhythm': [] };\n                  var _arr = ['rhythm', 'bar'];\n                  for (var _i = 0; _i < _arr.length; _i++) {\n                    var chordChangesMode = _arr[_i];this.addChordChanges(_bar, _bar.chordChanges[chordChangesMode], songcheat.barDuration, chordChangesMode === 'bar');\n                  }this.log('\\tRythm wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion12 = true;\n                  var _didIteratorError12 = false;\n                  var _iteratorError12 = undefined;\n\n                  try {\n                    for (var _iterator12 = _bar.chordChanges['rhythm'][Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                      var _c = _step12.value;\n                      this.log('\\t\\t[' + _c.chord.name + '] = ' + _c.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError12 = true;\n                    _iteratorError12 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                        _iterator12.return();\n                      }\n                    } finally {\n                      if (_didIteratorError12) {\n                        throw _iteratorError12;\n                      }\n                    }\n                  }\n\n                  this.log('\\tBar wise chord durations for bar ' + _part2.name + '.' + (phraseIndex + 1) + '.' + (barIndex + 1));\n                  var _iteratorNormalCompletion13 = true;\n                  var _didIteratorError13 = false;\n                  var _iteratorError13 = undefined;\n\n                  try {\n                    for (var _iterator13 = _bar.chordChanges['bar'][Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                      var _c2 = _step13.value;\n                      this.log('\\t\\t[' + _c2.chord.name + '] = ' + _c2.duration + ' units');\n                    }\n                  } catch (err) {\n                    _didIteratorError13 = true;\n                    _iteratorError13 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                        _iterator13.return();\n                      }\n                    } finally {\n                      if (_didIteratorError13) {\n                        throw _iteratorError13;\n                      }\n                    }\n                  }\n\n                  barIndex++;\n                }\n              } catch (err) {\n                _didIteratorError11 = true;\n                _iteratorError11 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                    _iterator11.return();\n                  }\n                } finally {\n                  if (_didIteratorError11) {\n                    throw _iteratorError11;\n                  }\n                }\n              }\n\n              phraseIndex++;\n            }\n\n            // compute duration of part\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          _part2.duration = 0;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = _part2.phrases[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var _phrase = _step8.value;\n              var _iteratorNormalCompletion14 = true;\n              var _didIteratorError14 = false;\n              var _iteratorError14 = undefined;\n\n              try {\n                for (var _iterator14 = _phrase.bars[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                  var _bar2 = _step14.value;\n                  _part2.duration += _bar2.rhythm.duration;\n                }\n              } catch (err) {\n                _didIteratorError14 = true;\n                _iteratorError14 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                    _iterator14.return();\n                  }\n                } finally {\n                  if (_didIteratorError14) {\n                    throw _iteratorError14;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n\n        // fluid API\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return songcheat;\n    }\n  }, {\n    key: 'resolveIds',\n    value: function resolveIds(songcheat) {\n      var unitIndex = 0;\n      if (songcheat.structure) {\n        var _iteratorNormalCompletion15 = true;\n        var _didIteratorError15 = false;\n        var _iteratorError15 = undefined;\n\n        try {\n          for (var _iterator15 = songcheat.structure[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n            var unit = _step15.value;\n\n            if (!unit.part) throw new CompilerException('Part not defined for unit ' + (unitIndex + 1));\n\n            // resolve part id\n            var part = this.resolveId(songcheat.parts, unit.part);\n            if (!part) throw new CompilerException('Part ' + unit.part + ' not found');\n            unit.part = part;\n\n            unitIndex++;\n          }\n        } catch (err) {\n          _didIteratorError15 = true;\n          _iteratorError15 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion15 && _iterator15.return) {\n              _iterator15.return();\n            }\n          } finally {\n            if (_didIteratorError15) {\n              throw _iteratorError15;\n            }\n          }\n        }\n      }\n\n      if (songcheat.parts) {\n        var _iteratorNormalCompletion16 = true;\n        var _didIteratorError16 = false;\n        var _iteratorError16 = undefined;\n\n        try {\n          for (var _iterator16 = songcheat.parts[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n            var _part3 = _step16.value;\n\n            if (!_part3.phrases) throw new CompilerException('Phrases not defined for part \"' + _part3.name + '\"');\n            if (!(_part3.phrases instanceof Array)) throw new CompilerException('Phrases defined for part \"' + _part3.name + '\" must be an Array, found: ' + _typeof(songcheat.parts.phrases));\n\n            var phraseIndex = 0;\n            var _iteratorNormalCompletion17 = true;\n            var _didIteratorError17 = false;\n            var _iteratorError17 = undefined;\n\n            try {\n              for (var _iterator17 = _part3.phrases[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                var phrase = _step17.value;\n\n                var barIndex = 0;\n                var _iteratorNormalCompletion18 = true;\n                var _didIteratorError18 = false;\n                var _iteratorError18 = undefined;\n\n                try {\n                  for (var _iterator18 = phrase.bars[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                    var bar = _step18.value;\n\n                    if (!bar.rhythm) throw new CompilerException('Rhythm not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!bar.chords) throw new CompilerException('Chords not defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' of ' + _part3.name);\n                    if (!(bar.chords instanceof Array)) throw new CompilerException('Chords defined for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1) + ' must be an Array, found: ' + _typeof(bar.chords));\n\n                    // resolve rhythm id\n                    var rhythm = this.resolveId(songcheat.rhythms, bar.rhythm);\n                    if (!rhythm) throw new CompilerException('Rhythm ' + bar.rhythm + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                    bar.rhythm = rhythm;\n\n                    // resolved array of chord ids\n                    var chords = [];\n                    var _iteratorNormalCompletion19 = true;\n                    var _didIteratorError19 = false;\n                    var _iteratorError19 = undefined;\n\n                    try {\n                      for (var _iterator19 = bar.chords[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                        var chordId = _step19.value;\n\n                        // resolve chord id\n                        var chord = this.resolveId(songcheat.chords, chordId);\n                        if (!chord) throw new CompilerException('Chord ' + chordId + ' not found for bar ' + (barIndex + 1) + ' of phrase ' + (phraseIndex + 1));\n                        chords.push(chord);\n                      }\n                    } catch (err) {\n                      _didIteratorError19 = true;\n                      _iteratorError19 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                          _iterator19.return();\n                        }\n                      } finally {\n                        if (_didIteratorError19) {\n                          throw _iteratorError19;\n                        }\n                      }\n                    }\n\n                    bar.chords = chords;\n                    barIndex++;\n                  }\n                } catch (err) {\n                  _didIteratorError18 = true;\n                  _iteratorError18 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                      _iterator18.return();\n                    }\n                  } finally {\n                    if (_didIteratorError18) {\n                      throw _iteratorError18;\n                    }\n                  }\n                }\n\n                phraseIndex++;\n              }\n            } catch (err) {\n              _didIteratorError17 = true;\n              _iteratorError17 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                  _iterator17.return();\n                }\n              } finally {\n                if (_didIteratorError17) {\n                  throw _iteratorError17;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError16 = true;\n          _iteratorError16 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion16 && _iterator16.return) {\n              _iterator16.return();\n            }\n          } finally {\n            if (_didIteratorError16) {\n              throw _iteratorError16;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'resolveId',\n    value: function resolveId(collection, id) {\n      if (collection) {\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n          for (var _iterator20 = collection[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n            var i = _step20.value;\n            if (i.id === id) return i;\n          }\n        } catch (err) {\n          _didIteratorError20 = true;\n          _iteratorError20 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion20 && _iterator20.return) {\n              _iterator20.return();\n            }\n          } finally {\n            if (_didIteratorError20) {\n              throw _iteratorError20;\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'compileRhythm',\n    value: function compileRhythm(rhythm, initialNoteDuration) {\n      this.log('Compiling rhythm ' + rhythm.id + ' with score \"' + rhythm.score + '\"');\n\n      // default note duration, until changed\n      var noteDuration = initialNoteDuration;\n\n      // take not of each placeholder's index, so we can later fetch the associated chord\n      rhythm.placeholdercount = 0;\n\n      // for locating syntax errors in message\n      var position = 1;\n      var lastToken = null;\n\n      // compile the score string into an array of objects\n      rhythm.compiledScore = [];\n      var _iteratorNormalCompletion21 = true;\n      var _didIteratorError21 = false;\n      var _iteratorError21 = undefined;\n\n      try {\n        for (var _iterator21 = rhythm.score.split(/((?::(?:w|h|q|8|16|32)d?)|\\(#\\)|T?\\s*\\([^(]*\\)[^()\\sT:]*)/)[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n          var token = _step21.value;\n\n          if (token = token.trim()) {\n            var match = null;\n            if (match = token.match(/^(:(?:w|h|q|8|16|32)d?)$/)) {\n              // duration: change note duration to use next\n              noteDuration = Utils.duration(match[1]);\n            } else if (match = token.match(/^\\(#\\)$/)) {\n              // rest\n              rhythm.compiledScore.push({ rest: true, duration: noteDuration, tied: false, strings: false, flags: {}, placeholderIndex: rhythm.placeholdercount++ });\n            } else if (match = token.match(/^(T?)\\s*\\(([^(]*)\\)([^()\\s]*)$/)) {\n              // chord placeholder\n              var tied = match[1] === 'T';\n\n              // strings = between parentheses\n              var strings = match[2];\n              if (strings === '') strings = '*'; // an empty string is a shortcut for \"*\"\n              if (strings === 'x') strings = '*x'; // a x alone is a shortcut for \"*x\"\n              if (!strings.match(/^(?:(\\*x?)|((?:(?:B|B'|1|2|3|4|5|6)x?)+))$/)) throw new CompilerException('Invalid syntax found in chord placeholder: ' + strings);\n\n              // flags = after parentheses\n              var flagsString = match[3];\n              var flags = { stroke: null, accent: false, pm: false, fingering: null };\n              var _iteratorNormalCompletion23 = true;\n              var _didIteratorError23 = false;\n              var _iteratorError23 = undefined;\n\n              try {\n                for (var _iterator23 = flagsString.split(/(dd?|uu?|>|PM|[pima]+)/)[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n                  var flag = _step23.value;\n\n                  if (flag.trim()) {\n                    if (flag.match(/^(dd?|uu?)$/g)) {\n                      // stroke mode\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and stroke (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.stroke) throw new CompilerException('More than one stroke mode (d, u, dd, uu) defined for the chord placeholder: ' + token);\n                      flags.stroke = flag;\n                    } else if (flag.match(/^[pima]+$/)) {\n                      // PIMA fingering\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('Palm muting (PM) and fingering (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('More than one fingering (pima) defined for the chord placeholder: ' + token);\n                      flags.fingering = flag;\n                    } else if (flag.match(/^PM$/)) {\n                      // palm muting\n                      if (flags.stroke) throw new CompilerException('Stroke (' + flags.stroke + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.fingering) throw new CompilerException('Fingering (' + flags.fingering + ') and palm muting (' + flag + ') cannot be both defined for the chord placeholder: ' + token);\n                      if (flags.pm) throw new CompilerException('More than one palm muting (PM) defined for the chord placeholder: ' + token);\n                      flags.pm = true;\n                    } else if (flag.match(/^>$/)) {\n                      // accent\n                      if (flags.accent) throw new CompilerException('More than one accent (>) defined for the same placeholder: ' + token);\n                      flags.accent = true;\n                    } else throw new CompilerException('Invalid flag \"' + flag + '\" defined for chord placeholder \"' + token + '\"');\n                  }\n                }\n\n                // add a note\n              } catch (err) {\n                _didIteratorError23 = true;\n                _iteratorError23 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion23 && _iterator23.return) {\n                    _iterator23.return();\n                  }\n                } finally {\n                  if (_didIteratorError23) {\n                    throw _iteratorError23;\n                  }\n                }\n              }\n\n              rhythm.compiledScore.push({ rest: false, duration: noteDuration, tied: tied, strings: strings, flags: flags, placeholderIndex: rhythm.placeholdercount++ });\n            } else throw new CompilerException('Invalid token \"' + token + '\" in rhythm score definition at position ' + position + (lastToken ? ' (after \"' + lastToken + '\")' : ''));\n\n            lastToken = token;\n          }\n\n          position += token.length;\n        }\n\n        // compute total rhythm duration\n      } catch (err) {\n        _didIteratorError21 = true;\n        _iteratorError21 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion21 && _iterator21.return) {\n            _iterator21.return();\n          }\n        } finally {\n          if (_didIteratorError21) {\n            throw _iteratorError21;\n          }\n        }\n      }\n\n      rhythm.duration = 0;\n      var _iteratorNormalCompletion22 = true;\n      var _didIteratorError22 = false;\n      var _iteratorError22 = undefined;\n\n      try {\n        for (var _iterator22 = rhythm.compiledScore[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n          var o = _step22.value;\n          rhythm.duration += o.duration;\n        }\n      } catch (err) {\n        _didIteratorError22 = true;\n        _iteratorError22 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion22 && _iterator22.return) {\n            _iterator22.return();\n          }\n        } finally {\n          if (_didIteratorError22) {\n            throw _iteratorError22;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'addChordChanges',\n    value: function addChordChanges(bar, chordChanges, barDuration, resetAtBars, lastChord) {\n      // ensure number of chords match number of placeholders in rhythm score, by repeating last chord\n      if (bar.chords.length < 1) throw new CompilerException('chords must contain at least 1 entry, but ' + bar.chords.length + ' were found');\n      while (bar.chords.length < bar.rhythm.placeholdercount) {\n        bar.chords.push(bar.chords[bar.chords.length - 1]);\n      }var offset = 0;\n      var _iteratorNormalCompletion24 = true;\n      var _didIteratorError24 = false;\n      var _iteratorError24 = undefined;\n\n      try {\n        for (var _iterator24 = bar.rhythm.compiledScore[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n          var note = _step24.value;\n\n          // get chord corresponding to the placeholder position\n          var chord = bar.chords[note.placeholderIndex];\n          if (!chord) throw new CompilerException('No chord found for placeholder ' + (note.placeholderIndex + 1));\n\n          // same chord as before and not a new bar: increment duration with this new note\n          if (lastChord === chord && offset % barDuration !== 0) chordChanges[chordChanges.length - 1].duration += note.duration;\n\n          // chord changed: new duration starts with one note of the new chord\n          // unless requested to reset chords at bars, chord change will be hidden if still the same as before\n          else chordChanges.push({ chord: chord, duration: note.duration, hidden: lastChord === chord && !resetAtBars });\n\n          lastChord = chord;\n          offset += note.duration;\n        }\n      } catch (err) {\n        _didIteratorError24 = true;\n        _iteratorError24 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion24 && _iterator24.return) {\n            _iterator24.return();\n          }\n        } finally {\n          if (_didIteratorError24) {\n            throw _iteratorError24;\n          }\n        }\n      }\n\n      return lastChord;\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit, defaultCursorStep, barDuration) {\n      var warnings = [];\n      var offset = 0;\n\n      // remove DOS newlines\n      unit.lyrics = (unit.lyrics || '').replace(/\\r/g, '');\n\n      // split lyrics into word groups, split occurs at cursor forward instructions (colons, durations and bars)\n      unit.groups = [];\n      var _iteratorNormalCompletion25 = true;\n      var _didIteratorError25 = false;\n      var _iteratorError25 = undefined;\n\n      try {\n        for (var _iterator25 = unit.lyrics.split(/((?::(?:w|h|q|8|16|32)d?)?:|\\|)/)[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n          var part = _step25.value;\n          // nb: split with capture groups only works in decent browsers, e.g. IE10+\n          var match = null;\n          // move cursor forward by given or default step duration\n          if (match = part.match(/(:(?:w|h|q|8|16|32)d?)?:/)) offset = this.registerGroup(unit, offset, match[1] ? Utils.duration(match[1]) : defaultCursorStep, barDuration);\n\n          // move cursor to begin of next bar\n          else if (part.match(/\\|/)) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n            // (non empty) word group (waiting for its duration)\n            else if (part.length > 0) unit.groups.push({ text: part, offset: offset, duration: 0 });\n        }\n\n        // simulate a final bar if last group still open (no duration), i.e. if lyrics do not end on a : or |\n      } catch (err) {\n        _didIteratorError25 = true;\n        _iteratorError25 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion25 && _iterator25.return) {\n            _iterator25.return();\n          }\n        } finally {\n          if (_didIteratorError25) {\n            throw _iteratorError25;\n          }\n        }\n      }\n\n      if (unit.groups.length && unit.groups[unit.groups.length - 1].duration === 0) offset = this.registerGroup(unit, offset, barDuration - offset % barDuration, barDuration);\n\n      // get missing duration and complete with empty groups if needed (offset now contains the total duration of all groups)\n      var missingDuration = unit.part.duration - offset;\n      this.log('[' + unit.name + '] Missing duration = ' + missingDuration + ' units (' + unit.part.duration + ' - ' + offset + ') = ' + missingDuration / barDuration + ' bars missing');\n      if (missingDuration < 0) warnings.push('Lyrics contain ' + Math.floor(-missingDuration / barDuration) + ' bar(s)' + (-missingDuration % barDuration ? ' and ' + Utils.durationcodes(-missingDuration % barDuration) : '') + ' in excess');\n      offset = this.registerGroup(unit, offset, missingDuration, barDuration);\n\n      var _iteratorNormalCompletion26 = true;\n      var _didIteratorError26 = false;\n      var _iteratorError26 = undefined;\n\n      try {\n        for (var _iterator26 = unit.groups[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n          var group = _step26.value;\n\n          // compute length of group (in chars), adding 1 so the group having max density is not collated with next group\n          var groupLength = this.getGroupLength(group) + 1;\n\n          // ensure the bar will always have the required minimal width\n          group.plen = Math.max(groupLength, Math.ceil(MIN_LYRICS_BARLEN * group.duration / barDuration));\n\n          // compute density of group based on the obtained length\n          group.p = group.plen / group.duration;\n\n          // set bar true if group ends on a bar\n          group.bar = (group.offset + group.duration) % barDuration === 0;\n\n          // initialize chord changes\n          group.chordChanges = { 'bar': [], 'rhythm': [], 'phrase': [] };\n        }\n\n        // compute maximum density across all groups\n      } catch (err) {\n        _didIteratorError26 = true;\n        _iteratorError26 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion26 && _iterator26.return) {\n            _iterator26.return();\n          }\n        } finally {\n          if (_didIteratorError26) {\n            throw _iteratorError26;\n          }\n        }\n      }\n\n      unit.pmax = 0;\n      var _iteratorNormalCompletion27 = true;\n      var _didIteratorError27 = false;\n      var _iteratorError27 = undefined;\n\n      try {\n        for (var _iterator27 = unit.groups[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {\n          var _group = _step27.value;\n          unit.pmax = Math.max(unit.pmax, _group.p);\n        } // iterate on each phrase wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError27 = true;\n        _iteratorError27 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion27 && _iterator27.return) {\n            _iterator27.return();\n          }\n        } finally {\n          if (_didIteratorError27) {\n            throw _iteratorError27;\n          }\n        }\n      }\n\n      offset = 0;\n      var _iteratorNormalCompletion28 = true;\n      var _didIteratorError28 = false;\n      var _iteratorError28 = undefined;\n\n      try {\n        for (var _iterator28 = unit.part.phrases[Symbol.iterator](), _step28; !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {\n          var phrase = _step28.value;\n          var _iteratorNormalCompletion31 = true;\n          var _didIteratorError31 = false;\n          var _iteratorError31 = undefined;\n\n          try {\n            for (var _iterator31 = phrase.chordChanges[Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {\n              var chordDuration = _step31.value;\n\n              // find closest group starting at or before chord offset\n              var _group3 = null;\n              var _iteratorNormalCompletion32 = true;\n              var _didIteratorError32 = false;\n              var _iteratorError32 = undefined;\n\n              try {\n                for (var _iterator32 = unit.groups[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {\n                  var g = _step32.value;\n                  if (g.offset <= offset) _group3 = g;\n                }\n              } catch (err) {\n                _didIteratorError32 = true;\n                _iteratorError32 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion32 && _iterator32.return) {\n                    _iterator32.return();\n                  }\n                } finally {\n                  if (_didIteratorError32) {\n                    throw _iteratorError32;\n                  }\n                }\n              }\n\n              if (!_group3) throw new Error('No closest group found for chord ' + chordDuration.chord.name + ' with offset ' + offset + ' units');\n\n              // register chord change in group\n              _group3.chordChanges['phrase'].push({ offset: offset, text: this.getChordDisplay(chordDuration) });\n\n              offset += chordDuration.duration;\n            }\n          } catch (err) {\n            _didIteratorError31 = true;\n            _iteratorError31 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion31 && _iterator31.return) {\n                _iterator31.return();\n              }\n            } finally {\n              if (_didIteratorError31) {\n                throw _iteratorError31;\n              }\n            }\n          }\n        }\n\n        // iterate on each bar wise chord change and find the associated group\n      } catch (err) {\n        _didIteratorError28 = true;\n        _iteratorError28 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion28 && _iterator28.return) {\n            _iterator28.return();\n          }\n        } finally {\n          if (_didIteratorError28) {\n            throw _iteratorError28;\n          }\n        }\n      }\n\n      offset = { 'rhythm': 0, 'bar': 0 };\n      var _iteratorNormalCompletion29 = true;\n      var _didIteratorError29 = false;\n      var _iteratorError29 = undefined;\n\n      try {\n        for (var _iterator29 = unit.part.phrases[Symbol.iterator](), _step29; !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {\n          var _phrase2 = _step29.value;\n          var _iteratorNormalCompletion33 = true;\n          var _didIteratorError33 = false;\n          var _iteratorError33 = undefined;\n\n          try {\n            for (var _iterator33 = _phrase2.bars[Symbol.iterator](), _step33; !(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done); _iteratorNormalCompletion33 = true) {\n              var bar = _step33.value;\n              var _arr2 = ['rhythm', 'bar'];\n\n              for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n                var chordChangesMode = _arr2[_i2];var _iteratorNormalCompletion34 = true;\n                var _didIteratorError34 = false;\n                var _iteratorError34 = undefined;\n\n                try {\n                  for (var _iterator34 = bar.chordChanges[chordChangesMode][Symbol.iterator](), _step34; !(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done); _iteratorNormalCompletion34 = true) {\n                    var _chordDuration = _step34.value;\n\n                    // find closest group starting at or before chord offset\n                    var _group4 = null;\n                    var _iteratorNormalCompletion35 = true;\n                    var _didIteratorError35 = false;\n                    var _iteratorError35 = undefined;\n\n                    try {\n                      for (var _iterator35 = unit.groups[Symbol.iterator](), _step35; !(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done); _iteratorNormalCompletion35 = true) {\n                        var _g = _step35.value;\n                        if (_g.offset <= offset[chordChangesMode]) _group4 = _g;\n                      }\n                    } catch (err) {\n                      _didIteratorError35 = true;\n                      _iteratorError35 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion35 && _iterator35.return) {\n                          _iterator35.return();\n                        }\n                      } finally {\n                        if (_didIteratorError35) {\n                          throw _iteratorError35;\n                        }\n                      }\n                    }\n\n                    if (!_group4) throw new Error('No closest group found for chord ' + _chordDuration.chord.name + ' with offset ' + offset[chordChangesMode] + ' units');\n\n                    // register chord change in group\n                    _group4.chordChanges[chordChangesMode].push({ offset: offset[chordChangesMode], text: this.getChordDisplay(_chordDuration) });\n\n                    offset[chordChangesMode] += _chordDuration.duration;\n                  }\n                } catch (err) {\n                  _didIteratorError34 = true;\n                  _iteratorError34 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion34 && _iterator34.return) {\n                      _iterator34.return();\n                    }\n                  } finally {\n                    if (_didIteratorError34) {\n                      throw _iteratorError34;\n                    }\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError33 = true;\n            _iteratorError33 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion33 && _iterator33.return) {\n                _iterator33.return();\n              }\n            } finally {\n              if (_didIteratorError33) {\n                throw _iteratorError33;\n              }\n            }\n          }\n        }\n\n        // debug info\n      } catch (err) {\n        _didIteratorError29 = true;\n        _iteratorError29 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion29 && _iterator29.return) {\n            _iterator29.return();\n          }\n        } finally {\n          if (_didIteratorError29) {\n            throw _iteratorError29;\n          }\n        }\n      }\n\n      var debugText = 'Groups of unit [' + unit.name + ']:\\n';\n      var barIndex = 0;\n      var zeroDuration = false;\n      var _iteratorNormalCompletion30 = true;\n      var _didIteratorError30 = false;\n      var _iteratorError30 = undefined;\n\n      try {\n        for (var _iterator30 = unit.groups[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {\n          var _group2 = _step30.value;\n\n          debugText += '\\tBar ' + (barIndex + 1) + '\\t[' + _group2.text.replace(/\\n/g, '\\\\N') + ']:' + _group2.duration + ' (' + _group2.offset + ' - ' + (_group2.offset + _group2.duration) + ') L=' + this.getGroupLength(_group2) + \" L'=\" + _group2.plen + ' ρ=' + _group2.p.toFixed(2) + ' #Chord changes %bar= ' + _group2.chordChanges['bar'].length + ' %phrase= ' + _group2.chordChanges['phrase'].length;\n          if (_group2.duration === 0) zeroDuration = true;\n          if (_group2.bar) {\n            barIndex++;\n            debugText += ' | ';\n          }\n          debugText += '\\n';\n        }\n      } catch (err) {\n        _didIteratorError30 = true;\n        _iteratorError30 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion30 && _iterator30.return) {\n            _iterator30.return();\n          }\n        } finally {\n          if (_didIteratorError30) {\n            throw _iteratorError30;\n          }\n        }\n      }\n\n      debugText += 'ρ max = ' + unit.pmax.toFixed(2);\n      this.log(debugText);\n\n      if (zeroDuration) throw new Error('Detected group with 0 duration');\n\n      return warnings;\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      var unitText = '';\n\n      // concatenate lyrics groups, giving them a number of positions proprtional to their duration\n      var barIndex = 0;\n      var groupIndex = 0;\n      var _iteratorNormalCompletion36 = true;\n      var _didIteratorError36 = false;\n      var _iteratorError36 = undefined;\n\n      try {\n        for (var _iterator36 = unit.groups[Symbol.iterator](), _step36; !(_iteratorNormalCompletion36 = (_step36 = _iterator36.next()).done); _iteratorNormalCompletion36 = true) {\n          var group = _step36.value;\n\n          // where and on how many positions will this group be displayed\n          group.position = [].concat(toConsumableArray(unitText.replace(/\\n/g, ''))).length;\n          group.length = Math.ceil(group.duration * unit.pmax);\n\n          // an hyphen means a word has been cut in two, no need for a space before next group\n          // but if the final character should be a bar, then always count this extra character\n          var needFinalSpace = group.bar || !group.text.match(/-$/);\n\n          // if maxConsecutiveSpaces is set, set a maximum for the number of allowed positions if needed\n          var maxLength = null;\n          if (maxConsecutiveSpaces > 0) maxLength = this.getGroupLength(group) + maxConsecutiveSpaces - (needFinalSpace ? 0 : 1);\n          if (maxLength) group.length = Math.min(group.length, maxLength);\n\n          // but if group has associated chords, we must have enough space for them (and this has priority over maxConsecutiveSpaces)\n          var minLength = group.bar ? 1 : 0; // 1 for the final bar sign if any\n          if (group.chordChanges[chordChangesMode]) {\n            for (var i = 0; i < group.chordChanges[chordChangesMode].length; i++) {\n              minLength += group.chordChanges[chordChangesMode][i].text.length;\n            }\n          }\n          minLength = Math.max(this.getGroupLength(group) + (needFinalSpace ? 1 : 0), minLength);\n          group.length = Math.max(group.length, minLength);\n\n          // filler string used to reach that length (nb: filler will always have a length of at least 1)\n          var filler = Utils.spaces(group.length - this.getGroupLength(group), showDots || this.DEBUG ? '.' : ' ');\n\n          // replace last character of filler by a | if this is the end of a bar\n          filler = filler.replace(/(.)$/, group.bar ? split > 0 && (barIndex + 1) % split === 0 ? '|\\n' : '|' : this.DEBUG ? '*' : '$1');\n\n          // append filler to text, remove new lines if splitting at bars\n          var groupText = (split > 0 ? group.text.replace(/\\n/g, '') : group.text) + filler;\n\n          this.log('[' + unit.name + '] Display group ' + (groupIndex + 1) + ' \"' + groupText.replace(/\\n/g, '\\\\N') + '\" on ' + group.length + ' chars (CEIL ' + (group.duration * unit.pmax).toFixed(2) + ' MIN ' + minLength + ' MAX ' + (maxLength || 'n/a') + ')');\n          unitText += groupText;\n\n          groupIndex++;\n          if (group.bar) barIndex++;\n        }\n\n        // we weren't asked to add chords\n      } catch (err) {\n        _didIteratorError36 = true;\n        _iteratorError36 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion36 && _iterator36.return) {\n            _iterator36.return();\n          }\n        } finally {\n          if (_didIteratorError36) {\n            throw _iteratorError36;\n          }\n        }\n      }\n\n      if (!chordChangesMode) return unitText;\n\n      // build chord inserts, based on bar or phrase wise changes, each with the text and position where to insert\n      var chordInserts = [];\n      var _iteratorNormalCompletion37 = true;\n      var _didIteratorError37 = false;\n      var _iteratorError37 = undefined;\n\n      try {\n        for (var _iterator37 = unit.groups[Symbol.iterator](), _step37; !(_iteratorNormalCompletion37 = (_step37 = _iterator37.next()).done); _iteratorNormalCompletion37 = true) {\n          var _group5 = _step37.value;\n\n          var lengthStillToPlaceOnThisGroup = 0;\n          var lengthYetPlacedOnThisGroup = 0;\n\n          // compute length of all chord inserts\n          var _iteratorNormalCompletion40 = true;\n          var _didIteratorError40 = false;\n          var _iteratorError40 = undefined;\n\n          try {\n            for (var _iterator40 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step40; !(_iteratorNormalCompletion40 = (_step40 = _iterator40.next()).done); _iteratorNormalCompletion40 = true) {\n              var chordChange = _step40.value;\n              lengthStillToPlaceOnThisGroup += chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError40 = true;\n            _iteratorError40 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion40 && _iterator40.return) {\n                _iterator40.return();\n              }\n            } finally {\n              if (_didIteratorError40) {\n                throw _iteratorError40;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion41 = true;\n          var _didIteratorError41 = false;\n          var _iteratorError41 = undefined;\n\n          try {\n            for (var _iterator41 = _group5.chordChanges[chordChangesMode][Symbol.iterator](), _step41; !(_iteratorNormalCompletion41 = (_step41 = _iterator41.next()).done); _iteratorNormalCompletion41 = true) {\n              var _chordChange = _step41.value;\n\n              // position of the chord will be the position of the group + length corresponding to offset delta\n              var positionDelta = Math.ceil((_chordChange.offset - _group5.offset) / _group5.duration * _group5.length);\n              var positionDelta_ = positionDelta;\n\n              // ensure that chord name will not cross end of group it belongs to (last char of group must not be overwritten either if it is a bar)\n              while (positionDelta + lengthStillToPlaceOnThisGroup > _group5.length - (_group5.bar ? 1 : 0)) {\n                positionDelta--;\n              }\n\n              // ensure that chords already there still have enough room\n              while (positionDelta - lengthYetPlacedOnThisGroup < 0) {\n                positionDelta++;\n              }\n\n              this.log('Closest group \"' + _group5.text.replace(/\\n/g, '\\\\n') + '\" with offset ' + _group5.offset + ' and position ' + _group5.position + ' found for ' + _chordChange.text.trim() + ' with offset ' + _chordChange.offset + ' units\\n\\tposition delta from group start = ' + positionDelta + ' chars (initially ' + positionDelta_ + ' chars)');\n              chordInserts.push({ text: _chordChange.text, offset: _chordChange.offset, position: _group5.position + positionDelta });\n\n              lengthYetPlacedOnThisGroup = positionDelta + _chordChange.text.length;\n              lengthStillToPlaceOnThisGroup -= _chordChange.text.length;\n            }\n          } catch (err) {\n            _didIteratorError41 = true;\n            _iteratorError41 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion41 && _iterator41.return) {\n                _iterator41.return();\n              }\n            } finally {\n              if (_didIteratorError41) {\n                throw _iteratorError41;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError37 = true;\n        _iteratorError37 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion37 && _iterator37.return) {\n            _iterator37.return();\n          }\n        } finally {\n          if (_didIteratorError37) {\n            throw _iteratorError37;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion38 = true;\n      var _didIteratorError38 = false;\n      var _iteratorError38 = undefined;\n\n      try {\n        for (var _iterator38 = chordInserts[Symbol.iterator](), _step38; !(_iteratorNormalCompletion38 = (_step38 = _iterator38.next()).done); _iteratorNormalCompletion38 = true) {\n          var chordInsert = _step38.value;\n          this.log('[' + unit.name + '] Should insert ' + chordInsert.text + ' @ ' + chordInsert.offset + ' units / ' + chordInsert.position + ' chars');\n        } // insert these chord inserts\n      } catch (err) {\n        _didIteratorError38 = true;\n        _iteratorError38 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion38 && _iterator38.return) {\n            _iterator38.return();\n          }\n        } finally {\n          if (_didIteratorError38) {\n            throw _iteratorError38;\n          }\n        }\n      }\n\n      var position = 0;\n      var skip = 0;\n      var unitText_ = unitText;\n      var chordText = '';\n      unitText = '';\n      var _iteratorNormalCompletion39 = true;\n      var _didIteratorError39 = false;\n      var _iteratorError39 = undefined;\n\n      try {\n        for (var _iterator39 = unitText_[Symbol.iterator](), _step39; !(_iteratorNormalCompletion39 = (_step39 = _iterator39.next()).done); _iteratorNormalCompletion39 = true) {\n          var char = _step39.value;\n\n          if (char === '\\n') {\n            unitText += '\\n';\n            chordText += '\\n';\n            skip = 0;\n          } else {\n            var _iteratorNormalCompletion42 = true;\n            var _didIteratorError42 = false;\n            var _iteratorError42 = undefined;\n\n            try {\n              for (var _iterator42 = chordInserts[Symbol.iterator](), _step42; !(_iteratorNormalCompletion42 = (_step42 = _iterator42.next()).done); _iteratorNormalCompletion42 = true) {\n                var _chordInsert = _step42.value;\n\n                if (!_chordInsert.inserted) {\n                  if (_chordInsert.position <= position) {\n                    this.log('[' + unit.name + '] Inserting ' + _chordInsert.text + ' @ ' + position + ' chars');\n                    chordText += _chordInsert.text;\n                    _chordInsert.inserted = true;\n                    skip = _chordInsert.text.length;\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError42 = true;\n              _iteratorError42 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion42 && _iterator42.return) {\n                  _iterator42.return();\n                }\n              } finally {\n                if (_didIteratorError42) {\n                  throw _iteratorError42;\n                }\n              }\n            }\n\n            position++;\n\n            // add char to unit text, and corresponding space to chord text\n            // only bar symbols are added in chord text instead of unit text (if showing dots, then bars are displayed in both texts)\n            if (skip === 0) {\n              chordText += char === '|' ? char : ' ';\n            } else {\n              skip--;\n            }\n            unitText += char === '|' && !(showDots || this.DEBUG) ? ' ' : char;\n          }\n        }\n\n        // and interlace the two strings\n      } catch (err) {\n        _didIteratorError39 = true;\n        _iteratorError39 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion39 && _iterator39.return) {\n            _iterator39.return();\n          }\n        } finally {\n          if (_didIteratorError39) {\n            throw _iteratorError39;\n          }\n        }\n      }\n\n      return Utils.interlace(chordText, unitText, null, KEEP_EMPTY_LINES);\n    }\n  }, {\n    key: 'registerGroup',\n    value: function registerGroup(unit, offset, step, barDuration) {\n      if (!barDuration) throw new Error('Invalid bar duration passed to registerGroup');\n\n      while (step > 0) {\n        // duration added to preceding group may never be more than what's left until end of bar\n        var addDuration = Math.min(step, barDuration - offset % barDuration);\n\n        // create a new group if none or if preceding already got its duration\n        if (!unit.groups.length || !LYRICS_SUM_DURATIONS && unit.groups[unit.groups.length - 1].duration > 0) unit.groups.push({ text: '', offset: offset, duration: 0 });\n\n        // add this duration to preceding group (create it if needed)\n        unit.groups[unit.groups.length - 1].duration += addDuration;\n        offset += addDuration;\n        step -= addDuration;\n\n        // step is going to cross end of bar: directly create a first empty group\n        if (step > 0) unit.groups.push({ text: this.DEBUG > 1 ? '_' : '', offset: offset, duration: 0 });\n      }\n\n      return offset;\n    }\n  }, {\n    key: 'getGroupLength',\n    value: function getGroupLength(group) {\n      // return the number of visible graphemes in group text\n      // - newlines are not counted\n      // - tabs will be converted to spaces and may thus count as 1\n      // - use spread operator to correctly count astral unicode symbols\n      return [].concat(toConsumableArray(group.text.replace(/\\n/g, ''))).length;\n    }\n  }, {\n    key: 'getChordDisplay',\n    value: function getChordDisplay(chordDuration) {\n      // space and not empty if hidden, to ensure that a white space will show that this change does not happen at the begin of the bar\n      if (chordDuration.hidden) return ' ';\n\n      // a space prevents chord names to be glued together on group and prevents a next group from starting directly after last chord of previous group\n      return chordDuration.chord.name + ' ';\n    }\n  }]);\n  return Compiler_;\n}();\n\n/**\n * Public API\n */\n\nvar Compiler = function () {\n  function Compiler(songcheat, DEBUG) {\n    classCallCheck(this, Compiler);\n\n    this.compiler_ = new Compiler_(DEBUG);\n    if (songcheat) this.set(songcheat);\n  }\n\n  createClass(Compiler, [{\n    key: 'set',\n    value: function set$$1(songcheat) {\n      this.compiler_.log(Utils.title('COMPILE SONGCHEAT'));\n      this.scc = this.compiler_.compile(JSON.parse(JSON.stringify(songcheat)));\n    }\n  }, {\n    key: 'parseLyrics',\n    value: function parseLyrics(unit) {\n      this.compiler_.log(Utils.title('PARSE LYRICS ' + unit.name));\n      return this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n    }\n  }, {\n    key: 'getUnitText',\n    value: function getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      this.compiler_.log(Utils.title('GET LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }, {\n    key: 'getPartText',\n    value: function getPartText(part, maxConsecutiveSpaces, split, chordChangesMode, showDots) {\n      // dummy unit with no lyrics\n      var unit = { name: part.name, part: part };\n\n      this.compiler_.log(Utils.title('PARSE PART LYRICS ' + unit.name));\n      this.compiler_.parseLyrics(unit, Utils.duration(this.scc.lyricsUnit), this.scc.barDuration);\n\n      this.compiler_.log(Utils.title('GET PART LYRICS TEXT ' + unit.name + ' (maxConsecutiveSpaces = ' + maxConsecutiveSpaces + ', split = ' + split + ', chordChangesMode = ' + chordChangesMode + ', showDots = ' + showDots + ')'));\n      return this.compiler_.getUnitText(unit, maxConsecutiveSpaces, split, chordChangesMode, showDots);\n    }\n  }]);\n  return Compiler;\n}();\n\nvar classCallCheck$1 = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar DEBUG = 0;\n\nvar VexTabException = function () {\n  function VexTabException(message) {\n    classCallCheck$1(this, VexTabException);\n\n    this.message = message;\n  }\n\n  createClass$1(VexTabException, [{\n    key: 'toString',\n    value: function toString() {\n      return 'VexTab error: ' + this.message;\n    }\n  }]);\n  return VexTabException;\n}();\n\nvar VexTab = function () {\n  function VexTab() {\n    classCallCheck$1(this, VexTab);\n  }\n\n  createClass$1(VexTab, null, [{\n    key: 'Chord2VexTab',\n\n    // build VexTab chord notation\n    value: function Chord2VexTab(chord, strings, transpose) {\n      var vextabchord = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Utils.chordStrings(chord, strings)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var o = _step.value;\n\n          vextabchord.push((o.mute ? 'X' : transpose + o.fret) + '/' + o.string);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return '(' + vextabchord.join('.') + ')';\n    }\n  }, {\n    key: 'Note2VexTab',\n    value: function Note2VexTab(note, strokes, accents) {\n      var vextab = '';\n\n      // rest with given duration\n      if (note.rest) vextab += Utils.durationcode(note.duration) + '#5#';else {\n        // note duration, slashed if no chord given\n        vextab += note.chord ? Utils.durationcode(note.duration) : Utils.durationcode(note.duration).replace(/(:(?:w|h|q|8|16|32))(d?)/g, '$1S$2');\n\n        // if tied note\n        if (note.tied) vextab += 'T';\n\n        // chord or dummy note (for slash notation)\n        vextab += !note.chord ? '(4/3)' : VexTab.Chord2VexTab(note.chord, note.strings, 0); // do not transpose with capo: chords are tabbed exactly as their diagrm says (author chooses to use capo'd chords or not)\n\n        // stroke flag d or u (dd and uu are not built-in in vextab and are handled later through text2VexTab)\n        if (strokes && note.flags.stroke && note.flags.stroke.length === 1) vextab += note.flags.stroke;\n\n        // accent (put on top)\n        if (accents && note.flags.accent) vextab += '$.a>/' + accents + '.$';\n      }\n\n      return vextab;\n    }\n  }, {\n    key: 'Notes2Stave',\n    value: function Notes2Stave(songcheat, offset, notes, strokes, accents, subtitle, hs, notation, tablature) {\n      var vextab = '';\n      var barDuration = songcheat.barDuration;\n\n      console.log('Drawing ' + (notation ? 'notation ' : '') + (tablature ? 'tablature ' : '') + 'stave with ' + notes.length + ' notes');\n\n      // start new stave with signature\n      vextab += '\\ntabstave notation=' + (notation ? 'true' : 'false') + ' tablature=' + (tablature ? 'true' : 'false') + '\\n';\n      vextab += 'tuning=' + songcheat.tuning + ' key=' + songcheat.signature.key + ' time=' + songcheat.signature.time.symbol + '\\n';\n\n      // add subtitle if first bar\n      if (subtitle && offset === 0) vextab += 'text .' + hs + ',.font=Arial-10-bold,[' + subtitle + ']\\n';\n\n      vextab += 'notes ';\n\n      // initial bar line if needed (double if first bar)\n      if (offset % barDuration === 0) vextab += offset === 0 ? '=||' : '|';\n\n      // add each note, followed by a bar or phrase sign if needed\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = notes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var note = _step2.value;\n\n          vextab += VexTab.Note2VexTab(note, strokes, accents);\n          offset += note.duration;\n          if (note.lastInPhrase && offset % barDuration !== 0) console.warn('Phrase matches no bar (' + Utils.durationcodes(barDuration - offset % barDuration) + ' away)');\n          if (offset % barDuration === 0) vextab += note.lastInPhrase ? '=||' : '|';\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return vextab + '\\n';\n    }\n  }, {\n    key: 'Text2VexTab',\n    value: function Text2VexTab(textGroups, barDuration, offset, staveDuration, h, font) {\n      var text = '';\n\n      // for groups that start within our range\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = textGroups[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var group = _step3.value;\n\n          if (group.offset >= offset + staveDuration) break;\n          if (group.offset >= offset) {\n            var line = 'text ++,.' + h + ',.font=' + font;\n\n            // initial bar line if needed\n            if (offset % barDuration === 0) line += ',|';\n\n            // add empty text groups to fill the gap between start of stave and start of group\n            var gap = group.offset - offset;\n            while (gap > 0) {\n              // gap duration may never be more than what's left until end of bar\n              var d = Math.min(gap, barDuration - offset % barDuration);\n              var _iteratorNormalCompletion4 = true;\n              var _didIteratorError4 = false;\n              var _iteratorError4 = undefined;\n\n              try {\n                for (var _iterator4 = Utils.durationcodes(d)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                  var code = _step4.value;\n                  line += ',' + code + ', ';\n                }\n              } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                  }\n                } finally {\n                  if (_didIteratorError4) {\n                    throw _iteratorError4;\n                  }\n                }\n              }\n\n              if ((offset + d) % barDuration === 0) line += ',|';\n\n              // continue with remaining gap\n              gap -= d;\n            }\n\n            // add actual text group on all available duration until end of stave (or more precisely the largest duration code which is <= available duration)\n            var available = offset + staveDuration - group.offset;\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = Utils.durationcodes(available)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _code = _step5.value;\n                line += ',' + _code + ',' + (group.text.replace(/\\n/g, '') || ' ');break;\n              }\n\n              // remove trailing spaces and comma: vextab does not allow to finish on an empty word group\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            text += line.replace(/[ ,]+$/, '') + '\\n';\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return text;\n    }\n  }, {\n    key: 'Songcheat2VexTab',\n    value: function Songcheat2VexTab(songcheat) {\n      var vextab = '';\n      var unitIndex = 0;\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = songcheat.structure[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var unit = _step6.value;\n\n          if (songcheat.showUnitIndex === null || songcheat.showUnitIndex === unitIndex) vextab += VexTab.Unit2VexTab(songcheat, unit, unitIndex) + '\\n';\n          unitIndex++;\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return vextab;\n    }\n  }, {\n    key: 'Unit2VexTab',\n    value: function Unit2VexTab(songcheat, unit, unitIndex) {\n      var stems = songcheat.mode.indexOf('s') >= 0;\n      var showLyrics = songcheat.lyricsMode === 's';\n      var barDuration = songcheat.barDuration;\n\n      var vextab = 'options tempo=' + songcheat.signature.tempo + ' player=false tab-stems=' + (stems ? 'true' : 'false') + ' tab-stem-direction=up\\n';\n      unitIndex = unitIndex || 0;\n\n      var staveDuration = 0;\n      var notes = [];\n      var notesSlashed = [];\n\n      console.log('VexTabbing unit ' + (unitIndex + 1) + ' \"' + unit.name + '\"');\n\n      // space before first unit and between units\n      vextab += 'options space=' + (unitIndex > 0 && songcheat.showUnitIndex === null ? 50 : 20) + '\\n';\n\n      // get lyrics word groups\n      var lyricsGroups = [];\n      if (unit.groups) {\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = unit.groups[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var group = _step7.value;\n            lyricsGroups.push({ offset: group.offset, text: group.text + (DEBUG ? '/' + group.duration : '') });\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      } // get rhythm wise chord changes (same as ascii lyrics)\n      var offset = 0;\n      var chordGroups = [];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = unit.part.phrases[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var phrase = _step8.value;\n          var _iteratorNormalCompletion12 = true;\n          var _didIteratorError12 = false;\n          var _iteratorError12 = undefined;\n\n          try {\n            for (var _iterator12 = phrase.bars[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n              var bar = _step12.value;\n              var _iteratorNormalCompletion13 = true;\n              var _didIteratorError13 = false;\n              var _iteratorError13 = undefined;\n\n              try {\n                for (var _iterator13 = bar.chordChanges['rhythm'][Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                  var chordChange = _step13.value;\n\n                  chordGroups.push({ offset: offset, text: chordChange.chord.name + (DEBUG ? '/' + chordChange.duration : '') });\n                  offset += chordChange.duration;\n                }\n              } catch (err) {\n                _didIteratorError13 = true;\n                _iteratorError13 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                    _iterator13.return();\n                  }\n                } finally {\n                  if (_didIteratorError13) {\n                    throw _iteratorError13;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError12 = true;\n            _iteratorError12 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                _iterator12.return();\n              }\n            } finally {\n              if (_didIteratorError12) {\n                throw _iteratorError12;\n              }\n            }\n          }\n        }\n\n        // get PIMA and dd/uu word groups\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      offset = 0;\n      var fingeringGroups = [];\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = unit.part.phrases[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var _phrase = _step9.value;\n          var _iteratorNormalCompletion14 = true;\n          var _didIteratorError14 = false;\n          var _iteratorError14 = undefined;\n\n          try {\n            for (var _iterator14 = _phrase.bars[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n              var _bar = _step14.value;\n              var _iteratorNormalCompletion15 = true;\n              var _didIteratorError15 = false;\n              var _iteratorError15 = undefined;\n\n              try {\n                for (var _iterator15 = _bar.rhythm.compiledScore[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                  var note = _step15.value;\n\n                  if (note.flags.fingering) fingeringGroups.push({ offset: offset, text: note.flags.fingering.toLowerCase() });else if (note.flags.stroke && note.flags.stroke.length === 2) fingeringGroups.push({ offset: offset, text: note.flags.stroke === 'dd' ? '⤋' : '⤊' });\n                  offset += note.duration;\n                }\n              } catch (err) {\n                _didIteratorError15 = true;\n                _iteratorError15 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion15 && _iterator15.return) {\n                    _iterator15.return();\n                  }\n                } finally {\n                  if (_didIteratorError15) {\n                    throw _iteratorError15;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError14 = true;\n            _iteratorError14 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                _iterator14.return();\n              }\n            } finally {\n              if (_didIteratorError14) {\n                throw _iteratorError14;\n              }\n            }\n          }\n        }\n\n        // get PM word groups\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      offset = 0;\n      var pmGroups = [];\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = unit.part.phrases[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _phrase2 = _step10.value;\n          var _iteratorNormalCompletion16 = true;\n          var _didIteratorError16 = false;\n          var _iteratorError16 = undefined;\n\n          try {\n            for (var _iterator16 = _phrase2.bars[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n              var _bar2 = _step16.value;\n              var _iteratorNormalCompletion17 = true;\n              var _didIteratorError17 = false;\n              var _iteratorError17 = undefined;\n\n              try {\n                for (var _iterator17 = _bar2.rhythm.compiledScore[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                  var _note = _step17.value;\n\n                  if (_note.flags.pm) pmGroups.push({ offset: offset, text: 'PM' });\n                  offset += _note.duration;\n                }\n              } catch (err) {\n                _didIteratorError17 = true;\n                _iteratorError17 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                    _iterator17.return();\n                  }\n                } finally {\n                  if (_didIteratorError17) {\n                    throw _iteratorError17;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError16 = true;\n            _iteratorError16 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion16 && _iterator16.return) {\n                _iterator16.return();\n              }\n            } finally {\n              if (_didIteratorError16) {\n                throw _iteratorError16;\n              }\n            }\n          }\n        }\n\n        // for each phrase in unit\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      offset = 0;\n      var phraseIndex = 0;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = unit.part.phrases[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _phrase3 = _step11.value;\n\n          console.log('\\tphrase ' + (phraseIndex + 1));\n          var lastPhraseInPart = phraseIndex === unit.part.phrases.length - 1;\n\n          // for each bar in phrase\n          var barIndex = 0;\n          var _iteratorNormalCompletion18 = true;\n          var _didIteratorError18 = false;\n          var _iteratorError18 = undefined;\n\n          try {\n            for (var _iterator18 = _phrase3.bars[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n              var _bar3 = _step18.value;\n\n              console.log('\\t\\tbar ' + (barIndex + 1));\n              var lastBarInPhrase = barIndex === _phrase3.bars.length - 1;\n\n              // for each note in rhythm\n              var noteIndex = 0;\n              var _iteratorNormalCompletion19 = true;\n              var _didIteratorError19 = false;\n              var _iteratorError19 = undefined;\n\n              try {\n                for (var _iterator19 = _bar3.rhythm.compiledScore[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                  var _note2 = _step19.value;\n\n                  // note with no chord set (slash)\n                  var phraseNote = JSON.parse(JSON.stringify(_note2));\n                  phraseNote.lastInPhrase = lastBarInPhrase && noteIndex === _bar3.rhythm.compiledScore.length - 1;\n                  notesSlashed.push(phraseNote);\n\n                  // register note with corresponding chord\n                  var chordedPhraseNote = JSON.parse(JSON.stringify(phraseNote));\n                  chordedPhraseNote.chord = _bar3.chords[_note2.placeholderIndex];\n                  if (!chordedPhraseNote.chord) throw new VexTabException('No chord found for placeholder ' + (_note2.placeholderIndex + 1));\n                  notes.push(chordedPhraseNote);\n\n                  // draw staves when we have completed barsPerLine bars or if the part is done\n                  staveDuration += _note2.duration;\n                  var partDone = lastPhraseInPart && phraseNote.lastInPhrase;\n                  if (staveDuration >= songcheat.barsPerLine * barDuration || partDone) {\n                    console.log((partDone ? 'EOP' : 'EOL') + ' @ ' + staveDuration + ' units: drawing ' + notes.length + ' notes stave' + (songcheat.mode.length > 1 ? 's' : ''));\n\n                    // notation: shows unit.name, chords, accents, stems (slashes) and lyrics\n                    // if tablature is not displayed, it also shows strokes/fingering\n                    // it never shows PM and frets\n                    if (songcheat.mode.indexOf('r') >= 0) {\n                      var strokes = songcheat.mode.indexOf('t') < 0;\n                      vextab += VexTab.Notes2Stave(songcheat, offset, notesSlashed, strokes, 'top', unit.name, -1, true, false);\n                      if (strokes && fingeringGroups.length > 0) vextab += VexTab.Text2VexTab(fingeringGroups, barDuration, offset, staveDuration, 11, 'Arial-9-normal'); // PIMA on same line as strokes\n                      if (showLyrics && lyricsGroups.length > 0) vextab += VexTab.Text2VexTab(lyricsGroups, barDuration, offset, staveDuration, strokes ? 13 : 11, 'Times-11-italic');\n                      if (chordGroups.length > 0) vextab += VexTab.Text2VexTab(chordGroups, barDuration, offset, staveDuration, 2, 'Arial-10-normal');\n                      vextab += 'options space=' + (strokes ? 40 : 20) + '\\n';\n                    }\n\n                    // tablature: shows PM, frets and strokes/fingering\n                    // if notation is not displayed, it also shows unit.name, chords, lyrics and stems (if mode \"ts\")\n                    // it never shows accents\n                    if (songcheat.mode.indexOf('t') >= 0) {\n                      if (stems) vextab += 'options space=' + 30 + '\\n';\n                      vextab += VexTab.Notes2Stave(songcheat, offset, notes, true, false, songcheat.mode.indexOf('r') < 0 ? unit.name : false, stems ? -3 : -1, false, true);\n                      if (fingeringGroups.length > 0) vextab += VexTab.Text2VexTab(fingeringGroups, barDuration, offset, staveDuration, 10, 'Arial-9-normal'); // PIMA on same line as strokes\n                      if (pmGroups.length > 0) vextab += VexTab.Text2VexTab(pmGroups, barDuration, offset, staveDuration, 10, 'Arial-9-normal'); // PM on same line as strokes\n                      if (songcheat.mode.indexOf('r') < 0 && showLyrics && lyricsGroups.length > 0) vextab += VexTab.Text2VexTab(lyricsGroups, barDuration, offset, staveDuration, 12, 'Times-11-italic');\n                      if (songcheat.mode.indexOf('r') < 0 && chordGroups.length > 0) vextab += VexTab.Text2VexTab(chordGroups, barDuration, offset, staveDuration, stems ? -1 : 1, 'Arial-10-normal');\n                      vextab += 'options space=' + (songcheat.mode.indexOf('r') ? 30 : 10) + '\\n';\n                    }\n\n                    // space after staves\n                    vextab += 'options space=' + 10 + '\\n';\n\n                    // increment offset\n                    offset += staveDuration;\n\n                    // clear workspace\n                    notes = [];\n                    notesSlashed = [];\n                    staveDuration = 0;\n                  }\n\n                  // next note in rhythm\n                  noteIndex++;\n                }\n\n                // next bar in phrase\n              } catch (err) {\n                _didIteratorError19 = true;\n                _iteratorError19 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                    _iterator19.return();\n                  }\n                } finally {\n                  if (_didIteratorError19) {\n                    throw _iteratorError19;\n                  }\n                }\n              }\n\n              barIndex++;\n            }\n\n            // next phrase in part\n          } catch (err) {\n            _didIteratorError18 = true;\n            _iteratorError18 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                _iterator18.return();\n              }\n            } finally {\n              if (_didIteratorError18) {\n                throw _iteratorError18;\n              }\n            }\n          }\n\n          phraseIndex++;\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return vextab;\n    }\n  }]);\n  return VexTab;\n}();\n\nexport { VexTab, VexTabException };\n//# sourceMappingURL=songcheat-vextab.esm.js.map\n","module.exports = {\n  \"Bass\": require(\"./Bass.json\"),\n  \"BassAmp360\": require(\"./BassAmp360.json\"),\n  \"BassFuzz\": require(\"./BassFuzz.json\"),\n  \"BassFuzz2\": require(\"./BassFuzz2.json\"),\n  \"BassSubDub\": require(\"./BassSubDub.json\"),\n  \"BassSubDub2\": require(\"./BassSubDub2.json\"),\n  \"Brass\": require(\"./Brass.json\"),\n  \"BritBlues\": require(\"./BritBlues.json\"),\n  \"BritBluesDriven\": require(\"./BritBluesDriven.json\"),\n  \"Buzzy1\": require(\"./Buzzy1.json\"),\n  \"Buzzy2\": require(\"./Buzzy2.json\"),\n  \"Celeste\": require(\"./Celeste.json\"),\n  \"ChorusStrings\": require(\"./ChorusStrings.json\"),\n  \"Dissonant1\": require(\"./Dissonant1.json\"),\n  \"Dissonant2\": require(\"./Dissonant2.json\"),\n  \"DissonantPiano\": require(\"./DissonantPiano.json\"),\n  \"DroppedSaw\": require(\"./DroppedSaw.json\"),\n  \"DroppedSquare\": require(\"./DroppedSquare.json\"),\n  \"DynaEPBright\": require(\"./DynaEPBright.json\"),\n  \"DynaEPMed\": require(\"./DynaEPMed.json\"),\n  \"Ethnic33\": require(\"./Ethnic33.json\"),\n  \"Full1\": require(\"./Full1.json\"),\n  \"Full2\": require(\"./Full2.json\"),\n  \"GuitarFuzz\": require(\"./GuitarFuzz.json\"),\n  \"Harsh\": require(\"./Harsh.json\"),\n  \"MklHard\": require(\"./MklHard.json\"),\n  \"Noise\": require(\"./Noise.json\"),\n  \"Organ2\": require(\"./Organ2.json\"),\n  \"Organ3\": require(\"./Organ3.json\"),\n  \"PhonemeAh\": require(\"./PhonemeAh.json\"),\n  \"PhonemeBah\": require(\"./PhonemeBah.json\"),\n  \"PhonemeEe\": require(\"./PhonemeEe.json\"),\n  \"PhonemeO\": require(\"./PhonemeO.json\"),\n  \"PhonemeOoh\": require(\"./PhonemeOoh.json\"),\n  \"PhonemePopAhhhs\": require(\"./PhonemePopAhhhs.json\"),\n  \"Piano\": require(\"./Piano.json\"),\n  \"Pulse\": require(\"./Pulse.json\"),\n  \"PutneyWavering\": require(\"./PutneyWavering.json\"),\n  \"Saw\": require(\"./Saw.json\"),\n  \"Square\": require(\"./Square.json\"),\n  \"TB303Square\": require(\"./TB303Square.json\"),\n  \"Throaty\": require(\"./Throaty.json\"),\n  \"Triangle\": require(\"./Triangle.json\"),\n  \"Trombone\": require(\"./Trombone.json\"),\n  \"TwelveOpTines\": require(\"./TwelveOpTines.json\"),\n  \"TwelveStringGuitar1\": require(\"./TwelveStringGuitar1.json\"),\n  \"WarmSaw\": require(\"./WarmSaw.json\"),\n  \"WarmSquare\": require(\"./WarmSquare.json\"),\n  \"WarmTriangle\": require(\"./WarmTriangle.json\"),\n  \"Wurlitzer\": require(\"./Wurlitzer.json\"),\n  \"Wurlitzer2\": require(\"./Wurlitzer2.json\")\n}\n","import { Utils } from 'songcheat-core'\nimport waveTables from '@mohayonao/wave-tables'\n\nexport class Player {\n  constructor (audioCtx, notes, config) {\n    this.MODE_RHYTHM = 1 // play beeps only\n    this.MODE_BASS = 2 // when there is a strummed chord, play only bass (no effect onindividual strings)\n    this.MODE_CHORDS = 3 // play actual strummed chords\n\n    config = config || {}\n    config.signature = config.signature || {}\n    config.signature.time = config.signature.time || {}\n\n    // audio context\n    this.audioCtx = audioCtx\n\n    // notes to beep\n    this.notes = notes\n\n    // config: loop or not and callback at end if no loop\n    this.loop = config.loop || false\n    this.onDone = config.onDone || null\n    this.onCountdown = config.onCountdown || function () {}\n\n    // config: capo and signature (tempo, time, shuffle)\n    this.capo = config.capo || 0\n    this.tempo = config.signature.tempo || 100\n    this.beatsPerBar = config.signature.time.beatsPerBar || 4\n    this.beatDuration = config.signature.time.beatDuration || ':q'\n    this.shuffle = config.signature.shuffle ? Utils.duration(config.signature.shuffle) : false\n\n    // tuning, defaults to standard tuning\n    this.tuning = config.tuning || [329.63, // E4\n      246.94, // B3\n      196.00, // G3\n      146.83, // D3\n      110.00, // A2\n      82.41\n    ] // E2\n\n    // play control\n    this.stopped = true\n    this.paused = false\n\n    // initialize to defaults\n    this.speed(100)\n    this.setDisto(0)\n    this.setVolume(50)\n    this.setMode(this.MODE_CHORDS)\n    this.setType(config.type || 'Piano')\n  }\n\n  makeDistortionCurve (amount) {\n    let k = typeof amount === 'number' ? amount : 50\n    let nSamples = 44100\n    let curve = new Float32Array(nSamples)\n    let deg = Math.PI / 180\n    for (let i = 0; i < nSamples; ++i) {\n      let x = i * 2 / nSamples - 1\n      curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x))\n    }\n    return curve\n  }\n\n  /**\n   * duration of the tone in milliseconds\n   * frequency of the tone in hertz\n   * volume of the tone between 0 and 1\n   * type of tone. Possible values are sine, square, sawtooth, triangle, and custom.\n   * callback to use on end of tone\n   */\n  sound (time, duration, frequency, volume, distortion, type, onended) {\n    let audioCtx = this.audioCtx\n    let gainNode = audioCtx.createGain()\n    gainNode.gain.value = volume\n\n    if (distortion) {\n      let distoNode = audioCtx.createWaveShaper()\n      distoNode.curve = this.makeDistortionCurve(parseInt(distortion, 10))\n      distoNode.oversample = '4x'\n      distoNode.connect(audioCtx.destination)\n      gainNode.connect(distoNode)\n    } else gainNode.connect(audioCtx.destination)\n\n    let oscillator = audioCtx.createOscillator()\n    oscillator.connect(gainNode)\n\n    oscillator.frequency.value = frequency\n    oscillator.onended = onended\n\n    // type can be a periodic wave or a standard oscillator type\n    if (waveTables[type]) oscillator.setPeriodicWave(audioCtx.createPeriodicWave(waveTables[type].real, waveTables[type].imag))\n    else oscillator.type = type\n\n    oscillator.start(time)\n    oscillator.stop(time + duration)\n  }\n\n  chord2frequencies (chord, strings, transpose) {\n    let freqs = []\n    for (let o of Utils.chordStrings(chord, strings)) {\n      if (!o.mute) freqs.push(this.tuning[o.string - 1] * Math.pow(Math.pow(2, 1 / 12), transpose + o.fret))\n    }\n    return freqs\n  }\n\n  ms_ (note) {\n    // base duration of note\n    let ms_ = note.duration * this.msPerUnit\n\n    // change duration proportions for shuffled notes\n    if (this.shuffle && note.duration === this.shuffle) {\n      if (note.offset % (2 * this.shuffle) === 0) ms_ *= 1.3333\n      else ms_ *= 0.6667\n    }\n\n    return ms_\n  }\n\n  note_ (time) {\n    let audioCtx = this.audioCtx\n    var self = this\n\n    // stop or pause requested\n    if (this.stopped || this.paused) {\n      this.donePlaying = true\n      return true\n    }\n\n    // get note to play\n    if (!this.notes) return false\n    let note = this.notes[this.noteIndex]\n    if (!note) return false\n\n    let isBar = note.offset === 0\n    let isBeat = note.offset % Utils.duration(this.beatDuration) === 0\n    let isUp = note.flags.stroke === 'u' || note.flags.stroke === 'uu'\n    let isDown = note.flags.stroke === 'd' || note.flags.stroke === 'dd'\n    let isArpeggiated = note.flags.stroke && note.flags.stroke.length === 2\n\n    // get number of ms that this note should last\n    let ms = note.tied ? 0 : this.ms_(note)\n\n    // consume next ties note(s) if any\n    for (let nextNoteIndex = this.noteIndex + 1; nextNoteIndex < this.notes.length && this.notes[nextNoteIndex].tied; nextNoteIndex++) ms += this.ms_(this.notes[nextNoteIndex])\n\n    // beep or chord volume\n    let volume = 0.25 * (this.volume / 100.0) // base gain from 0 to 1.5 according to user volume slider\n    if (note.flags.accent) volume *= 1.5 // increase gain by 50% if accent\n    if (note.rest) volume = 0 // silence if rest\n\n    // beep frequency\n    let freqs = [440 * 1.5]\n    if (isBar) freqs[0] *= 2 // octave\n    else if (isBeat) freqs[0] *= 1.5 // quinte\n\n    // get note chord, ignored in rhythm mode\n    let chord = this.mode === this.MODE_RHYTHM ? null : note.chord\n\n    // beep duration is 5 ms\n    // actual notes are played for the whole duration if tied otherwise for 90%\n    let beepduration = chord ? (note.tied ? ms : ms * 0.90) : Math.min(ms, 5)\n\n    // for rhythm type is always square and no distortion, for actual notes use the user-defined settings\n    let type = chord ? this.type : 'square'\n    let distortion = chord ? this.distortion : null\n\n    // played chord (for a rest, chord is set but strings is not)\n    if (chord && note.strings) {\n      // get frequencies for chord notes\n      freqs = this.chord2frequencies(chord, this.mode === this.MODE_BASS ? note.strings.replace(/\\*/g, 'B') : note.strings, this.capo)\n\n      // reverse string order if up stroke\n      if (isUp) freqs = freqs.reverse()\n\n      // adjust volume according to number of simultaneous notes\n      // volume = volume / (2.0 * Math.sqrt(freqs.length));\n      // UPDATE: no, bass among chords is otherwise louder than it should\n      // UPDATE: instead increase volume only if BASS ONLY mode\n      if (this.mode === this.MODE_BASS) volume *= 3\n    }\n\n    // set next note to play\n    this.noteIndex = (this.noteIndex + 1) % this.notes.length\n\n    // info message, scheduled to display at the same time as oscillator will play our sound\n    let what = note.rest ? 'REST' : (note.tied ? 'TIED' : (chord ? chord.name + '/' + freqs.length + ' ' + (isDown ? 'B' : '') + (isUp ? 'H' : '') : 'BEEP'))\n    let message = (isBar ? '\\n|\\t' : '\\t') + ('[' + what + ']').padEnd(10, ' ') + (note.offset + Utils.durationcode(note.duration)).padEnd(5, ' ') + ' ' + ms.toFixed(0) + ' ms [VOL ' + (volume * 100) + '] ' + (isBar ? ' [BAR]' : (isBeat ? ' [BEAT]' : '')) + (note.flags.accent ? ' [ACCENT]' : '')\n    setTimeout(function () { console.info(message) }, Math.max(0, time - audioCtx.currentTime) * 1000)\n\n    // jump to next note if tied\n    if (note.tied) {\n      self.note_(time)\n      return\n    }\n\n    // play beep (1 note) or chord (N notes)\n    let fIndex = 0\n    let delay = 0\n    for (let frequency of freqs) {\n      // handle next node when last note has done playing\n      this.sound(time + delay / 1000.0, (beepduration - delay) / 1000.0, frequency, volume, distortion, type, fIndex < freqs.length - 1 ? null : function () {\n        // back on first note: stop and callback if not loop\n        if (self.noteIndex === 0 && !self.loop) {\n          self.stop()\n          if (self.onDone) self.onDone()\n        } else self.note_(time + ms / 1000.0)\n      })\n\n      // simulate the fact that strings hit first will sound first (but they'll all stop at the same time, hence substrating delay from beepduration above)\n      // when a chord is arpeggiated, take 3/4 of available duration to hit strings the one after the other\n      delay += (isArpeggiated ? (beepduration * 0.75) / freqs.length : (note.tied ? 0 : 10))\n\n      // simulate the fact that first hit strings will sound louder\n      volume *= 0.95\n\n      fIndex++\n    }\n  }\n\n  stop () {\n    this.stopped = true\n    this.paused = false\n    if (this.cd) {\n      clearTimeout(this.cd)\n      this.onCountdown()\n    }\n  }\n\n  pause () {\n    this.stopped = false\n    this.paused = true\n    if (this.cd) {\n      clearTimeout(this.cd)\n      this.onCountdown()\n    }\n  }\n\n  play (countdown) {\n    let audioCtx = this.audioCtx\n    let self = this\n\n    if (!this.paused) this.noteIndex = 0\n    this.stopped = false\n    this.paused = false\n\n    this.onCountdown(countdown)\n    if (countdown) this.cd = setTimeout(function () { self.play(countdown - 1) }, 1000)\n    else {\n      // compute for each note the offset wrt the bar it's contained in\n      let offset = 0\n      for (let note of this.notes) {\n        note.offset = offset\n        offset = (offset + note.duration) % (this.beatsPerBar * Utils.duration(this.beatDuration))\n      }\n\n      this.note_(audioCtx.currentTime)\n    }\n  }\n\n  rewind () {\n    if (this.stopped) return\n\n    if (this.paused) {\n      this.noteIndex = 0\n      return\n    }\n\n    let self = this\n    this.donePlaying = false\n    this.stop()\n    let recfun = function () {\n      if (self.donePlaying) self.play()\n      else setTimeout(recfun, 100)\n    }\n    recfun()\n  }\n\n  getTempo () {\n    return (this.tempo * this.speedpct / 100.0).toFixed(0)\n  }\n\n  speed (pct) {\n    if (pct < 0) throw new Error('Invalid tempo percentage: ' + pct)\n\n    this.speedpct = pct\n\n    // compute ms per duration unit based on given tempo and beat duration\n    let msPerBeat = 60000 / (this.tempo * this.speedpct / 100.0) // ms/beat = ms/minute : beats/minute\n    this.msPerUnit = msPerBeat / Utils.duration(this.beatDuration) // ms/unit = ms/beat : units/beat\n    console.info('Player gone to ' + msPerBeat + ' ms / beat')\n  }\n\n  speedup (step) {\n    this.speed(Math.min(500, this.speedpct + step))\n  }\n\n  slowdown (step) {\n    this.speed(Math.max(20, this.speedpct - step))\n  }\n\n  setMode (mode) {\n    this.mode = parseInt(mode, 10)\n    console.info('Player gone to mode ' + mode)\n  }\n\n  setType (type) {\n    this.type = type\n    console.info('Player gone to type ' + type)\n  }\n\n  setDisto (d) {\n    this.distortion = parseInt(d, 10)\n    console.info('Player gone to disto ' + d)\n  }\n\n  setVolume (v) {\n    this.volume = parseInt(v, 10)\n    console.info('Player gone to volume ' + v)\n  }\n}\n","import { Utils } from 'songcheat-core'\nimport { Player, waveTables } from 'songcheat-player'\n\n// https://github.com/rollup/rollup/issues/1803/\n// import $ from 'jQuery'\nlet $ = window.jQuery\n\nexport function PlayerUI (audioCtx, songcheat, notes, loop) {\n  var self = this\n\n  if (!notes) {\n    // whole song (or selected unit)\n    notes = []\n    let unitIndex = 0\n    for (let unit of songcheat.structure) {\n      if (songcheat.showUnitIndex !== null && songcheat.showUnitIndex !== unitIndex) { unitIndex++; continue }\n      for (let phrase of unit.part.phrases) {\n        for (let bar of phrase.bars) {\n          for (let note of bar.rhythm.compiledScore) {\n            let chordedNote = JSON.parse(JSON.stringify(note))\n            chordedNote.chord = bar.chords[note.placeholderIndex % bar.chords.length]\n            if (!chordedNote.chord) throw new Error('No chord found for placeholder ' + (note.placeholderIndex + 1))\n            notes.push(chordedNote)\n          }\n        }\n      }\n      unitIndex++\n    }\n  }\n\n  // create player\n  let player = new Player(audioCtx, notes, {\n    loop: loop,\n    capo: parseInt(songcheat.capo, 10),\n    signature: songcheat.signature,\n    type: songcheat.wave,\n    onDone: function () { $stopLink.trigger('click') },\n    onCountdown: function (c) { $countdownZone.html(c || '') }\n  })\n\n  // controls\n  this.$div = $('<div>').css({ 'margin-top': '10px', 'position': 'relative' })\n\n  let $speedMention = $('<span>').css({ 'font-size': '.9em', 'font-weight': 'bold', 'padding-left': '10px' })\n  let updateSpeed = function () {\n    $speedMention.html(player.getTempo() + ' bpm')\n    $tempoSlider.val(player.speedpct)\n  }\n  let $countdownZone = $('<span>').css({ 'font-size': '4em', 'font-weight': 'normal', 'color': 'red', 'text-shadow': '4px 4px 2px rgba(200, 150, 150, 1)', 'position': 'absolute', 'top': '10px', 'right': '10px' })\n\n  let $speed100Link = $('<a>').css({ 'padding-left': '10px' }).html('Original').on('click', function () {\n    player.speed(100)\n    updateSpeed()\n  })\n\n  let $playLink = $('<a>').html('&#9658;').on('click', function () {\n    player.play(player.paused || loop ? 0 : 3)\n    self.$div.find('.autohide').show()\n    $speedMention.show()\n    $playLink.hide()\n  })\n\n  let $rewindLink = $('<a>').html('&#9668;').on('click', function () {\n    player.rewind()\n  })\n\n  let $pauseLink = $('<a>').html('&#10074;&#10074;').on('click', function () {\n    player.pause()\n    self.$div.find('.autohide').show()\n    $speedMention.show()\n    $pauseLink.hide()\n  })\n\n  let $stopLink = $('<a>').html('&#9724').on('click', function () {\n    player.stop()\n    self.$div.find('.autohide').hide()\n    $speedMention.hide()\n    $playLink.show()\n  })\n\n  this.$div\n    .append($playLink)\n    .append($pauseLink)\n    .append($stopLink)\n    .append($rewindLink)\n    .append('&nbsp;&nbsp;')\n    .append($countdownZone)\n    .append('<hr class=\"autohide\" style=\"clear:both; border:1px solid #ccc\"/>')\n\n  let unique = Date.now()\n\n  // enable mode and type switch if at least one actual musical note found (with chords and strings to play)\n  let musicalSwitches = false\n  for (let note of notes) { if (note.chord && note.strings) { musicalSwitches = true; break } }\n  if (musicalSwitches) {\n    let $divMusicalSwitches = $(\"<div style='float:right'>\")\n    this.$div.append($divMusicalSwitches)\n\n    // mode switch\n    $divMusicalSwitches.append($('<div class=\"autohide\">').css({ 'margin-top': '10px', 'display': 'block' })\n      .append($('<input type=\"radio\" name=\"modeswitch' + unique + '\" value=\"' + player.MODE_CHORDS + '\" checked>')).append(' Chords ')\n      .append($('<input type=\"radio\" name=\"modeswitch' + unique + '\" value=\"' + player.MODE_BASS + '\">')).append(' Bass only ')\n      .append($('<input type=\"radio\" name=\"modeswitch' + unique + '\" value=\"' + player.MODE_RHYTHM + '\">')).append(' Rhythm '))\n    this.$div.find('input[name=modeswitch' + unique + ']').change(function () { player.setMode($(this).val()) })\n\n    // type switch\n    let $typeSwitch = $('<select>')\n    $divMusicalSwitches.append($('<div class=\"autohide\">').css({ 'margin-top': '15px', 'display': 'block' }).append('Wave form: ').append($typeSwitch))\n    for (let type of ['sine', 'square', 'sawtooth', 'triangle']) $typeSwitch.append($('<option>').attr('selected', player.type === type).attr('value', type).text('(' + type + ')'))\n    for (let instrument in waveTables) $typeSwitch.append($('<option>').attr('selected', player.type === instrument).attr('value', instrument).text(instrument))\n    $typeSwitch.change(function () { player.setType($(this).val()) })\n\n    // disto slider\n    let $distoSlider = $('<input type=\"range\" min=\"0\" max=\"100\" value=\"' + player.distortion + '\" class=\"slider\" style=\"margin-top: 10px\">')\n    // $divMusicalSwitches.append($('<div class=\"autohide\">').css({ 'margin-top': '5px', 'display': 'block' }).append(\"Distortion: \").append($distoSlider));\n    $distoSlider.on('input', function () { player.setDisto(parseInt($(this).val(), 10)) })\n    $distoSlider.on('change', function () { player.setDisto(parseInt($(this).val(), 10)) })\n  }\n\n  // tempo slider\n  let $tempoSlider = $('<input type=\"range\" min=\"1\" max=\"200\" value=\"' + player.speedpct + '\" class=\"slider\" style=\"margin-top: 10px\">')\n  this.$div.append($('<div class=\"autohide\">').css({ 'margin-top': '5px', 'display': 'block' }).append('Tempo: ').append($tempoSlider).append($speedMention).append($speed100Link))\n  $tempoSlider.on('input', function () {\n    player.speed(parseInt($(this).val(), 10))\n    updateSpeed()\n  })\n  $tempoSlider.on('change', function () {\n    player.speed(parseInt($(this).val(), 10))\n    updateSpeed()\n  })\n\n  // volume slider\n  let $volumeSlider = $('<input type=\"range\" min=\"0\" max=\"100\" value=\"' + player.volume + '\" class=\"slider\" style=\"margin-top: 10px\">')\n  this.$div.append($('<div class=\"autohide\">').css({ 'margin-top': '5px', 'display': 'block' }).append('Volume: ').append($volumeSlider))\n  $volumeSlider.on('input', function () { player.setVolume(parseInt($(this).val(), 10)) })\n  $volumeSlider.on('change', function () { player.setVolume(parseInt($(this).val(), 10)) })\n\n  // allow to disable shuffle if song has a shuffle defined\n  if (songcheat.signature.shuffle) {\n    this.$div.append($('<div class=\"autohide\">').css({ 'margin-top': '15px', 'display': 'block' })\n      .append($('<input type=\"radio\" name=\"shuffleswitch' + unique + '\" value=\"on\" checked>')).append(' Shuffle On ')\n      .append($('<input type=\"radio\" name=\"shuffleswitch' + unique + '\" value=\"off\">')).append(' Shuffle Off '))\n    this.$div.find('input[name=shuffleswitch' + unique + ']').change(function () {\n      player.shuffle = $(this).val() === 'on' ? Utils.duration(songcheat.signature.shuffle) : null\n    })\n  }\n\n  this.$div.find('a').css({ 'cursor': 'pointer', 'font-size': '1em', 'margin-right': '10px' }).addClass('autohide')\n\n  // initialize in stopped state\n  updateSpeed()\n  $stopLink.trigger('click')\n}\n\nPlayerUI.prototype.div = function () {\n  return this.$div\n}\n","import { Utils, Compiler } from 'songcheat-core'\nimport { ChordPix } from 'songcheat-chordpix'\nimport { VexTab as SongcheatVexTab } from 'songcheat-vextab'\nimport { PlayerUI } from './src/player_ui.js'\nimport samples from 'songcheat-samples'\n\n// create audio context\nlet audioCtx = new (window.AudioContext || window.webkitAudioContext || window.audioContext)()\n\n// https://github.com/rollup/rollup/issues/1803/\n// import $ from 'jQuery'\nlet $ = window.jQuery\n\n// https://github.com/rollup/rollup/issues/1803/\n// import { VexTab, Artist, Vex } from 'vextab'\nlet VexTab = window.VexTab\nlet Artist = window.Artist\nlet Vex = window.Vex\n\nlet DEBUG = 0\nlet localStorage = window.localStorage\nlet compiler = null\n\nArtist.NOLOGO = true\n\nfunction addEvent (elem, event, fn) {\n  if (elem.addEventListener) return elem.addEventListener(event, fn, false)\n  elem.attachEvent('on' + event, function () { return (fn.call(elem, window.event)) })\n}\n\nfunction onChange (elem, fn, data) {\n  var priorValue = elem.value\n\n  function checkNotify (e, delay) {\n    // notify if actually changed\n    if (elem.value !== priorValue) {\n      priorValue = elem.value\n      fn.call(this, e, data)\n    } else {\n      // the actual data change happens after some events so we queue a check\n      if (delay) setTimeout(function () { checkNotify(e, false) }, 0)\n    }\n  }\n\n  var events = ['keyup', false, 'blur', false, /* \"focus\", false, */ 'drop', true, 'change', false, 'input', false, 'paste', true, 'cut', true, 'copy', true]\n  for (let i = 0; i < events.length; i += 2) addEvent(elem, events[i], function (e) { checkNotify.call(this, e, events[i + 1]) })\n}\n\nfunction go (song, songcheat) {\n  let data = { 'song': song, 'debug': DEBUG }\n  for (let p of ['mode', 'lyricsMode', 'showUnit', 'maxsp', 'barsPerLine', 'splitUnits', 'splitParts', 'partdisplay']) data[p] = songcheat[p]\n  window.location.href = 'index.html?' + Utils.encodeQueryData(data)\n}\n\nfunction songcheat (songcheat, $divScore, $divChords, $divParts, $divStructure, $divLyrics, $divRhythms, scoreWidth, chordWidth, rhythmsWidth) {\n  var get = new window.URLSearchParams(window.location.search)\n  DEBUG = parseInt(get.get('debug'), 10) || DEBUG // debug level\n\n  scoreWidth = scoreWidth || 800\n  chordWidth = chordWidth || 250\n\n  let canvas = $divScore[0]\n  canvas.getContext('2d')\n\n  // default values for mode, bars per line and scale\n  songcheat.scale = songcheat.scale || 0.92\n  songcheat.mode = songcheat.mode || 'rt'\n  songcheat.lyricsMode = songcheat.lyricsMode || 's'\n  songcheat.showUnit = songcheat.showUnit || '*'\n  songcheat.barsPerLine = songcheat.barsPerLine || 4\n  songcheat.maxsp = typeof songcheat.maxsp === 'undefined' ? 1 : songcheat.maxsp\n  songcheat.splitUnits = typeof songcheat.splitUnits === 'undefined' ? 0 : songcheat.splitUnits\n  songcheat.splitParts = typeof songcheat.splitParts === 'undefined' ? 4 : songcheat.splitParts\n  songcheat.partdisplay = songcheat.partdisplay || 'compact'\n\n  // settings that may be forced in GET\n  songcheat.mode = get.get('mode') || songcheat.mode\n  songcheat.lyricsMode = get.get('lyricsMode') || songcheat.lyricsMode\n  songcheat.showUnit = get.get('showUnit') || songcheat.showUnit\n  songcheat.barsPerLine = get.get('barsPerLine') ? parseInt(get.get('barsPerLine'), 10) : songcheat.barsPerLine\n  songcheat.maxsp = get.get('maxsp') ? parseInt(get.get('maxsp'), 10) : songcheat.maxsp\n  songcheat.splitUnits = get.get('splitUnits') ? parseInt(get.get('splitUnits'), 10) : songcheat.splitUnits\n  songcheat.splitParts = get.get('splitParts') ? parseInt(get.get('splitParts'), 10) : songcheat.splitParts\n  songcheat.partdisplay = get.get('partdisplay') || songcheat.partdisplay\n\n  // ensure showUnit is within the bounds\n  songcheat.showUnitIndex = songcheat.showUnit === '*' ? null : Math.min(songcheat.structure.length - 1, parseInt(songcheat.showUnit, 10))\n  if (songcheat.showUnitIndex < 0) songcheat.showUnitIndex = null\n  songcheat.showUnit = songcheat.showUnitIndex !== null ? songcheat.showUnitIndex : '*'\n\n  // compile\n  try {\n    compiler = new Compiler(songcheat, DEBUG)\n    songcheat = compiler.scc\n  } catch (e) {\n    $divScore.parent().append($('<p>').html(e.message).css('color', 'red'))\n    console.error(e)\n    return false\n  }\n\n  // links to other songs\n  $('a[rel]').click(function () {\n    go(parseInt($(this).attr('rel'), 10) + 1, songcheat)\n  })\n\n  // build unit select\n  let unitIndex = 0\n  for (let unit of songcheat.structure) $('select[name=showUnit]').append($('<option>').val(unitIndex++).text(unit.name))\n\n  // for each user controlled setting\n  $('select').each(function () {\n    // initialize\n    $(this).val(songcheat[$(this).attr('name')])\n\n    // reload on change\n    $(this).change(function () {\n      songcheat[$(this).attr('name')] = $(this).val()\n      go(window.scIndex + 1, songcheat)\n    })\n  })\n\n  // shuffle\n  if (songcheat.signature.shuffle) {\n    $('#left h3:first').append($('<span>').html('<br/>Shuffle ' + (songcheat.signature.shuffle === ':4' ? 'quarter notes' : songcheat.signature.shuffle.substr(1) + 'th notes')))\n  }\n\n  // shuffle 8th image\n  if (songcheat.signature.shuffle === ':8') {\n    $('#left h3:first').append($('<img>').css({ 'padding-left': '50px', 'width': '100px', 'display': 'inline', 'vertical-align': 'bottom' }).attr('src', 'img/shuffle_8th.svg'))\n  }\n\n  // chord diagrams\n  for (let chord of songcheat.chords) {\n    var url = DEBUG ? 'img/missing_diagram.png' : ChordPix.url(chord, chordWidth)\n    let $cDiv = $('<div>').css({ 'display': 'inline-block', 'vertical-align': 'top' })\n    $divChords.append($cDiv)\n    $cDiv.append($('<img>').attr('src', url).attr('title', chord.comment).css({ 'display': 'block' /* removes whitespace below image */, 'width': chordWidth + 'px' }))\n    $cDiv.append($('<p>').css({ 'width': chordWidth + 'px', 'font-size': '0.85em', 'text-align': 'center', 'margin-top': '0px' }).html(chord.comment))\n  }\n\n  //  ascii parts\n  for (let part of songcheat.parts) {\n    let $divPart = $('<div>').css({ 'color': part.color })\n    let $partsZone = $('<p>')\n    $divPart.append($('<p>').css({ 'font-weight': 'bold', 'text-decoration': 'normal', 'margin-bottom': '0px' }).html(part.name))\n    $divPart.append($partsZone)\n    $divParts.append($divPart)\n    displayParts(songcheat, part, $partsZone)\n  }\n\n  //  ascii structure\n  for (let unit of songcheat.structure) {\n    $divStructure.append($('<p>').css({ 'font-weight': 'bold', 'margin': '5px 0px', 'color': unit.part.color }).html('[' + unit.name + ']'))\n  }\n\n  //  ascii lyrics\n  for (let unit of songcheat.structure) {\n    // load from local storage\n    let lskey = 'SongCheatLyrics.' + songcheat.id + '.unit.' + unit.name\n    unit.lyrics = localStorage.getItem(lskey) || unit.lyrics\n\n    // view zone\n    let $divUnit = $('<div>').css({ 'color': unit.part.color })\n    let $editLink = $('<a>').html('Edit').css('text-decoration', 'underline').css('cursor', 'pointer').css('font-size', '0.75em').css('float', 'right').css('margin-right', '10px')\n    let $lyricsZone = $('<p>').css('line-height', '150%')\n    $divUnit.append($('<p>').css({ 'font-weight': 'bold', 'text-decoration': 'normal', 'margin-bottom': '2px', 'margin-top': '35px' }).html('[' + unit.name + '] ').append($editLink))\n    $divUnit.append($lyricsZone)\n    $divLyrics.append($divUnit)\n    displayLyrics(songcheat, unit, $lyricsZone)\n\n    // hidden edit zone\n    let $divUnitEdit = $('<div>')\n    let $closeLink = $('<a>').html('Close').css('text-decoration', 'underline').css('cursor', 'pointer')\n    $divUnitEdit.append($('<textarea>').css('font-size', '1em').css('width', '400px').css('height', '200px'))\n    $divUnitEdit.append('<br/>').append($closeLink)\n    $divLyrics.append($divUnitEdit.hide())\n\n    // save lyrics and update ui\n    let saveAndUpdate = function (updateVextab) {\n      // save to local storage\n      unit.lyrics = $(this).val()\n      localStorage.setItem(lskey, unit.lyrics)\n\n      // re-display ascii\n      displayLyrics(songcheat, unit, $lyricsZone)\n\n      if (updateVextab) {\n        // recreate canvas\n        let $canvas = $('<canvas>')\n        $(canvas).after($canvas).remove()\n        canvas = $canvas[0]\n\n        // reload vextab score\n        let renderer = new Vex.Flow.Renderer(canvas, Vex.Flow.Renderer.Backends.CANVAS)\n        let artist = new Artist(10, 10, scoreWidth, { scale: songcheat.scale })\n        let vextab = new VexTab(artist)\n        console.info('Parsing score...')\n        vextab.parse(SongcheatVexTab.Songcheat2VexTab(songcheat))\n        console.info('Rendering score...')\n        artist.render(renderer)\n        console.info('Score done!')\n      }\n    }\n\n    // edit action\n    $editLink.on('click', function () {\n      $divUnit.find('p:last') // .hide();\n      $divUnitEdit.show().find('textarea').val(unit.lyrics).focus()\n    })\n\n    // close action\n    $closeLink.on('click', function () {\n      $divUnitEdit.hide()\n      saveAndUpdate.call($divUnitEdit.find('textarea')[0], true)\n    })\n\n    // auto-save\n    onChange($divUnitEdit.find('textarea')[0], function (e) {\n      console.log('Auto saving on event ' + e.type)\n      saveAndUpdate.call(this, true)\n    })\n  }\n\n  // parse and render rhythms with vextab\n  for (let rhythm of songcheat.rhythms) {\n    let $divRhythm = $('<div>')\n    $divRhythms.append($divRhythm)\n\n    // player controls\n    $divRhythm.before(new PlayerUI(audioCtx, songcheat, rhythm.compiledScore, true).div())\n\n    // warning if not a whole number of bars\n    if (rhythm.duration % songcheat.barDuration) {\n      let warning = 'Rhythm ' + rhythm.id + ' is currently equivalent to ' + Math.floor(rhythm.duration / songcheat.barDuration) + ' bar(s) and ' + Utils.durationcodes(rhythm.duration % songcheat.barDuration) + '. A rhythm unit should be equivalent to a whole number of bars.'\n      $divRhythm.before($('<p>').addClass('warning').css('color', 'orange').html('Warning: ' + warning))\n    }\n\n    try {\n      console.info('Converting rhythm to vextab score...')\n      let score = 'options tempo=' + songcheat.signature.tempo + ' player=false tab-stems=false tab-stem-direction=up\\n'\n      score += SongcheatVexTab.Notes2Stave(songcheat, 0, rhythm.compiledScore, true, 'top', 'Rhythm ' + (rhythm.name || rhythm.id), 1, true, false) + ' options space=20'\n      console.info('Parsing score...')\n      let artist = new Artist(10, 10, rhythmsWidth, { scale: 1.0 })\n      let vextab = new VexTab(artist)\n      vextab.parse(score)\n      console.info('Rendering score...')\n      artist.render(new Vex.Flow.Renderer($divRhythm[0], Vex.Flow.Renderer.Backends.SVG))\n      console.info('Score done!')\n    } catch (e) {\n      $divRhythm.html(e.message).css('color', 'red')\n      console.error(e)\n    }\n  }\n\n    // player controls\n  $(canvas).before(new PlayerUI(audioCtx, songcheat).div())\n\n    // parse and render full song score with vextab\n  try {\n    console.info('Converting songcheat to vextab score...')\n    let score = SongcheatVexTab.Songcheat2VexTab(songcheat)\n    console.info('Parsing score...')\n    let artist = new Artist(10, 10, scoreWidth, { scale: songcheat.scale })\n    let vextab = new VexTab(artist)\n    vextab.parse(score)\n    console.info('Rendering score...')\n    artist.render(new Vex.Flow.Renderer(canvas, Vex.Flow.Renderer.Backends.CANVAS))\n    console.info('Score done!')\n  } catch (e) {\n    $divScore.parent().append($('<p>').html(e.message).css('color', 'red'))\n    console.error(e)\n  }\n}\n\nfunction displayParts (songcheat, part, $partsZone) {\n  // clear eveyrthing\n  $partsZone.parent().find('p.warning,p.error').remove()\n  $partsZone.html('')\n\n  try {\n    // if compact part display enabled, set maxsp = 1\n    // if full part display enabled, force maxsp = 0: we want the exact position of chords\n    // always split by N bars (no lyrics so split as entered makes no sense, splitParts is never 0)\n    // we can use chord changes mode \"rhythm\", \"bar\" or \"phrase\", use \"rhythm\" as for vextab\n    $partsZone.append(compiler.getPartText(part, songcheat.partdisplay === 'compact' ? 1 : 0, songcheat.splitParts, 'rhythm', false))\n  } catch (e) {\n    // display fatal error while parsing or building lyrics\n    $partsZone.before($('<p>').addClass('error').css('color', 'red').html('Error: ' + e.message))\n    console.error(e)\n  }\n}\n\nfunction displayLyrics (songcheat, unit, $lyricsZone) {\n  // clear eveyrthing\n  $lyricsZone.parent().find('p.warning,p.error').remove()\n  $lyricsZone.html('')\n\n  try {\n    // parse lyrics\n    let warnings = compiler.parseLyrics(unit)\n\n    // display parser warnings\n    for (let warning of warnings) {\n      $lyricsZone.before($('<p>').addClass('warning').css('color', 'orange').html('Warning: ' + warning))\n      console.warn('[' + unit.name + '] ' + warning)\n    }\n\n    // build and display lyrics\n    // we can use chord changes mode \"rhythm\", \"bar\" or \"phrase\", use \"rhythm\" as for vextab\n    $lyricsZone.append(compiler.getUnitText(unit, songcheat.maxsp, songcheat.splitUnits, 'rhythm', songcheat.maxsp !== 1))\n  } catch (e) {\n    // display fatal error while parsing or building lyrics\n    $lyricsZone.before($('<p>').addClass('error').css('color', 'red').html('Error: ' + e.message))\n    console.error(e)\n  }\n}\n\nvar get = new window.URLSearchParams(window.location.search)\nlet scIndex = window.scIndex = (parseInt(get.get('song'), 10) || 1) - 1\nlet sc = samples[scIndex]\nsc.id = scIndex + 1 // simulate a mongodb id for saving lyrics\n\ndocument.title = sc.title + ' | ' + document.title\n$('#left h1').html(sc.title)\n$('#left h2').html(sc.artist + ', ' + sc.year)\n$('#left h3.tempo').html('Tempo: ' + sc.signature.tempo + ' bpm')\n$('#left p').html(sc.comment)\n\n$('#left h3.capo').html('Capo: ' + (sc.capo > 0 ? sc.capo : 'n/a'))\n$('#left h3.tuning').html('Tuning: ' + sc.tuning)\n\n$('#middle h4, #right h4').css('text-decoration', 'underline').css('font-size', '1.1em').css('margin', '0.5em 0em')\n\nlet barsPerLine = get.get('barsPerLine') ? parseInt(get.get('barsPerLine'), 10) : (sc.barsPerLine || 4)\nlet naturalSize = $(window).width() * 0.45\nlet absMinSize = 640\nlet minSize = Math.max(barsPerLine * 300, absMinSize)\nlet maxSize = Math.max(barsPerLine * 450, absMinSize)\nvar scoreWidth = Math.min(maxSize, Math.max(minSize, naturalSize))\nvar rhythmWidth = Math.min(750, Math.max(400, $(window).width() * 0.24))\n$('#right').css('width', scoreWidth + 'px')\n\nvar _scIndex = 0\nfor (var sc_ of samples) {\n  /* if (_scIndex != scIndex) */\n  $('#links').append($(\"<a style='font-size: 0.9em; color: black; cursor: pointer; text-decoration:underline'>\").attr('rel', _scIndex).html(sc_.title + ' (' + sc_.artist + ', ' + sc_.year + ')')).append('<br/>')\n  _scIndex++\n}\n\nsongcheat(sc, $('#score'), $('#chords'), $('#parts'), $('#structure'), $('#lyrics'), $('#rhythms'), scoreWidth, 175, rhythmWidth)\n$('body').show()\n"],"names":["_typeof","classCallCheck","createClass","toConsumableArray","Utils","ParserException","Parser_","Parser","MIN_LYRICS_BARLEN","LYRICS_SUM_DURATIONS","KEEP_EMPTY_LINES","CompilerException","Compiler_","Compiler","classCallCheck$1","createClass$1","toConsumableArray$1","DEBUG","VexTab","$","SongcheatVexTab"],"mappings":"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"}